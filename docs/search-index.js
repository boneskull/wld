var searchIndex = JSON.parse('{\
"adler32":{"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can \'forget\'…",null,null],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",null,[[["read",8]],["result",6]]],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32",3]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[],["rollingadler32",3]]],[11,"from_buffer","","Convenience function initializing a context from the hash…",0,[[],["rollingadler32",3]]],[11,"hash","","Returns the current hash.",0,[[]]],[11,"remove","","Removes the given `byte` that was fed to the algorithm…",0,[[]]],[11,"update","","Feeds a new `byte` to the algorithm to update the hash.",0,[[]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the hash.",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["rollingadler32",3]]]],"p":[[3,"RollingAdler32"]]},\
"approx":{"doc":"A crate that provides facilities for testing the…","i":[[3,"AbsDiff","approx","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",0,null],[3,"Relative","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",1,null],[12,"max_relative","","The relative tolerance for testing values that are…",1,null],[3,"Ulps","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",2,null],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",2,null],[8,"AbsDiffEq","","Equality that is defined using the absolute difference of…",null,null],[16,"Epsilon","","Used for specifying relative comparisons.",3,null],[10,"default_epsilon","","The default tolerance to use when testing values that are…",3,[[]]],[10,"abs_diff_eq","","A test for equality that uses the absolute difference to…",3,[[]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[]]],[8,"RelativeEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_relative","","The default relative tolerance for testing values that are…",4,[[]]],[10,"relative_eq","","A test for equality that uses a relative comparison if the…",4,[[]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[]]],[8,"UlpsEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are…",5,[[]]],[10,"ulps_eq","","A test for equality that uses units in the last place…",5,[[]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[]]],[11,"epsilon","","Replace the epsilon value with the one specified.",0,[[],["absdiff",3]]],[11,"eq","","Peform the equality comparison",0,[[]]],[11,"ne","","Peform the inequality comparison",0,[[]]],[11,"epsilon","","Replace the epsilon value with the one specified.",1,[[],["relative",3]]],[11,"max_relative","","Replace the maximum relative value with the one specified.",1,[[],["relative",3]]],[11,"eq","","Peform the equality comparison",1,[[]]],[11,"ne","","Peform the inequality comparison",1,[[]]],[11,"epsilon","","Replace the epsilon value with the one specified.",2,[[],["ulps",3]]],[11,"max_ulps","","Replace the max ulps value with the one specified.",2,[[],["ulps",3]]],[11,"eq","","Peform the equality comparison",2,[[]]],[11,"ne","","Peform the inequality comparison",2,[[]]],[14,"abs_diff_eq","","Approximate equality of using the absolute difference.",null,null],[14,"abs_diff_ne","","Approximate inequality of using the absolute difference.",null,null],[14,"relative_eq","","Approximate equality using both the absolute difference…",null,null],[14,"relative_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"ulps_eq","","Approximate equality using both the absolute difference…",null,null],[14,"ulps_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"assert_abs_diff_eq","","An assertion that delegates to `abs_diff_eq!`, and panics…",null,null],[14,"assert_abs_diff_ne","","An assertion that delegates to `abs_diff_ne!`, and panics…",null,null],[14,"assert_relative_eq","","An assertion that delegates to `relative_eq!`, and panics…",null,null],[14,"assert_relative_ne","","An assertion that delegates to `relative_ne!`, and panics…",null,null],[14,"assert_ulps_eq","","An assertion that delegates to `ulps_eq!`, and panics with…",null,null],[14,"assert_ulps_ne","","An assertion that delegates to `ulps_ne!`, and panics with…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"default","","",0,[[],["absdiff",3]]],[11,"default","","",1,[[],["relative",3]]],[11,"default","","",2,[[],["ulps",3]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[]]]],"p":[[3,"AbsDiff"],[3,"Relative"],[3,"Ulps"],[8,"AbsDiffEq"],[8,"RelativeEq"],[8,"UlpsEq"]]},\
"arrayvec":{"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",null,null],[3,"CapacityError","","Error value indicating insufficient capacity",null,null],[3,"ArrayVec","","A vector with a fixed capacity.",null,null],[3,"IntoIter","","By-value iterator for `ArrayVec`.",null,null],[3,"Drain","","A draining iterator for `ArrayVec`.",null,null],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring",3]]],[11,"len","","Return the length of the string.",0,[[]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[],[["capacityerror",3],["result",4]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[],[["result",4],["utf8error",3]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[]]],[11,"push","","Adds the given char to the end of the string.",0,[[]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[],[["result",4],["capacityerror",3]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[],[["capacityerror",3],["result",4]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[],["option",4]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte…",0,[[]]],[11,"clear","","Make the string empty.",0,[[]]],[11,"set_len","","Set the strings’s length.",0,[[]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[],["capacityerror",3]]],[11,"element","","Extract the overflowing element",1,[[]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an…",1,[[],["capacityerror",3]]],[8,"Array","","Trait for fixed size arrays.",null,null],[16,"Item","","The array’s element type",2,null],[18,"CAPACITY","","The array\'s element capacity",2,null],[10,"as_slice","","",2,[[]]],[10,"as_mut_slice","","",2,[[]]],[11,"new","","Create a new empty `ArrayVec`.",3,[[],["arrayvec",3]]],[11,"len","","Return the number of elements in the `ArrayVec`.",3,[[]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",3,[[]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",3,[[]]],[11,"remaining_capacity","","Returns the capacity left in the `ArrayVec`.",3,[[]]],[11,"push","","Push `element` to the end of the vector.",3,[[]]],[11,"try_push","","Push `element` to the end of the vector.",3,[[],[["result",4],["capacityerror",3]]]],[11,"push_unchecked","","Push `element` to the end of the vector without checking…",3,[[]]],[11,"insert","","Insert `element` at position `index`.",3,[[]]],[11,"try_insert","","Insert `element` at position `index`.",3,[[],[["result",4],["capacityerror",3]]]],[11,"pop","","Remove the last element in the vector and return it.",3,[[],["option",4]]],[11,"swap_remove","","Remove the element at `index` and swap the last element…",3,[[]]],[11,"swap_pop","","Remove the element at `index` and swap the last element…",3,[[],["option",4]]],[11,"remove","","Remove the element at `index` and shift down the following…",3,[[]]],[11,"pop_at","","Remove the element at `index` and shift down the following…",3,[[],["option",4]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",3,[[]]],[11,"clear","","Remove all elements in the vector.",3,[[]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[]]],[11,"set_len","","Set the vector’s length without dropping or moving out…",3,[[]]],[11,"try_extend_from_slice","","Copy and appends all elements in a slice to the `ArrayVec`.",3,[[],[["result",4],["capacityerror",3]]]],[11,"drain","","Create a draining iterator that removes the specified…",3,[[],["drain",3]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its…",3,[[],["result",4]]],[11,"dispose","","Dispose of `self` (same as drop)",3,[[]]],[11,"as_slice","","Return a slice containing all elements of the vector.",3,[[]]],[11,"as_mut_slice","","Return a mutable slice containing all elements of the…",3,[[]]],[11,"as_ptr","","Return a raw pointer to the vector\'s buffer.",3,[[]]],[11,"as_mut_ptr","","Return a raw mutable pointer to the vector\'s buffer.",3,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"deref","","",0,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",0,[[]]],[11,"deref_mut","","",3,[[]]],[11,"from","","",3,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[["capacityerror",3]]]],[11,"ne","","",1,[[["capacityerror",3]]]],[11,"eq","","",3,[[]]],[11,"eq","","",3,[[]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"cmp","","",1,[[["capacityerror",3]],["ordering",4]]],[11,"cmp","","",3,[[["arrayvec",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[]]],[11,"le","","",0,[[]]],[11,"gt","","",0,[[]]],[11,"ge","","",0,[[]]],[11,"partial_cmp","","",0,[[],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[]]],[11,"le","","",0,[[]]],[11,"gt","","",0,[[]]],[11,"ge","","",0,[[]]],[11,"partial_cmp","","",1,[[["capacityerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["capacityerror",3]]]],[11,"le","","",1,[[["capacityerror",3]]]],[11,"gt","","",1,[[["capacityerror",3]]]],[11,"ge","","",1,[[["capacityerror",3]]]],[11,"partial_cmp","","",3,[[["arrayvec",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[]]],[11,"le","","",3,[[]]],[11,"ge","","",3,[[]]],[11,"gt","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"drop","","",4,[[]]],[11,"drop","","",5,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",3,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"from_str","","",0,[[],["result",4]]],[11,"write_char","","",0,[[],["result",6]]],[11,"write_str","","",0,[[],["result",6]]],[11,"from_iter","","",3,[[["intoiterator",8]]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",3,[[]]],[11,"as_mut","","",3,[[]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"into_iter","","",3,[[],["intoiter",3]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"clone","","",0,[[],["arraystring",3]]],[11,"clone_from","","",0,[[]]],[11,"clone","","",1,[[],["capacityerror",3]]],[11,"clone","","",4,[[],["intoiter",3]]],[11,"clone","","",3,[[]]],[11,"clone_from","","",3,[[]]],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring",3]]],[11,"default","","Return an empty array",3,[[],["arrayvec",3]]],[18,"CAPACITY","","The array\'s element capacity",2,null]],"p":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]},\
"backtrace":{"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",null,null],[3,"BacktraceFmt","","A formatter for backtraces.",null,null],[3,"BacktraceFrameFmt","","A formatter for just one frame of a backtrace.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[4,"BytesOrWideString","","A platform independent representation of a string. When…",null,null],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,null],[13,"Wide","","Wide strings typically from Windows.",0,null],[4,"PrintFmt","","The styles of printing that we can print",null,null],[13,"Short","","Prints a terser backtrace which ideally only contains…",1,null],[13,"Full","","Prints a backtrace that contains all possible information",1,null],[5,"trace_unsynchronized","","Same as `trace`, only unsafe as it\'s unsynchronized.",null,[[["fnmut",8]]]],[5,"resolve_frame_unsynchronized","","Same as `resolve_frame`, only unsafe as it\'s unsynchronized.",null,[[["frame",3]]]],[5,"resolve_unsynchronized","","Same as `resolve`, only unsafe as it\'s unsynchronized.",null,[[]]],[5,"clear_symbol_cache","","Attempt to reclaim that cached memory used to symbolicate…",null,[[]]],[5,"trace","","Inspects the current call-stack, passing all active frames…",null,[[["fnmut",8]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",null,[[["fnmut",8]]]],[5,"resolve_frame","","Resolve a previously capture frame to a symbol, passing…",null,[[["fnmut",8],["frame",3]]]],[11,"ip","","Returns the current instruction pointer of this frame.",2,[[]]],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",2,[[]]],[11,"name","","Returns the name of this function.",3,[[],[["symbolname",3],["option",4]]]],[11,"addr","","Returns the starting address of this function.",3,[[],["option",4]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly useful…",3,[[],[["bytesorwidestring",4],["option",4]]]],[11,"lineno","","Returns the line number for where this symbol is currently…",3,[[],["option",4]]],[11,"filename","","Returns the file name where this function was defined.",3,[[],[["option",4],["path",3]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",4,[[],["symbolname",3]]],[11,"as_str","","Returns the raw (mangled) symbol name as a `str` if the…",4,[[],["option",4]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",4,[[]]],[11,"to_str_lossy","","Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[],["cow",4]]],[11,"into_path_buf","","Provides a `Path` representation of `BytesOrWideString`.",0,[[],["pathbuf",3]]],[11,"new","","Create a new `BacktraceFmt` which will write output to the…",5,[[["formatter",3],["printfmt",4],["fnmut",8]]]],[11,"add_context","","Prints a preamble for the backtrace about to be printed.",5,[[],["result",6]]],[11,"frame","","Adds a frame to the backtrace output.",5,[[],["backtraceframefmt",3]]],[11,"finish","","Completes the backtrace output.",5,[[],["result",6]]],[11,"backtrace_frame","","Prints a `BacktraceFrame` with this frame formatter.",6,[[["backtraceframe",3]],["result",6]]],[11,"backtrace_symbol","","Prints a `BacktraceSymbol` within a `BacktraceFrame`.",6,[[["backtracesymbol",3],["backtraceframe",3]],["result",6]]],[11,"symbol","","Prints a raw traced `Frame` and `Symbol`, typically from…",6,[[["frame",3],["symbol",3]],["result",6]]],[11,"print_raw","","Adds a raw frame to the backtrace output.",6,[[["option",4],["symbolname",3],["bytesorwidestring",4],["option",4],["option",4]],["result",6]]],[11,"new","","Captures a backtrace at the callsite of this function,…",7,[[],["backtrace",3]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",7,[[],["backtrace",3]]],[11,"frames","","Returns the frames from when this backtrace was captured.",7,[[]]],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",7,[[]]],[11,"ip","","Same as `Frame::ip`",8,[[]]],[11,"symbol_address","","Same as `Frame::symbol_address`",8,[[]]],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",8,[[]]],[11,"name","","Same as `Symbol::name`",9,[[],[["symbolname",3],["option",4]]]],[11,"addr","","Same as `Symbol::addr`",9,[[],["option",4]]],[11,"filename","","Same as `Symbol::filename`",9,[[],[["option",4],["path",3]]]],[11,"lineno","","Same as `Symbol::lineno`",9,[[],["option",4]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_string","","",4,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",7,[[["vec",3],["backtraceframe",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",1,[[["printfmt",4]]]],[11,"drop","","",6,[[]]],[11,"into","","",7,[[],[["vec",3],["backtraceframe",3]]]],[11,"clone","","",2,[[],["frame",3]]],[11,"clone","","",1,[[],["printfmt",4]]],[11,"clone","","",7,[[],["backtrace",3]]],[11,"clone","","",8,[[],["backtraceframe",3]]],[11,"clone","","",9,[[],["backtracesymbol",3]]],[11,"default","","",7,[[],["backtrace",3]]]],"p":[[4,"BytesOrWideString"],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"BacktraceFmt"],[3,"BacktraceFrameFmt"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]},\
"backtrace_sys":{"doc":"","i":[[4,"backtrace_state","backtrace_sys","",null,null],[5,"backtrace_create_state","","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[4,"backtrace_state"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"bitvec":{"doc":"`bitvec` – `[bool]` in overdrive.","i":[[0,"macros","bitvec","Utility macros for constructing data structures and…",null,null],[0,"indices","","Element bit indexing.",null,null],[3,"BitIdx","bitvec::indices","Indicates a semantic index of a bit within a memory element.",null,null],[3,"BitPos","","Indicates a real electrical index within an element.",null,null],[3,"BitMask","","Wrapper type indicating a one-hot encoding of a bit mask…",null,null],[11,"new","","Wraps a counter value as a known-good index of the `T`…",0,[[],["option",4]]],[11,"new","","Produce a new bit position marker at a valid position value.",1,[[]]],[11,"new_unchecked","","Produce a new bit position marker at any position value.",1,[[]]],[11,"new","","Produce a new bit-mask wrapper around a one-hot mask value.",2,[[]]],[11,"new_unchecked","","Produce a new bit-mask wrapper around any value.",2,[[]]],[0,"fields","bitvec","Parallel bitfield access.",null,null],[8,"BitField","bitvec::fields","Permit a specific `BitSlice` to be used for C-style…",null,null],[11,"load","","Load the sequence of bits from `self` into the…",3,[[]]],[10,"load_le","","Load from `self`, using little-endian element ordering.",3,[[]]],[10,"load_be","","Load from `self`, using big-endian element ordering.",3,[[]]],[11,"store","","Stores a sequence of bits from the user into the domain of…",3,[[]]],[10,"store_le","","Store into `self`, using little-endian element ordering.",3,[[]]],[10,"store_be","","Store into `self`, using big-endian element ordering.",3,[[]]],[0,"order","bitvec","Bit Ordering",null,null],[3,"Msb0","bitvec::order","Traverses an element from `MSbit` to `LSbit`.",null,null],[3,"Lsb0","","Traverses an element from `LSbit` to `MSbit`.",null,null],[6,"Local","","A default bit ordering.",null,null],[8,"BitOrder","","An ordering over an element.",null,null],[18,"TYPENAME","","Name of the ordering type, for use in text display.",4,null],[10,"at","","Translate a semantic bit index into an electrical bit…",4,[[["bitidx",3]],["bitpos",3]]],[11,"mask","","Translate a semantic bit index into an electrical bit mask.",4,[[["bitidx",3]],["bitmask",3]]],[0,"prelude","bitvec","`bitvec` Prelude",null,null],[0,"slice","","`BitSlice` Wide Reference",null,null],[3,"BitSlice","bitvec::slice","A compact slice of bits, whose order and storage types can…",null,null],[3,"Iter","","Immutable slice iterator",null,null],[3,"IterMut","","Mutable slice iterator.",null,null],[3,"Chunks","","An iterator over a slice in (non-overlapping) chunks…",null,null],[3,"ChunksExact","","An iterator over a slice in (non-overlapping) chunks…",null,null],[3,"ChunksExactMut","","An iterator over a slice in (non-ovelapping) mutable…",null,null],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[3,"RChunks","","An iterator over a slice in (non-overlapping) chunks…",null,null],[3,"RChunksExact","","An iterator over a slice in (non-overlapping) chunks…",null,null],[3,"RChunksExactMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[3,"RChunksMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[3,"Split","","An iterator over subslices separated by bits that satisfy…",null,null],[3,"SplitMut","","An iterator over subslices separated by positions that…",null,null],[3,"RSplit","","An iterator over subslices separated by bits that satisfy…",null,null],[3,"RSplitMut","","An iterator over subslices separated by bits that satisfy…",null,null],[3,"SplitN","","An iterator over subslices separated by positions that…",null,null],[3,"SplitNMut","","An iterator over mutable subslices separated by positions…",null,null],[3,"RSplitN","","An iterator over subslices separated by positions that…",null,null],[3,"RSplitNMut","","An iterator over mutable subslices separated by positions…",null,null],[3,"Windows","","An iterator over overlapping subslices of some width.",null,null],[3,"BitMut","","Proxy referential type, equivalent to `&mut bool`.",null,null],[5,"bits_from_raw_parts","","Forms a `BitSlice` from a pointer, starting position, and…",null,[[["bitidx",3]],["bitslice",3]]],[5,"bits_from_raw_parts_mut","","Performs the same functionality as `bits_from_raw_parts`,…",null,[[["bitidx",3]],["bitslice",3]]],[5,"from_mut","","Converts a reference to `T` into a `BitSlice` of that…",null,[[],["bitslice",3]]],[5,"from_raw_parts","","Forms a bit slice from a pointer and a length.",null,[[],["bitslice",3]]],[5,"from_raw_parts_mut","","Performs the same functionality as `from_raw_parts`,…",null,[[],["bitslice",3]]],[5,"from_ref","","Converts a reference to `T` into a bit slice one element…",null,[[],["bitslice",3]]],[11,"len","","Returns the number of bits in the slice.",5,[[]]],[11,"is_empty","","Returns `true` if the slice has a length of 0.",5,[[]]],[11,"first","","Returns the first bit of the slice, or `None` if it is…",5,[[],["option",4]]],[11,"first_mut","","Returns a mutable pointer to the first bit of the slice,…",5,[[],[["option",4],["bitmut",3]]]],[11,"split_first","","Returns the first and all the rest of the bits of the…",5,[[],["option",4]]],[11,"split_first_mut","","Returns the first and all the rest of the bits of the…",5,[[],["option",4]]],[11,"split_last","","Returns the last and all the rest of the bits of the…",5,[[],["option",4]]],[11,"split_last_mut","","Returns the last and all the rest of the bits of the…",5,[[],["option",4]]],[11,"last","","Returns the last bit of the slice, or `None` if it is empty.",5,[[],["option",4]]],[11,"last_mut","","Returns a mutable pointer to the last bit in the slice.",5,[[],[["option",4],["bitmut",3]]]],[11,"get","","Returns a reference to a bit or subslice depending on the…",5,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to a bit or subslice depending…",5,[[],["option",4]]],[11,"get_unchecked","","Returns a reference to a bit or subslice, without doing…",5,[[]]],[11,"get_unchecked_mut","","Returns a mutable reference to a bit or subslice, without…",5,[[]]],[11,"as_ptr","","Returns a raw pointer to the slice’s buffer.",5,[[]]],[11,"as_mut_ptr","","Returns an unsafe mutable pointer to the slice’s buffer.",5,[[]]],[11,"swap","","Swaps two bits in the slice.",5,[[]]],[11,"reverse","","Reverses the order of bits in the slice, in place.",5,[[]]],[11,"iter","","Returns an iterator over the slice.",5,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each bit.",5,[[],["itermut",3]]],[11,"windows","","Returns an iterator over all contiguous windows of width…",5,[[],["windows",3]]],[11,"chunks","","Returns an iterator over `chunk_size` bits of the slice at…",5,[[],["chunks",3]]],[11,"chunks_mut","","Returns an iterator over `chunk_size` bits of the slice at…",5,[[],["chunksmut",3]]],[11,"chunks_exact","","Returns an iterator over `chunk_size` elements of the…",5,[[],["chunksexact",3]]],[11,"chunks_exact_mut","","Returns an iterator over `chunk_size` elements of the…",5,[[],["chunksexactmut",3]]],[11,"rchunks","","Returns an iterator over `chunk_size` bits of the slice at…",5,[[],["rchunks",3]]],[11,"rchunks_mut","","Returns an iterator over `chunk_size` bits of the slice at…",5,[[],["rchunksmut",3]]],[11,"rchunks_exact","","Returns an iterator over `chunk_size` bits of the slice at…",5,[[],["rchunksexact",3]]],[11,"rchunks_exact_mut","","Returns an iterator over `chunk_size` bits of the slice at…",5,[[],["rchunksexactmut",3]]],[11,"split_at","","Divides one slice into two at an index.",5,[[]]],[11,"split_at_mut","","Divides one mutable slice into two at an index.",5,[[]]],[11,"split","","Returns an iterator over subslices separated by indexed…",5,[[],["split",3]]],[11,"split_mut","","Returns an iterator over mutable subslices separated by…",5,[[],["splitmut",3]]],[11,"rsplit","","Returns an iterator over subslices separated by indexed…",5,[[],["rsplit",3]]],[11,"rsplit_mut","","Returns an iterator over mutable subslices separated by…",5,[[],["rsplitmut",3]]],[11,"splitn","","Returns an iterator over subslices separated by indexed…",5,[[],["splitn",3]]],[11,"splitn_mut","","Returns an iterator over mutable subslices separated by…",5,[[],["splitnmut",3]]],[11,"rsplitn","","Returns an iterator over subslices separated by indexed…",5,[[],["rsplitn",3]]],[11,"rsplitn_mut","","Returns an iterator over mutable subslices separated by…",5,[[],["rsplitnmut",3]]],[11,"contains","","Returns `true` if the slice contains a region that matches…",5,[[["bitslice",3]]]],[11,"starts_with","","Returns `true` if `prefix` is a prefix of the slice.",5,[[["bitslice",3]]]],[11,"ends_with","","Returns `true` if `suffix` is a suffix of the slice.",5,[[["bitslice",3]]]],[11,"rotate_left","","Rotates the slice in-place such that the first `by` bits…",5,[[]]],[11,"rotate_right","","Rotates the slice in-place such that the first `self.len()…",5,[[]]],[11,"clone_from_slice","","Copies the elements from `src` into `self`.",5,[[["bitslice",3]]]],[11,"copy_from_slice","","Copies the elements from `src` into `self`.",5,[[]]],[11,"swap_with_slice","","Swaps all bits in `self` with those in `other`.",5,[[["bitslice",3]]]],[11,"align_to","","Transmute the slice to a slice with a different backing…",5,[[]]],[11,"align_to_mut","","Transmute the slice to a slice with a different backing…",5,[[]]],[11,"to_vec","","Copies `self` into a new `BitVec`.",5,[[],["bitvec",3]]],[11,"as_bitslice","","Views the underlying data as a subslice of the original…",6,[[],["bitslice",3]]],[11,"as_slice","","Views the underlying buffer.",6,[[]]],[11,"into_bitslice","","Views the underlying data as a subslice of the original…",7,[[],["bitslice",3]]],[11,"into_slice","","Views the underlying buffer.",7,[[]]],[11,"remainder","","Returns the remainder of the original slice that is not…",8,[[],["bitslice",3]]],[11,"into_remainder","","Returns the remainder of the original slice that is not…",9,[[],["bitslice",3]]],[11,"remainder","","Returns the remainder of the original slice that is not…",10,[[],["bitslice",3]]],[11,"into_remainder","","Returns the remainder of the original slice that is not…",11,[[],["bitslice",3]]],[8,"AsBits","","Allows a type to be used as a sequence of immutable bits.",null,null],[16,"Store","","The underlying fundamental type of the implementor.",12,null],[10,"bits","","Constructs a `BitSlice` reference over data.",12,[[],["bitslice",3]]],[10,"bits_mut","","Constructs a mutable `BitSlice` reference over data.",12,[[],["bitslice",3]]],[8,"BitSliceIndex","","Replacement for `slice::SliceIndex`.",null,null],[16,"Immut","","Immutable output type.",13,null],[16,"Mut","","Mutable output type. This is necessary because `&mut…",13,null],[10,"get","","Returns a shared reference to the output at this location,…",13,[[["bitslice",3]],["option",4]]],[10,"get_mut","","Returns a mutable reference to the output at this…",13,[[["bitslice",3]],["option",4]]],[10,"get_unchecked","","Returns a shared reference to the output at this location,…",13,[[["bitslice",3]]]],[10,"get_unchecked_mut","","Returns a mutable reference to the output at this…",13,[[["bitslice",3]]]],[10,"index","","Returns a shared reference to the output at this location,…",13,[[["bitslice",3]]]],[10,"index_mut","","Returns a mutable reference to the output at this…",13,[[["bitslice",3]]]],[11,"empty","","Produces the empty slice. This is equivalent to `&[]` for…",5,[[]]],[11,"empty_mut","","Produces the empty mutable slice. This is equivalent to…",5,[[]]],[11,"from_element","","Produces an immutable `BitSlice` over a single element.",5,[[]]],[11,"from_element_mut","","Produces a mutable `BitSlice` over a single element.",5,[[]]],[11,"from_slice","","Wraps a `&[T: BitStore]` in a `&BitSlice<O: BitOrder, T>`.…",5,[[]]],[11,"from_slice_mut","","Wraps a `&mut [T: BitStore]` in a `&mut BitSlice<O:…",5,[[]]],[11,"set","","Sets the bit value at the given position.",5,[[]]],[11,"set_unchecked","","Sets a bit at an index, without doing bounds checking.",5,[[]]],[11,"at","","Produces a write reference to a region of the slice.",5,[[]]],[11,"at_unchecked","","Version of `at` that does not perform boundary checking.",5,[[]]],[11,"split_at_unchecked","","Version of `split_at` that does not perform boundary…",5,[[]]],[11,"split_at_mut_unchecked","","Version of `split_at_mut` that does not perform boundary…",5,[[]]],[11,"swap_unchecked","","Version of `swap` that does not perform boundary checks.",5,[[]]],[11,"all","","Tests if all bits in the slice domain are set (logical `∧`).",5,[[]]],[11,"any","","Tests if any bit in the slice is set (logical `∨`).",5,[[]]],[11,"not_all","","Tests if any bit in the slice is unset (logical `¬∧`).",5,[[]]],[11,"not_any","","Tests if all bits in the slice are unset (logical `¬∨`).",5,[[]]],[11,"some","","Tests whether the slice has some, but not all, bits set…",5,[[]]],[11,"count_ones","","Counts how many bits are set high.",5,[[]]],[11,"count_zeros","","Counts how many bits are set low.",5,[[]]],[11,"set_all","","Set all bits in the slice to a value.",5,[[]]],[11,"for_each","","Provides mutable traversal of the collection.",5,[[]]],[11,"add_assign_reverse","","Performs “reverse” addition (left to right instead of…",5,[[]]],[11,"as_slice","","Accesses the backing storage of the `BitSlice` as a slice…",5,[[]]],[11,"as_mut_slice","","Accesses the underlying store.",5,[[]]],[11,"as_total_slice","","Accesses the underlying store, including contended partial…",5,[[]]],[0,"store","bitvec","Bit management",null,null],[8,"BitStore","bitvec::store","Generalizes over the fundamental types for use in `bitvec`…",null,null],[18,"BITS","","The width, in bits, of this type.",14,null],[18,"INDX","","The number of bits required to index a bit inside the…",14,null],[18,"MASK","","The bitmask to turn an arbitrary number into a bit index.…",14,null],[18,"FALSE","","The value with all bits unset.",14,null],[18,"TRUE","","The value with all bits set.",14,null],[18,"TYPENAME","","Name of the implementing type. This is only necessary…",14,null],[16,"Access","","Shared/mutable access wrapper.",14,null],[11,"get","","Gets a specific bit in an element.",14,[[["bitidx",3]]]],[11,"set","","Sets a specific bit in an element to a given value.",14,[[["bitidx",3]]]],[11,"count_ones","","Counts how many bits in `self` are set to `1`.",14,[[]]],[11,"count_zeros","","Counts how many bits in `self` are set to `0`.",14,[[]]],[0,"boxed","bitvec","`BitBox` structure",null,null],[3,"BitBox","bitvec::boxed","A pointer type for owned bit sequences.",null,null],[3,"IntoIter","","State keeper for consuming iteration over a `BitBox`.",null,null],[11,"new","","Allocates memory on the heap and then places `bits` into it.",15,[[["bitslice",3]]]],[11,"pin","","Constructs a new `Pin<BitBox<O, T>>`.",15,[[["bitslice",3]],["pin",3]]],[11,"from_raw","","Constructs a bit box from a raw bit pointer.",15,[[]]],[11,"into_raw","","Consumes the `BitBox`, returning a wrapped raw pointer.",15,[[]]],[11,"leak","","Consumes and leaks the `BitBox`, returning a mutable…",15,[[],["bitslice",3]]],[11,"empty","","Constructs an empty boxed bitslice.",15,[[]]],[11,"from_element","","Produces a `BitBox` from a single element.",15,[[]]],[11,"from_slice","","Builds a `BitBox` from a borrowed slice of elements.",15,[[]]],[11,"from_bitslice","","Clones a `&BitSlice` into a `BitBox`.",15,[[["bitslice",3]]]],[11,"from_boxed_slice","","Produces a `BitBox` from an owned slice of elements.",15,[[["box",3]]]],[11,"into_boxed_slice","","Removes the `BitBox` wrapper from a `Box<[T]>`.",15,[[],["box",3]]],[11,"add_reverse","","Performs “reverse” addition (left to right instead of…",15,[[]]],[11,"change_order","","Changes the order on a box handle, without changing the…",15,[[],["bitbox",3]]],[11,"as_bitslice","","Accesses the `BitSlice<O, T>` to which the `BitBox` refers.",15,[[],["bitslice",3]]],[11,"as_mut_bitslice","","Accesses the `BitSlice<O, T>` to which the `BitBox` refers.",15,[[],["bitslice",3]]],[11,"as_slice","","Accesses the vector’s backing store as an element slice.",15,[[]]],[11,"as_mut_slice","","Accesses the vector’s backing store as an element slice.",15,[[]]],[0,"vec","bitvec","`BitVec` structure",null,null],[3,"BitVec","bitvec::vec","A compact `Vec` of bits, whose order and storage type can…",null,null],[3,"Drain","","State keeper for draining iteration.",null,null],[3,"IntoIter","","A consuming iterator for `BitVec`.",null,null],[3,"Splice","","A splicing iterator for `BitVec`.",null,null],[11,"new","","Constructs a new, empty `BitVec<C, T>`.",16,[[]]],[11,"with_capacity","","Constructs a new, empty `BitVec<C, T>` with the specified…",16,[[]]],[11,"capacity","","Returns the number of bits the vector can hold without…",16,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more bits to…",16,[[]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",16,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",16,[[]]],[11,"into_boxed_slice","","Converts the bit-vector into [`Box<[T]>`].",16,[[],["box",3]]],[11,"truncate","","Shortens the vector, keeping the first `len` bits and…",16,[[]]],[11,"as_slice","","Extracts an element slice containing the entire vector.",16,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",16,[[]]],[11,"set_len","","Forces the length of the vector to `new_len`.",16,[[]]],[11,"swap_remove","","Removes a bit from the vector and returns it.",16,[[]]],[11,"insert","","Inserts a bit at position `index` within the vector,…",16,[[]]],[11,"remove","","Removes and returns the bit at position `index` within the…",16,[[]]],[11,"retain","","Retains only the bits that pass the predicate.",16,[[]]],[11,"push","","Appends a bit to the back of the vector.",16,[[]]],[11,"pop","","Removes the last element from a vector and returns it, or…",16,[[],["option",4]]],[11,"append","","Moves all the elements of `other` into `self`, leaving…",16,[[["bitvec",3]]]],[11,"drain","","Creates a draining iterator that removes the specified…",16,[[],["drain",3]]],[11,"clear","","Clears the vector, removing all values.",16,[[]]],[11,"split_off","","Splits the collection into two at the given index.",16,[[]]],[11,"resize_with","","Resizes the `BitVec` in-place so that `len` is equal to…",16,[[]]],[11,"resize","","Resizes the `BitVec` in place so that `len` is equal to…",16,[[]]],[11,"extend_from_slice","","Clones and appends all bits in a bit-slice to the `BitVec`.",16,[[["bitslice",3]]]],[11,"splice","","Creates a splicing iterator that replaces the specified…",16,[[],["splice",3]]],[11,"repeat","","Constructs a `BitVec` from a value repeated many times.",16,[[]]],[11,"from_element","","Constructs a `BitVec` from a single element.",16,[[]]],[11,"from_slice","","Constructs a `BitVec` from a slice of elements.",16,[[]]],[11,"from_vec","","Consumes a `Vec<T>` and creates a `BitVec<C, T>` from it.",16,[[["vec",3]]]],[11,"from_bitslice","","Clones a `&BitSlice` into a `BitVec`.",16,[[["bitslice",3]]]],[11,"from_boxed_bitslice","","Converts a frozen `BitBox` allocation into a growable…",16,[[["bitbox",3]]]],[11,"from_raw_parts","","Creates a new `BitVec<C, T>` directly from the raw parts…",16,[[["bitptr",3]]]],[11,"as_bitslice","","Produces a `BitSlice` containing the entire vector.",16,[[],["bitslice",3]]],[11,"as_mut_bitslice","","Produces a mutable `BitSlice` containing the entire vector.",16,[[],["bitslice",3]]],[11,"set_elements","","Sets the backing storage to the provided element.",16,[[]]],[11,"add_reverse","","Performs “reverse” addition (left to right instead of…",16,[[]]],[11,"add_assign_reverse","","Performs “reverse” addition (left to right instead of…",16,[[]]],[11,"change_order","","Changes the order type on the vector handle, without…",16,[[],["bitvec",3]]],[11,"into_boxed_bitslice","","Degrades a `BitVec` to a `BitBox`, freezing its size.",16,[[],["bitbox",3]]],[11,"into_vec","","Degrades a `BitVec` to a standard `Vec`.",16,[[],["vec",3]]],[11,"force_align","","Ensures that the live region of the underlying memory…",16,[[]]],[0,"cursor","bitvec","Old name of the `order` module.",null,null],[6,"BigEndian","bitvec::cursor","Old name of the `Msb0` type.",null,null],[6,"LittleEndian","","Old name of the `Lsb0` type.",null,null],[6,"Cursor","","Old name of the `BitOrder` trait.",null,null],[14,"bits","bitvec","Construct a `&BitSlice` out of a literal array in source…",null,null],[14,"bitvec","","Construct a `BitVec` out of a literal array in source…",null,null],[14,"bitbox","","Construct a `BitBox` out of a literal array in source…",null,null],[11,"from","bitvec::indices","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","bitvec::order","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","bitvec::slice","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","bitvec::boxed","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","bitvec::vec","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"load_le","bitvec::slice","",5,[[]]],[11,"load_be","","",5,[[]]],[11,"store_le","","",5,[[]]],[11,"store_be","","",5,[[]]],[11,"load_le","","",5,[[]]],[11,"load_be","","",5,[[]]],[11,"store_le","","",5,[[]]],[11,"store_be","","",5,[[]]],[11,"load_le","bitvec::boxed","",15,[[]]],[11,"load_be","","",15,[[]]],[11,"store_le","","",15,[[]]],[11,"store_be","","",15,[[]]],[11,"load_le","bitvec::vec","",16,[[]]],[11,"load_be","","",16,[[]]],[11,"store_le","","",16,[[]]],[11,"store_be","","",16,[[]]],[11,"at","bitvec::order","Maps a semantic count to a concrete position.",17,[[["bitidx",3]],["bitpos",3]]],[11,"mask","","",17,[[["bitidx",3]],["bitmask",3]]],[11,"at","","Maps a semantic count to a concrete position.",18,[[["bitidx",3]],["bitpos",3]]],[11,"mask","","",18,[[["bitidx",3]],["bitmask",3]]],[11,"drop","bitvec::slice","",32,[[]]],[11,"drop","bitvec::boxed","",15,[[]]],[11,"drop","bitvec::vec","",34,[[]]],[11,"drop","","",36,[[]]],[11,"drop","","Rebuild the interior `Vec` and let it run the deallocator.",16,[[]]],[11,"as_mut","bitvec::slice","",5,[[]]],[11,"as_mut","bitvec::boxed","",15,[[],["bitslice",3]]],[11,"as_mut","","",15,[[]]],[11,"as_mut","bitvec::vec","",16,[[],["bitslice",3]]],[11,"as_mut","","",16,[[]]],[11,"as_ref","bitvec::slice","",6,[[],["bitslice",3]]],[11,"as_ref","","",6,[[]]],[11,"as_ref","","",5,[[]]],[11,"as_ref","bitvec::boxed","",15,[[],["bitslice",3]]],[11,"as_ref","","",15,[[]]],[11,"as_ref","bitvec::vec","",16,[[],["bitslice",3]]],[11,"as_ref","","Accesses the underlying store.",16,[[]]],[11,"from","bitvec::boxed","",15,[[["bitslice",3]]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[["bitvec",3]]]],[11,"from","","",15,[[["box",3]]]],[11,"from","bitvec::vec","",16,[[["bitslice",3]]]],[11,"from","","",16,[[]]],[11,"from","","",16,[[["bitbox",3]]]],[11,"from","","",16,[[]]],[11,"from","","",16,[[["box",3]]]],[11,"from","","",16,[[["vec",3]]]],[11,"into","bitvec::boxed","",15,[[],["box",3]]],[11,"into","bitvec::vec","",16,[[],["box",3]]],[11,"into","","",16,[[],["vec",3]]],[11,"next_back","bitvec::slice","",6,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"next_back","","",23,[[],["option",4]]],[11,"next_back","","",24,[[],["option",4]]],[11,"next_back","","",25,[[],["option",4]]],[11,"next_back","","",26,[[],["option",4]]],[11,"next_back","","",31,[[],["option",4]]],[11,"next_back","bitvec::boxed","",33,[[],["option",4]]],[11,"next_back","bitvec::vec","",34,[[],["option",4]]],[11,"next_back","","",35,[[],["option",4]]],[11,"next_back","","",36,[[],["option",4]]],[11,"extend","","Extends a `BitVec` from another bitstream.",16,[[["intoiterator",8]]]],[11,"into_iter","bitvec::boxed","",15,[[]]],[11,"into_iter","bitvec::vec","Iterates over the vector.",16,[[]]],[11,"next","bitvec::slice","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"count","","",6,[[]]],[11,"nth","","",6,[[],["option",4]]],[11,"last","","",6,[[],["option",4]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"count","","",7,[[]]],[11,"nth","","",7,[[],["option",4]]],[11,"last","","",7,[[],["option",4]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"count","","",19,[[]]],[11,"nth","","",19,[[],["option",4]]],[11,"last","","",19,[[],["option",4]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"count","","",8,[[]]],[11,"nth","","",8,[[],["option",4]]],[11,"last","","",8,[[],["option",4]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"count","","",9,[[]]],[11,"nth","","",9,[[],["option",4]]],[11,"last","","",9,[[],["option",4]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"count","","",20,[[]]],[11,"nth","","",20,[[],["option",4]]],[11,"last","","",20,[[],["option",4]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"count","","",21,[[]]],[11,"nth","","",21,[[],["option",4]]],[11,"last","","",21,[[],["option",4]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"count","","",10,[[]]],[11,"nth","","",10,[[],["option",4]]],[11,"last","","",10,[[],["option",4]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"count","","",11,[[]]],[11,"nth","","",11,[[],["option",4]]],[11,"last","","",11,[[],["option",4]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"count","","",22,[[]]],[11,"nth","","",22,[[],["option",4]]],[11,"last","","",22,[[],["option",4]]],[11,"next","","",23,[[],["option",4]]],[11,"size_hint","","",23,[[]]],[11,"next","","",24,[[],["option",4]]],[11,"size_hint","","",24,[[]]],[11,"next","","",25,[[],["option",4]]],[11,"size_hint","","",25,[[]]],[11,"next","","",26,[[],["option",4]]],[11,"size_hint","","",26,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","","",29,[[],["option",4]]],[11,"size_hint","","",29,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"size_hint","","",30,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"size_hint","","",31,[[]]],[11,"count","","",31,[[]]],[11,"nth","","",31,[[],["option",4]]],[11,"last","","",31,[[],["option",4]]],[11,"next","bitvec::boxed","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"count","","",33,[[]]],[11,"nth","","",33,[[],["option",4]]],[11,"last","","",33,[[],["option",4]]],[11,"next","bitvec::vec","",34,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"count","","",34,[[]]],[11,"nth","","",34,[[],["option",4]]],[11,"last","","",34,[[],["option",4]]],[11,"next","","Advances the iterator by one, returning the first bit in…",35,[[],["option",4]]],[11,"size_hint","","Hints at the number of bits remaining in the iterator.",35,[[]]],[11,"count","","Counts how many bits are live in the iterator, consuming it.",35,[[]]],[11,"nth","","Advances the iterator by `n` bits, starting from zero.",35,[[],["option",4]]],[11,"last","","Consumes the iterator, returning only the last bit.",35,[[],["option",4]]],[11,"next","","",36,[[],["option",4]]],[11,"size_hint","","",36,[[]]],[11,"count","","",36,[[]]],[11,"nth","","",36,[[],["option",4]]],[11,"last","","",36,[[],["option",4]]],[11,"clone","bitvec::indices","",0,[[],["bitidx",3]]],[11,"clone","","",1,[[],["bitpos",3]]],[11,"clone","","",2,[[],["bitmask",3]]],[11,"clone","bitvec::order","",17,[[],["msb0",3]]],[11,"clone","","",18,[[],["lsb0",3]]],[11,"clone","bitvec::slice","",6,[[],["iter",3]]],[11,"clone","","",19,[[],["chunks",3]]],[11,"clone","","",8,[[],["chunksexact",3]]],[11,"clone","","",21,[[],["rchunks",3]]],[11,"clone","","",10,[[],["rchunksexact",3]]],[11,"clone","","",23,[[],["split",3]]],[11,"clone","","",25,[[],["rsplit",3]]],[11,"clone","","",31,[[],["windows",3]]],[11,"clone","bitvec::boxed","",15,[[]]],[11,"clone","bitvec::vec","",16,[[]]],[11,"clone_from","","",16,[[]]],[11,"default","bitvec::indices","",0,[[],["bitidx",3]]],[11,"default","","",1,[[],["bitpos",3]]],[11,"default","","",2,[[],["bitmask",3]]],[11,"default","bitvec::boxed","",15,[[]]],[11,"default","bitvec::vec","",16,[[]]],[11,"cmp","bitvec::indices","",0,[[["bitidx",3]],["ordering",4]]],[11,"cmp","","",1,[[["bitpos",3]],["ordering",4]]],[11,"cmp","","",2,[[["bitmask",3]],["ordering",4]]],[11,"cmp","bitvec::slice","",5,[[],["ordering",4]]],[11,"cmp","bitvec::boxed","",15,[[],["ordering",4]]],[11,"cmp","bitvec::vec","",16,[[],["ordering",4]]],[11,"eq","bitvec::indices","",0,[[["bitidx",3]]]],[11,"ne","","",0,[[["bitidx",3]]]],[11,"eq","","",1,[[["bitpos",3]]]],[11,"ne","","",1,[[["bitpos",3]]]],[11,"eq","","",2,[[["bitmask",3]]]],[11,"ne","","",2,[[["bitmask",3]]]],[11,"eq","bitvec::order","",17,[[["msb0",3]]]],[11,"eq","","",18,[[["lsb0",3]]]],[11,"eq","bitvec::slice","Performas a comparison by `==`.",5,[[["bitslice",3]]]],[11,"eq","","",5,[[["bitslice",3]]]],[11,"eq","bitvec::boxed","",15,[[["bitbox",3]]]],[11,"eq","","",15,[[["bitslice",3]]]],[11,"eq","bitvec::slice","",5,[[["bitbox",3]]]],[11,"eq","bitvec::vec","Performs a comparison by `==`.",16,[[["bitvec",3]]]],[11,"eq","","",16,[[["bitslice",3]]]],[11,"eq","bitvec::slice","",5,[[["bitvec",3]]]],[11,"eq","bitvec::vec","",16,[[["bitslice",3]]]],[11,"partial_cmp","bitvec::indices","",0,[[["bitidx",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["bitidx",3]]]],[11,"le","","",0,[[["bitidx",3]]]],[11,"gt","","",0,[[["bitidx",3]]]],[11,"ge","","",0,[[["bitidx",3]]]],[11,"partial_cmp","","",1,[[["bitpos",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["bitpos",3]]]],[11,"le","","",1,[[["bitpos",3]]]],[11,"gt","","",1,[[["bitpos",3]]]],[11,"ge","","",1,[[["bitpos",3]]]],[11,"partial_cmp","","",2,[[["bitmask",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["bitmask",3]]]],[11,"le","","",2,[[["bitmask",3]]]],[11,"gt","","",2,[[["bitmask",3]]]],[11,"ge","","",2,[[["bitmask",3]]]],[11,"partial_cmp","bitvec::slice","Performs a comparison by `<` or `>`.",5,[[["bitslice",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",5,[[["bitslice",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::boxed","",15,[[["bitbox",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",15,[[["bitslice",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::slice","",5,[[["bitbox",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::vec","Performs a comparison by `<` or `>`.",16,[[["bitvec",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",16,[[["bitslice",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::slice","",5,[[["bitvec",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::vec","",16,[[["bitslice",3]],[["ordering",4],["option",4]]]],[11,"to_owned","bitvec::slice","",5,[[]]],[11,"deref","bitvec::indices","",0,[[]]],[11,"deref","","",1,[[]]],[11,"deref","","",2,[[]]],[11,"deref","bitvec::slice","",32,[[]]],[11,"deref","bitvec::boxed","",15,[[]]],[11,"deref","bitvec::vec","Dereferences `&BitVec` down to `&BitSlice`.",16,[[]]],[11,"deref_mut","bitvec::slice","",32,[[]]],[11,"deref_mut","bitvec::boxed","",15,[[]]],[11,"deref_mut","bitvec::vec","Dereferences `&mut BitVec` down to `&mut BitSlice`.",16,[[]]],[11,"fmt","bitvec::indices","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::order","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","Renders the `BitSlice` type header and contents for debug.",5,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",15,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","Renders the `BitVec` type header and contents for debug.",16,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",5,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",15,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","Renders the `BitVec` contents for display.",16,[[["formatter",3]],["result",6]]],[11,"sub","","Subtracts one `BitVec` from another.",16,[[]]],[11,"add","bitvec::boxed","",15,[[]]],[11,"add","bitvec::vec","Adds two `BitVec`s.",16,[[]]],[11,"neg","bitvec::boxed","",15,[[]]],[11,"neg","bitvec::vec","Numerically negates a `BitVec` using 2’s-complement…",16,[[]]],[11,"add_assign","bitvec::slice","Performs unsigned wrapping addition in place.",5,[[]]],[11,"add_assign","bitvec::boxed","",15,[[]]],[11,"add_assign","bitvec::vec","Adds another `BitVec` into `self`.",16,[[]]],[11,"sub_assign","","Subtracts another `BitVec` from `self`.",16,[[]]],[11,"not","bitvec::boxed","",15,[[]]],[11,"not","bitvec::vec","Inverts all bits in the vector.",16,[[]]],[11,"bitand","bitvec::boxed","",15,[[]]],[11,"bitand","bitvec::vec","`AND`s a vector and a bitstream, producing a new vector.",16,[[]]],[11,"bitor","bitvec::boxed","",15,[[]]],[11,"bitor","bitvec::vec","`OR`s a vector and a bitstream, producing a new vector.",16,[[]]],[11,"bitxor","bitvec::boxed","",15,[[]]],[11,"bitxor","bitvec::vec","`XOR`s a vector and a bitstream, producing a new vector.",16,[[]]],[11,"shl","bitvec::boxed","",15,[[]]],[11,"shl","bitvec::vec","Shifts a `BitVec` to the left, shortening it.",16,[[]]],[11,"shr","bitvec::boxed","",15,[[]]],[11,"shr","bitvec::vec","Shifts a `BitVec` to the right, lengthening it and filling…",16,[[]]],[11,"bitand_assign","bitvec::slice","`AND`s a bitstream into a slice.",5,[[]]],[11,"bitand_assign","bitvec::boxed","",15,[[]]],[11,"bitand_assign","bitvec::vec","`AND`s another bitstream into a vector.",16,[[]]],[11,"bitor_assign","bitvec::slice","`OR`s a bitstream into a slice.",5,[[]]],[11,"bitor_assign","bitvec::boxed","",15,[[]]],[11,"bitor_assign","bitvec::vec","`OR`s another bitstream into a vector.",16,[[]]],[11,"bitxor_assign","bitvec::slice","`XOR`s a bitstream into a slice.",5,[[]]],[11,"bitxor_assign","bitvec::boxed","",15,[[]]],[11,"bitxor_assign","bitvec::vec","`XOR`s another bitstream into a vector.",16,[[]]],[11,"shl_assign","bitvec::slice","Shifts a slice left, in place.",5,[[]]],[11,"shl_assign","bitvec::boxed","",15,[[]]],[11,"shl_assign","bitvec::vec","Shifts a `BitVec` to the left in place, shortening it.",16,[[]]],[11,"shr_assign","bitvec::slice","Shifts a slice right, in place.",5,[[]]],[11,"shr_assign","bitvec::boxed","",15,[[]]],[11,"shr_assign","bitvec::vec","Shifts a `BitVec` to the right in place, lengthening it…",16,[[]]],[11,"index","bitvec::slice","",5,[[]]],[11,"index","","",5,[[["range",3]]]],[11,"index","","",5,[[["rangeinclusive",3]]]],[11,"index","","",5,[[["rangefrom",3]]]],[11,"index","","",5,[[["rangefull",3]]]],[11,"index","","",5,[[["rangeto",3]]]],[11,"index","","",5,[[["rangetoinclusive",3]]]],[11,"index","bitvec::boxed","",15,[[]]],[11,"index","","",15,[[["range",3]]]],[11,"index","","",15,[[["rangefrom",3]]]],[11,"index","","",15,[[["rangefull",3]]]],[11,"index","","",15,[[["rangeinclusive",3]]]],[11,"index","","",15,[[["rangeto",3]]]],[11,"index","","",15,[[["rangetoinclusive",3]]]],[11,"index","bitvec::vec","Looks up a single bit by semantic count.",16,[[]]],[11,"index","","",16,[[["range",3]]]],[11,"index","","",16,[[["rangefrom",3]]]],[11,"index","","",16,[[["rangefull",3]]]],[11,"index","","",16,[[["rangeinclusive",3]]]],[11,"index","","",16,[[["rangeto",3]]]],[11,"index","","",16,[[["rangetoinclusive",3]]]],[11,"index_mut","bitvec::slice","",5,[[["range",3]]]],[11,"index_mut","","",5,[[["rangeinclusive",3]]]],[11,"index_mut","","",5,[[["rangefrom",3]]]],[11,"index_mut","","",5,[[["rangefull",3]]]],[11,"index_mut","","",5,[[["rangeto",3]]]],[11,"index_mut","","",5,[[["rangetoinclusive",3]]]],[11,"index_mut","bitvec::boxed","",15,[[["range",3]]]],[11,"index_mut","","",15,[[["rangefrom",3]]]],[11,"index_mut","","",15,[[["rangefull",3]]]],[11,"index_mut","","",15,[[["rangeinclusive",3]]]],[11,"index_mut","","",15,[[["rangeto",3]]]],[11,"index_mut","","",15,[[["rangetoinclusive",3]]]],[11,"index_mut","bitvec::vec","",16,[[["range",3]]]],[11,"index_mut","","",16,[[["rangefrom",3]]]],[11,"index_mut","","",16,[[["rangefull",3]]]],[11,"index_mut","","",16,[[["rangeinclusive",3]]]],[11,"index_mut","","",16,[[["rangeto",3]]]],[11,"index_mut","","",16,[[["rangetoinclusive",3]]]],[11,"hash","bitvec::indices","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","bitvec::slice","",5,[[]]],[11,"hash","bitvec::boxed","",15,[[]]],[11,"hash","bitvec::vec","Writes each bit of the `BitVec`, as a full `bool`, into…",16,[[]]],[11,"borrow","bitvec::boxed","",15,[[],["bitslice",3]]],[11,"borrow","bitvec::vec","Borrows the `BitVec` as a `BitSlice`.",16,[[],["bitslice",3]]],[11,"borrow_mut","bitvec::boxed","",15,[[],["bitslice",3]]],[11,"borrow_mut","bitvec::vec","Mutably borrows the `BitVec` as a `BitSlice`.",16,[[],["bitslice",3]]],[11,"from_iter","","Collects an iterator of `bool` into a vector.",16,[[["intoiterator",8]]]],[11,"fmt","bitvec::slice","",5,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",15,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",16,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",5,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",15,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",16,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",5,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",15,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",16,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",5,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",15,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",16,[[["formatter",3]],["result",6]]]],"p":[[3,"BitIdx"],[3,"BitPos"],[3,"BitMask"],[8,"BitField"],[8,"BitOrder"],[3,"BitSlice"],[3,"Iter"],[3,"IterMut"],[3,"ChunksExact"],[3,"ChunksExactMut"],[3,"RChunksExact"],[3,"RChunksExactMut"],[8,"AsBits"],[8,"BitSliceIndex"],[8,"BitStore"],[3,"BitBox"],[3,"BitVec"],[3,"Msb0"],[3,"Lsb0"],[3,"Chunks"],[3,"ChunksMut"],[3,"RChunks"],[3,"RChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"RSplit"],[3,"RSplitMut"],[3,"SplitN"],[3,"SplitNMut"],[3,"RSplitN"],[3,"RSplitNMut"],[3,"Windows"],[3,"BitMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Splice"]]},\
"byteio":{"doc":"byteiobyteio is a simple crate that exposes lightweight…","i":[[3,"Reader","byteio","A convenience structure used for counting the number of…",null,null],[3,"Writer","","A convenience structure used for counting the number of…",null,null],[4,"Error","","The errors that can occur during `byteio` operations.",null,null],[13,"EndOfStream","","The error returned when a `byteio` operation would…",0,null],[0,"prelude","","The `byteio` prelude.",null,null],[6,"Result","","A specialized `Result` type for `byteio` operations.",null,null],[8,"ReadBytes","","Read a slice of bytes from a buffer.",null,null],[10,"read_exact","","Forcibly attempts to read exactly `n` bytes from the buffer.",1,[[]]],[11,"try_read_exact","","Attempts to read exactly `n` bytes from the buffer.",1,[[],["result",6]]],[8,"ReadBytesExt","","Extends `ReadBytes` with functions for reading numbers.",null,null],[11,"read_u8","","Reads a `u8` from the underlying buffer.",2,[[]]],[11,"try_read_u8","","Attempts to read a `u8` from the underlying buffer.",2,[[],["result",6]]],[11,"read_i8","","Reads an `i8` from the underlying buffer.",2,[[]]],[11,"try_read_i8","","Attempts to read an `i8` from the underlying buffer.",2,[[],["result",6]]],[11,"read_u16_le","","Reads a little endian `u16` from the underlying buffer.",2,[[]]],[11,"read_u16_be","","Reads a big endian `u16` from the underlying buffer.",2,[[]]],[11,"try_read_u16_le","","Attempts to read a little endian `u16` from the underlying…",2,[[],["result",6]]],[11,"try_read_u16_be","","Attempts to read a big endian `u16` from the underlying…",2,[[],["result",6]]],[11,"read_i16_le","","Reads a little endian `i16` from the underlying buffer.",2,[[]]],[11,"read_i16_be","","Reads a big endian `i16` from the underlying buffer.",2,[[]]],[11,"try_read_i16_le","","Attempts to read a little endian `i16` from the underlying…",2,[[],["result",6]]],[11,"try_read_i16_be","","Attempts to read a little endian `i16` from the underlying…",2,[[],["result",6]]],[11,"read_u32_le","","Reads a little endian `u32` from the underlying buffer.",2,[[]]],[11,"read_u32_be","","Reads a big endian `u32` from the underlying buffer.",2,[[]]],[11,"try_read_u32_le","","Attempts to read a little endian `u32` from the underlying…",2,[[],["result",6]]],[11,"try_read_u32_be","","Attempts to read a big endian `u32` from the underlying…",2,[[],["result",6]]],[11,"read_i32_le","","Reads a little endian `i32` from the underlying buffer.",2,[[]]],[11,"read_i32_be","","Reads a big endian `i32` from the underlying buffer.",2,[[]]],[11,"try_read_i32_le","","Attempts to read a little endian `i32` from the underlying…",2,[[],["result",6]]],[11,"try_read_i32_be","","Attempts to read a big endian `i32` from the underlying…",2,[[],["result",6]]],[11,"read_u64_le","","Reads a little endian `u64` from the underlying buffer.",2,[[]]],[11,"read_u64_be","","Reads a big endian `u64` from the underlying buffer.",2,[[]]],[11,"try_read_u64_le","","Attempts to read a little endian `u64` from the underlying…",2,[[],["result",6]]],[11,"try_read_u64_be","","Attempts to read a big endian `u64` from the underlying…",2,[[],["result",6]]],[11,"read_i64_le","","Reads a little endian `i64` from the underlying buffer.",2,[[]]],[11,"read_i64_be","","Reads a big endian `i64` from the underlying buffer.",2,[[]]],[11,"try_read_i64_le","","Attempts to read a little endian `i64` from the underlying…",2,[[],["result",6]]],[11,"try_read_i64_be","","Attempts to read a big endian `i64` from the underlying…",2,[[],["result",6]]],[11,"read_u128_le","","Reads a little endian `u128` from the underlying buffer.",2,[[]]],[11,"read_u128_be","","Reads a big endian `u128` from the underlying buffer.",2,[[]]],[11,"try_read_u128_le","","Attempts to read a little endian `u128` from the…",2,[[],["result",6]]],[11,"try_read_u128_be","","Attempts to read a big endian `u128` from the underlying…",2,[[],["result",6]]],[11,"read_i128_le","","Reads a little endian `i128` from the underlying buffer.",2,[[]]],[11,"read_i128_be","","Reads a big endian `i128` from the underlying buffer.",2,[[]]],[11,"try_read_i128_le","","Attempts to read a little endian `i128` from the…",2,[[],["result",6]]],[11,"try_read_i128_be","","Attempts to read a big endian `i128` from the underlying…",2,[[],["result",6]]],[11,"read_f32_le","","Reads a little endian IEEE754 `f32` from the underlying…",2,[[]]],[11,"read_f32_be","","Reads a big endian IEEE754 `f32` from the underlying buffer.",2,[[]]],[11,"try_read_f32_le","","Attempts to read a little endian IEEE754 `f32` from the…",2,[[],["result",6]]],[11,"try_read_f32_be","","Attempts to read a big endian IEEE754 `f32` from the…",2,[[],["result",6]]],[11,"read_f64_le","","Reads a little endian IEEE754 `f64` from the underlying…",2,[[]]],[11,"read_f64_be","","Reads a big endian IEEE754 `f64` from the underlying buffer.",2,[[]]],[11,"try_read_f64_le","","Attempts to read a little endian IEEE754 `f64` from the…",2,[[],["result",6]]],[11,"try_read_f64_be","","Attempts to read a big endian IEEE754 `f64` from the…",2,[[],["result",6]]],[8,"WriteBytes","","Write a slice of bytes into a buffer.",null,null],[10,"write_exact","","Forcibly attempts to write the exact slice into the buffer.",3,[[]]],[11,"try_write_exact","","Attempts to write the exact slice into the buffer.",3,[[],["result",6]]],[8,"WriteBytesExt","","Extends `WriteBytes` with functions for writing numbers.",null,null],[11,"write_u8","","Writes a `u8` into the underlying buffer.",4,[[]]],[11,"try_write_u8","","Attempts to write a `u8` into the underlying buffer.",4,[[],["result",6]]],[11,"write_i8","","Writes an `i8` into the underlying buffer.",4,[[]]],[11,"try_write_i8","","Attempts to write an `i8` into the underlying buffer.",4,[[],["result",6]]],[11,"write_u16_le","","Writes a `u16` into the underlying buffer in little endian…",4,[[]]],[11,"write_u16_be","","Writes a `u16` into the underlying buffer in big endian…",4,[[]]],[11,"try_write_u16_le","","Attempts to write a `u16` into the underlying buffer in…",4,[[],["result",6]]],[11,"try_write_u16_be","","Attempts to write a `u16` into the underlying buffer in…",4,[[],["result",6]]],[11,"write_i16_le","","Writes an `i16` into the underlying buffer in little…",4,[[]]],[11,"write_i16_be","","Writes an `i16` into the underlying buffer in big endian…",4,[[]]],[11,"try_write_i16_le","","Attempts to write an `i16` into the underlying buffer in…",4,[[],["result",6]]],[11,"try_write_i16_be","","Attempts to write an `i16` into the underlying buffer in…",4,[[],["result",6]]],[11,"write_u32_le","","Writes a `u32` into the underlying buffer in little endian…",4,[[]]],[11,"write_u32_be","","Writes a `u32` into the underlying buffer in big endian…",4,[[]]],[11,"try_write_u32_le","","Attempts to write a `u32` into the underlying buffer in…",4,[[],["result",6]]],[11,"try_write_u32_be","","Attempts to write a `u32` into the underlying buffer in…",4,[[],["result",6]]],[11,"write_i32_le","","Writes an `i32` into the underlying buffer in little…",4,[[]]],[11,"write_i32_be","","Writes an `i32` into the underlying buffer in big endian…",4,[[]]],[11,"try_write_i32_le","","Attempts to write an `i32` into the underlying buffer in…",4,[[],["result",6]]],[11,"try_write_i32_be","","Attempts to write an `i32` into the underlying buffer in…",4,[[],["result",6]]],[11,"write_u64_le","","Writes a `u64` into the underlying buffer in little endian…",4,[[]]],[11,"write_u64_be","","Writes a `u64` into the underlying buffer in big endian…",4,[[]]],[11,"try_write_u64_le","","Attempts to write a `u64` into the underlying buffer in…",4,[[],["result",6]]],[11,"try_write_u64_be","","Attempts to write a `u64` into the underlying buffer in…",4,[[],["result",6]]],[11,"write_i64_le","","Writes an `i64` into the underlying buffer in little…",4,[[]]],[11,"write_i64_be","","Writes an `i64` into the underlying buffer in big endian…",4,[[]]],[11,"try_write_i64_le","","Attempts to write an `i64` into the underlying buffer in…",4,[[],["result",6]]],[11,"try_write_i64_be","","Attempts to write an `i64` into the underlying buffer in…",4,[[],["result",6]]],[11,"write_u128_le","","Writes a `u128` into the underlying buffer in little…",4,[[]]],[11,"write_u128_be","","Writes a `u128` into the underlying buffer in big endian…",4,[[]]],[11,"try_write_u128_le","","Attempts to write a `u128` into the underlying buffer in…",4,[[],["result",6]]],[11,"try_write_u128_be","","Attempts to write a `u128` into the underlying buffer in…",4,[[],["result",6]]],[11,"write_i128_le","","Writes an `i128` into the underlying buffer in little…",4,[[]]],[11,"write_i128_be","","Writes an `i128` into the underlying buffer in big endian…",4,[[]]],[11,"try_write_i128_le","","Attempts to write an `i128` into the underlying buffer in…",4,[[],["result",6]]],[11,"try_write_i128_be","","Attempts to write an `i128` into the underlying buffer in…",4,[[],["result",6]]],[11,"write_f32_le","","Writes an IEEE754 `f32` into the underlying buffer in…",4,[[]]],[11,"write_f32_be","","Writes an IEEE754 `f32` into the underlying buffer in big…",4,[[]]],[11,"try_write_f32_le","","Attempts to write an IEEE754 `f32` into the underlying…",4,[[],["result",6]]],[11,"try_write_f32_be","","Attempts to write an IEEE754 `f32` into the underlying…",4,[[],["result",6]]],[11,"write_f64_le","","Writes an IEEE754 `f64` into the underlying buffer in…",4,[[]]],[11,"write_f64_be","","Writes an IEEE754 `f64` into the underlying buffer in big…",4,[[]]],[11,"try_write_f64_le","","Attempts to write an IEEE754 `f64` into the underlying…",4,[[],["result",6]]],[11,"try_write_f64_be","","Attempts to write an IEEE754 `f64` into the underlying…",4,[[],["result",6]]],[11,"new","","Creates a new `Reader` by wrapping a `ReadBytes`…",5,[[]]],[11,"num_bytes_read","","Retrieves the number of bytes that have been read by this…",5,[[]]],[11,"into_inner","","Consumes this `Reader` and returns the original…",5,[[]]],[11,"new","","Creates a new `Writer` by wrapping a `WriteBytes`…",6,[[]]],[11,"num_bytes_written","","Retrieves the number of bytes that have been written by…",6,[[]]],[11,"into_inner","","Consumes this `Writer` and returns the original…",6,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"read_exact","","",5,[[]]],[11,"try_read_exact","","",5,[[],["result",6]]],[11,"write_exact","","",6,[[]]],[11,"try_write_exact","","",6,[[],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","","",5,[[["reader",3]]]],[11,"ne","","",5,[[["reader",3]]]],[11,"eq","","",6,[[["writer",3]]]],[11,"ne","","",6,[[["writer",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",6,[[]]],[11,"as_ref","","",5,[[]]],[11,"as_mut","","",6,[[]]],[11,"clone","","",0,[[],["error",4]]],[11,"clone","","",5,[[],["reader",3]]],[11,"clone","","",6,[[],["writer",3]]],[11,"read","","",5,[[],["result",6]]],[11,"write","","",6,[[],["result",6]]],[11,"flush","","",6,[[],["result",6]]]],"p":[[4,"Error"],[8,"ReadBytes"],[8,"ReadBytesExt"],[8,"WriteBytes"],[8,"WriteBytesExt"],[3,"Reader"],[3,"Writer"]]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain…","i":[[4,"PodCastError","bytemuck","The things that can go wrong when casting between [`Pod`]…",null,null],[13,"TargetAlignmentGreaterAndInputNotAligned","","You tried to cast a slice to an element type with a higher…",0,null],[13,"OutputSliceWouldHaveSlop","","If the element size changes then the output slice changes…",0,null],[13,"SizeMismatch","","When casting a slice you can\'t convert between ZST…",0,null],[13,"AlignmentMismatch","","For this type of cast the alignments must be exactly the…",0,null],[5,"bytes_of","","Re-interprets `&T` as `&[u8]`.",null,[[]]],[5,"bytes_of_mut","","Re-interprets `&mut T` as `&mut [u8]`.",null,[[]]],[5,"from_bytes","","Re-interprets `&[u8]` as `&T`.",null,[[]]],[5,"from_bytes_mut","","Re-interprets `&mut [u8]` as `&mut T`.",null,[[]]],[5,"try_from_bytes","","Re-interprets `&[u8]` as `&T`.",null,[[],[["result",4],["podcasterror",4]]]],[5,"try_from_bytes_mut","","Re-interprets `&mut [u8]` as `&mut T`.",null,[[],[["result",4],["podcasterror",4]]]],[5,"cast","","Cast `T` into `U`",null,[[["pod",8]],["pod",8]]],[5,"cast_mut","","Cast `&mut T` into `&mut U`.",null,[[]]],[5,"cast_ref","","Cast `&T` into `&U`.",null,[[]]],[5,"cast_slice","","Cast `&[T]` into `&[U]`.",null,[[]]],[5,"cast_slice_mut","","Cast `&mut [T]` into `&mut [U]`.",null,[[]]],[5,"pod_align_to","","As `align_to`, but safe because of the [`Pod`] bound.",null,[[]]],[5,"pod_align_to_mut","","As `align_to_mut`, but safe because of the [`Pod`] bound.",null,[[]]],[5,"try_cast","","Try to cast `T` into `U`.",null,[[["pod",8]],[["result",4],["podcasterror",4],["pod",8]]]],[5,"try_cast_ref","","Try to convert a `&T` into `&U`.",null,[[],[["result",4],["podcasterror",4]]]],[5,"try_cast_mut","","Try to convert a `&mut T` into `&mut U`.",null,[[],[["result",4],["podcasterror",4]]]],[5,"try_cast_slice","","Try to convert `&[T]` into `&[U]` (possibly with a change…",null,[[],[["result",4],["podcasterror",4]]]],[5,"try_cast_slice_mut","","Try to convert `&mut [T]` into `&mut [U]` (possibly with a…",null,[[],[["podcasterror",4],["result",4]]]],[8,"Zeroable","","Trait for types that can be safely created with `zeroed`.",null,null],[11,"zeroed","","Calls `zeroed`.",1,[[]]],[8,"Pod","","Marker trait for \\\"plain old data\\\".",null,null],[8,"Contiguous","","A trait indicating that:",null,null],[16,"Int","","The primitive integer type with an identical…",2,null],[18,"MAX_VALUE","","The upper inclusive bound for valid instances of this type.",2,null],[18,"MIN_VALUE","","The lower inclusive bound for valid instances of this type.",2,null],[11,"from_integer","","If `value` is within the range for valid instances of this…",2,[[],["option",4]]],[11,"into_integer","","Perform the conversion from `C` into the underlying…",2,[[]]],[8,"TransparentWrapper","","A trait which indicates that a type is a…",null,null],[11,"wrap_ref","","Convert a reference to a wrapped type into a reference to…",3,[[]]],[11,"wrap_mut","","Convert a mut reference to a wrapped type into a mut…",3,[[]]],[14,"offset_of","","Find the offset in bytes of the given `$field` of `$Type`,…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["podcasterror",4]]]],[11,"clone","","",0,[[],["podcasterror",4]]],[11,"zeroed","","Calls `zeroed`.",1,[[]]],[18,"MAX_VALUE","","The upper inclusive bound for valid instances of this type.",2,null],[18,"MIN_VALUE","","The lower inclusive bound for valid instances of this type.",2,null],[11,"from_integer","","If `value` is within the range for valid instances of this…",2,[[],["option",4]]],[11,"into_integer","","Perform the conversion from `C` into the underlying…",2,[[]]],[11,"wrap_ref","","Convert a reference to a wrapped type into a reference to…",3,[[]]],[11,"wrap_mut","","Convert a mut reference to a wrapped type into a mut…",3,[[]]]],"p":[[4,"PodCastError"],[8,"Zeroable"],[8,"Contiguous"],[8,"TransparentWrapper"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for `BigEndian`.",null,null],[6,"LE","","A type alias for `LittleEndian`.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[],["result",6]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"read_u16","","",3,[[]]],[11,"read_u32","","",3,[[]]],[11,"read_u64","","",3,[[]]],[11,"read_u128","","",3,[[]]],[11,"read_uint","","",3,[[]]],[11,"read_uint128","","",3,[[]]],[11,"write_u16","","",3,[[]]],[11,"write_u32","","",3,[[]]],[11,"write_u64","","",3,[[]]],[11,"write_u128","","",3,[[]]],[11,"write_uint","","",3,[[]]],[11,"write_uint128","","",3,[[]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[]]],[11,"read_u32","","",4,[[]]],[11,"read_u64","","",4,[[]]],[11,"read_u128","","",4,[[]]],[11,"read_uint","","",4,[[]]],[11,"read_uint128","","",4,[[]]],[11,"write_u16","","",4,[[]]],[11,"write_u32","","",4,[[]]],[11,"write_u64","","",4,[[]]],[11,"write_u128","","",4,[[]]],[11,"write_uint","","",4,[[]]],[11,"write_uint128","","",4,[[]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[],["bigendian",4]]],[11,"clone","","",4,[[],["littleendian",4]]],[11,"default","","",3,[[],["bigendian",4]]],[11,"default","","",4,[[],["littleendian",4]]],[11,"cmp","","",3,[[["bigendian",4]],["ordering",4]]],[11,"cmp","","",4,[[["littleendian",4]],["ordering",4]]],[11,"eq","","",3,[[["bigendian",4]]]],[11,"eq","","",4,[[["littleendian",4]]]],[11,"partial_cmp","","",3,[[["bigendian",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",4,[[["littleendian",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[],["result",6]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"c2_chacha":{"doc":"Pure Rust ChaCha with SIMD optimizations.","i":[[0,"guts","c2_chacha","",null,null],[8,"Machine","c2_chacha::guts","",null,null],[16,"u32x4","","",0,null],[16,"u64x2","","",0,null],[16,"u128x1","","",0,null],[16,"u32x4x2","","",0,null],[16,"u64x2x2","","",0,null],[16,"u64x4","","",0,null],[16,"u128x2","","",0,null],[16,"u32x4x4","","",0,null],[16,"u64x2x4","","",0,null],[16,"u128x4","","",0,null],[11,"unpack","","",0,[[]]],[11,"vec","","",0,[[]]],[11,"read_le","","",0,[[]]],[11,"read_be","","",0,[[]]],[10,"instance","","",0,[[]]],[3,"ChaCha","","",null,null],[3,"State","","",null,null],[11,"new","","",1,[[]]],[11,"refill4","","Produce 4 blocks of output, advancing the state",1,[[]]],[11,"refill","","Produce a block of output, advancing the state",1,[[]]],[11,"set_stream_param","","",1,[[]]],[11,"get_stream_param","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"clone","","",1,[[],["chacha",3]]],[11,"clone","","",2,[[],["state",3]]]],"p":[[8,"Machine"],[3,"ChaCha"],[3,"State"]]},\
"cfg_if":{"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]},\
"color_quant":{"doc":"Color quantization libraryThis library provides a color…","i":[[3,"NeuQuant","color_quant","Neural network based color quantizer.",null,null],[11,"new","","Creates a new neuronal network and trains it with the…",0,[[]]],[11,"init","","Initializes the neuronal network and trains it with the…",0,[[]]],[11,"map_pixel","","Maps the rgba-pixel in-place to the best-matching color in…",0,[[]]],[11,"index_of","","Finds the best-matching index in the color map.",0,[[]]],[11,"color_map_rgba","","Returns the RGBA color map calculated from the sample. ",0,[[],["vec",3]]],[11,"color_map_rgb","","Returns the RGBA color map calculated from the sample. ",0,[[],["vec",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"NeuQuant"]]},\
"conv":{"doc":"This crate provides a number of conversion traits with…","i":[[4,"DefaultApprox","conv","The \\\"default\\\" approximation scheme. This scheme does…",null,null],[4,"Wrapping","","This scheme is used to convert a value by \\\"wrapping\\\" it…",null,null],[4,"RoundToNearest","","This scheme is used to convert a value by rounding it to…",null,null],[4,"RoundToNegInf","","This scheme is used to convert a value by rounding it…",null,null],[4,"RoundToPosInf","","This scheme is used to convert a value by rounding it…",null,null],[4,"RoundToZero","","This scheme is used to convert a value by rounding it…",null,null],[0,"macros","","This module provides convenience macros to help with…",null,null],[0,"prelude","","Publicly re-exports the most generally useful set of items.",null,null],[0,"errors","","This module defines the various error types that can be…",null,null],[3,"Unrepresentable","conv::errors","Indicates that the conversion failed because the value was…",null,null],[12,"0","","",0,null],[3,"NegOverflow","","Indicates that the conversion failed due to a negative…",null,null],[12,"0","","",1,null],[3,"PosOverflow","","Indicates that the conversion failed due to a positive…",null,null],[12,"0","","",2,null],[4,"GeneralError","","A general error enumeration that subsumes all other…",null,null],[13,"NegOverflow","","Input was too negative for the target type.",3,null],[13,"PosOverflow","","Input was too positive for the target type.",3,null],[13,"Unrepresentable","","Input was not representable in the target type.",3,null],[4,"GeneralErrorKind","","A general error enumeration that subsumes all other…",null,null],[13,"NegOverflow","","Input was too negative for the target type.",4,null],[13,"PosOverflow","","Input was too positive for the target type.",4,null],[13,"Unrepresentable","","Input was not representable in the target type.",4,null],[4,"NoError","","Indicates that it is not possible for the conversion to…",null,null],[4,"FloatError","","Indicates that a conversion from a floating point type…",null,null],[13,"NegOverflow","","Input was too negative for the target type.",5,null],[13,"PosOverflow","","Input was too positive for the target type.",5,null],[13,"NotANumber","","Input was not-a-number, which the target type could not…",5,null],[4,"RangeError","","Indicates that a conversion failed due to a range error.",null,null],[13,"NegOverflow","","Input was too negative for the target type.",6,null],[13,"PosOverflow","","Input was too positive the target type.",6,null],[4,"RangeErrorKind","","Indicates that a conversion failed due to a range error.",null,null],[13,"NegOverflow","","Input was too negative for the target type.",7,null],[13,"PosOverflow","","Input was too positive for the target type.",7,null],[8,"Saturate","","Saturates a `Result`.",null,null],[16,"Output","","The result of saturating.",8,null],[10,"saturate","","Replaces an overflow error with a saturated value.",8,[[]]],[8,"UnwrapOk","","Safely unwrap a `Result` that cannot contain an error.",null,null],[10,"unwrap_ok","","Unwraps a `Result` without possibility of failing.",9,[[]]],[8,"UnwrapOrInf","","Unwrap a conversion by saturating to infinity.",null,null],[16,"Output","","The result of unwrapping.",10,null],[10,"unwrap_or_inf","","Either unwraps the successfully converted value, or…",10,[[]]],[8,"UnwrapOrInvalid","","Unwrap a conversion by replacing a failure with an invalid…",null,null],[16,"Output","","The result of unwrapping.",11,null],[10,"unwrap_or_invalid","","Either unwraps the successfully converted value, or…",11,[[]]],[8,"UnwrapOrSaturate","","Unwrap a conversion by saturating.",null,null],[16,"Output","","The result of unwrapping.",12,null],[10,"unwrap_or_saturate","","Either unwraps the successfully converted value, or…",12,[[]]],[11,"into_inner","","Returns the value stored in this error.",3,[[]]],[11,"into_inner","","Returns the value stored in this error.",0,[[]]],[11,"into_inner","","Returns the value stored in this error.",1,[[]]],[11,"into_inner","","Returns the value stored in this error.",2,[[]]],[11,"into_inner","","Returns the value stored in this error.",5,[[]]],[11,"into_inner","","Returns the value stored in this error.",6,[[]]],[0,"misc","conv","This module defines some additional traits not directly…",null,null],[8,"Saturated","conv::misc","This trait indicates that values of a type can be…",null,null],[10,"saturated_max","","Returns the type\'s saturated, maximum value.",13,[[]]],[10,"saturated_min","","Returns the type\'s saturated, minimum value.",13,[[]]],[8,"InvalidSentinel","","This trait indicates that a type has an \\\"invalid\\\" sentinel…",null,null],[10,"invalid_sentinel","","Returns the type\'s \\\"invalid\\\" sentinel value.",14,[[]]],[8,"SignedInfinity","","This trait indicates that a type has positive and negative…",null,null],[10,"neg_infinity","","Returns the type\'s positive infinity value.",15,[[]]],[10,"pos_infinity","","Returns the type\'s negative infinity value.",15,[[]]],[8,"ApproxFrom","conv","This trait is used to perform a conversion that is…",null,null],[16,"Err","","The error type produced by a failed conversion.",16,null],[10,"approx_from","","Convert the given value into an approximately equivalent…",16,[[],["result",4]]],[8,"ApproxInto","","This is the dual of `ApproxFrom`; see that trait for…",null,null],[16,"Err","","The error type produced by a failed conversion.",17,null],[10,"approx_into","","Convert the subject into an approximately equivalent…",17,[[],["result",4]]],[8,"ApproxScheme","","This trait is used to mark approximation scheme types.",null,null],[8,"TryFrom","","This trait is used to perform a conversion between…",null,null],[16,"Err","","The error type produced by a failed conversion.",18,null],[10,"try_from","","Convert the given value into the subject type.",18,[[],["result",4]]],[8,"TryInto","","This is the dual of `TryFrom`; see that trait for…",null,null],[16,"Err","","The error type produced by a failed conversion.",19,null],[10,"try_into","","Convert the subject into the destination type.",19,[[],["result",4]]],[8,"ValueFrom","","This trait is used to perform an exact, value-preserving…",null,null],[16,"Err","","The error type produced by a failed conversion.",20,null],[10,"value_from","","Convert the given value into an exactly equivalent…",20,[[],["result",4]]],[8,"ValueInto","","This is the dual of `ValueFrom`; see that trait for…",null,null],[16,"Err","","The error type produced by a failed conversion.",21,null],[10,"value_into","","Convert the subject into an exactly equivalent…",21,[[],["result",4]]],[8,"ConvUtil","","This extension trait exists to simplify using various…",null,null],[11,"approx_as","","Approximate the subject to a given type with the default…",22,[[],["result",4]]],[11,"approx_as_by","","Approximate the subject to a given type with a specific…",22,[[],["result",4]]],[11,"into_as","","Convert the subject to a given type.",22,[[]]],[11,"try_as","","Attempt to convert the subject to a given type.",22,[[],["result",4]]],[11,"value_as","","Attempt a value conversion of the subject to a given type.",22,[[],["result",4]]],[8,"ConvAsUtil","","This extension trait exists to simplify using various…",null,null],[11,"approx","","Approximate the subject with the default scheme.",23,[[],["result",4]]],[11,"approx_by","","Approximate the subject with a specific scheme.",23,[[],["result",4]]],[14,"TryFrom","","See the documentation for the `macros` module for details.",null,null],[11,"approx_from","","",24,[[],["result",4]]],[11,"approx_into","","",24,[[],["result",4]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"value_from","","",24,[[],["result",4]]],[11,"value_into","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"approx_from","","",25,[[],["result",4]]],[11,"approx_into","","",25,[[],["result",4]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"value_from","","",25,[[],["result",4]]],[11,"value_into","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"approx_from","","",26,[[],["result",4]]],[11,"approx_into","","",26,[[],["result",4]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"value_from","","",26,[[],["result",4]]],[11,"value_into","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"approx_from","","",27,[[],["result",4]]],[11,"approx_into","","",27,[[],["result",4]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"value_from","","",27,[[],["result",4]]],[11,"value_into","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"approx_from","","",28,[[],["result",4]]],[11,"approx_into","","",28,[[],["result",4]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"value_from","","",28,[[],["result",4]]],[11,"value_into","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"approx_from","","",29,[[],["result",4]]],[11,"approx_into","","",29,[[],["result",4]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"value_from","","",29,[[],["result",4]]],[11,"value_into","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"approx_from","conv::errors","",0,[[],["result",4]]],[11,"approx_into","","",0,[[],["result",4]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"value_from","","",0,[[],["result",4]]],[11,"value_into","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"approx_from","","",1,[[],["result",4]]],[11,"approx_into","","",1,[[],["result",4]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"value_from","","",1,[[],["result",4]]],[11,"value_into","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"approx_from","","",2,[[],["result",4]]],[11,"approx_into","","",2,[[],["result",4]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"value_from","","",2,[[],["result",4]]],[11,"value_into","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"approx_from","","",3,[[],["result",4]]],[11,"approx_into","","",3,[[],["result",4]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"value_from","","",3,[[],["result",4]]],[11,"value_into","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"approx_from","","",4,[[],["result",4]]],[11,"approx_into","","",4,[[],["result",4]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"value_from","","",4,[[],["result",4]]],[11,"value_into","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"approx_from","","",30,[[],["result",4]]],[11,"approx_into","","",30,[[],["result",4]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"value_from","","",30,[[],["result",4]]],[11,"value_into","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"approx_from","","",5,[[],["result",4]]],[11,"approx_into","","",5,[[],["result",4]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"value_from","","",5,[[],["result",4]]],[11,"value_into","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"approx_from","","",6,[[],["result",4]]],[11,"approx_into","","",6,[[],["result",4]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"value_from","","",6,[[],["result",4]]],[11,"value_into","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"approx_from","","",7,[[],["result",4]]],[11,"approx_into","","",7,[[],["result",4]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"value_from","","",7,[[],["result",4]]],[11,"value_into","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",3,[[["noerror",4]]]],[11,"from","","",3,[[["unrepresentable",3]]]],[11,"from","","",3,[[["negoverflow",3]]]],[11,"from","","",3,[[["posoverflow",3]]]],[11,"from","","",3,[[["rangeerror",4]]]],[11,"from","","",3,[[["floaterror",4]],["generalerror",4]]],[11,"from","","",4,[[["noerror",4]]]],[11,"from","","",4,[[["unrepresentable",3]]]],[11,"from","","",4,[[["negoverflow",3]]]],[11,"from","","",4,[[["posoverflow",3]]]],[11,"from","","",4,[[["rangeerrorkind",4]]]],[11,"from","","",4,[[["rangeerror",4]]]],[11,"from","","",4,[[["generalerror",4]]]],[11,"from","","",4,[[["floaterror",4]],["generalerrorkind",4]]],[11,"from","","",0,[[["noerror",4]]]],[11,"from","","",1,[[["noerror",4]]]],[11,"from","","",2,[[["noerror",4]]]],[11,"from","","",5,[[["noerror",4]]]],[11,"from","","",5,[[["negoverflow",3]]]],[11,"from","","",5,[[["posoverflow",3]]]],[11,"from","","",5,[[["rangeerror",4]]]],[11,"from","","",6,[[["noerror",4]]]],[11,"from","","",6,[[["negoverflow",3]]]],[11,"from","","",6,[[["posoverflow",3]]]],[11,"from","","",7,[[["noerror",4]]]],[11,"from","","",7,[[["negoverflow",3]]]],[11,"from","","",7,[[["posoverflow",3]]]],[11,"from","","",7,[[["rangeerror",4]]]],[11,"clone","","",3,[[],["generalerror",4]]],[11,"clone","","",4,[[],["generalerrorkind",4]]],[11,"clone","","",30,[[],["noerror",4]]],[11,"clone","","",0,[[],["unrepresentable",3]]],[11,"clone","","",1,[[],["negoverflow",3]]],[11,"clone","","",2,[[],["posoverflow",3]]],[11,"clone","","",5,[[],["floaterror",4]]],[11,"clone","","",6,[[],["rangeerror",4]]],[11,"clone","","",7,[[],["rangeerrorkind",4]]],[11,"cmp","","",3,[[["generalerror",4]],["ordering",4]]],[11,"cmp","","",4,[[["generalerrorkind",4]],["ordering",4]]],[11,"cmp","","",30,[[["noerror",4]],["ordering",4]]],[11,"cmp","","",0,[[["unrepresentable",3]],["ordering",4]]],[11,"cmp","","",1,[[["negoverflow",3]],["ordering",4]]],[11,"cmp","","",2,[[["posoverflow",3]],["ordering",4]]],[11,"cmp","","",5,[[["floaterror",4]],["ordering",4]]],[11,"cmp","","",6,[[["rangeerror",4]],["ordering",4]]],[11,"cmp","","",7,[[["rangeerrorkind",4]],["ordering",4]]],[11,"eq","","",3,[[["generalerror",4]]]],[11,"ne","","",3,[[["generalerror",4]]]],[11,"eq","","",4,[[["generalerrorkind",4]]]],[11,"eq","","",30,[[["noerror",4]]]],[11,"eq","","",0,[[["unrepresentable",3]]]],[11,"ne","","",0,[[["unrepresentable",3]]]],[11,"eq","","",1,[[["negoverflow",3]]]],[11,"ne","","",1,[[["negoverflow",3]]]],[11,"eq","","",2,[[["posoverflow",3]]]],[11,"ne","","",2,[[["posoverflow",3]]]],[11,"eq","","",5,[[["floaterror",4]]]],[11,"ne","","",5,[[["floaterror",4]]]],[11,"eq","","",6,[[["rangeerror",4]]]],[11,"ne","","",6,[[["rangeerror",4]]]],[11,"eq","","",7,[[["rangeerrorkind",4]]]],[11,"partial_cmp","","",3,[[["generalerror",4]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["generalerror",4]]]],[11,"le","","",3,[[["generalerror",4]]]],[11,"gt","","",3,[[["generalerror",4]]]],[11,"ge","","",3,[[["generalerror",4]]]],[11,"partial_cmp","","",4,[[["generalerrorkind",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",30,[[["noerror",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",0,[[["unrepresentable",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["unrepresentable",3]]]],[11,"le","","",0,[[["unrepresentable",3]]]],[11,"gt","","",0,[[["unrepresentable",3]]]],[11,"ge","","",0,[[["unrepresentable",3]]]],[11,"partial_cmp","","",1,[[["negoverflow",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["negoverflow",3]]]],[11,"le","","",1,[[["negoverflow",3]]]],[11,"gt","","",1,[[["negoverflow",3]]]],[11,"ge","","",1,[[["negoverflow",3]]]],[11,"partial_cmp","","",2,[[["posoverflow",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["posoverflow",3]]]],[11,"le","","",2,[[["posoverflow",3]]]],[11,"gt","","",2,[[["posoverflow",3]]]],[11,"ge","","",2,[[["posoverflow",3]]]],[11,"partial_cmp","","",5,[[["floaterror",4]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["floaterror",4]]]],[11,"le","","",5,[[["floaterror",4]]]],[11,"gt","","",5,[[["floaterror",4]]]],[11,"ge","","",5,[[["floaterror",4]]]],[11,"partial_cmp","","",6,[[["rangeerror",4]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["rangeerror",4]]]],[11,"le","","",6,[[["rangeerror",4]]]],[11,"gt","","",6,[[["rangeerror",4]]]],[11,"ge","","",6,[[["rangeerror",4]]]],[11,"partial_cmp","","",7,[[["rangeerrorkind",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"description","","",3,[[]]],[11,"description","","",4,[[]]],[11,"description","","",30,[[]]],[11,"description","","",0,[[]]],[11,"description","","",1,[[]]],[11,"description","","",2,[[]]],[11,"description","","",5,[[]]],[11,"description","","",6,[[]]],[11,"description","","",7,[[]]]],"p":[[3,"Unrepresentable"],[3,"NegOverflow"],[3,"PosOverflow"],[4,"GeneralError"],[4,"GeneralErrorKind"],[4,"FloatError"],[4,"RangeError"],[4,"RangeErrorKind"],[8,"Saturate"],[8,"UnwrapOk"],[8,"UnwrapOrInf"],[8,"UnwrapOrInvalid"],[8,"UnwrapOrSaturate"],[8,"Saturated"],[8,"InvalidSentinel"],[8,"SignedInfinity"],[8,"ApproxFrom"],[8,"ApproxInto"],[8,"TryFrom"],[8,"TryInto"],[8,"ValueFrom"],[8,"ValueInto"],[8,"ConvUtil"],[8,"ConvAsUtil"],[4,"DefaultApprox"],[4,"Wrapping"],[4,"RoundToNearest"],[4,"RoundToNegInf"],[4,"RoundToPosInf"],[4,"RoundToZero"],[4,"NoError"]]},\
"crc32fast":{"doc":"Example","i":[[3,"Hasher","crc32fast","Represents an in-progress CRC32 computation.",null,null],[11,"new","","Create a new `Hasher`.",0,[[]]],[11,"new_with_initial","","Create a new `Hasher` with an initial CRC32 state.",0,[[]]],[11,"update","","Process the given byte slice and update the hash state.",0,[[]]],[11,"finalize","","Finalize the hash state and return the computed CRC32 value.",0,[[]]],[11,"reset","","Reset the hash state.",0,[[]]],[11,"combine","","Combine the hash state with the hash state for the…",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["hasher",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"write","","",0,[[]]],[11,"finish","","",0,[[]]]],"p":[[3,"Hasher"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","i":[[3,"Worker","crossbeam_deque","A worker queue.",null,null],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[3,"Injector","","An injector queue.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",0,null],[13,"Success","","At least one task was successfully stolen.",0,null],[13,"Retry","","The steal operation needs to be retried.",0,null],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker",3]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker",3]]],[11,"stealer","","Creates a stealer for this queue.",1,[[],["stealer",3]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[]]],[11,"push","","Pushes a task into the queue.",1,[[]]],[11,"pop","","Pops a task from the queue.",1,[[],["option",4]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[]]],[11,"steal","","Steals a task from the queue.",2,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["worker",3]],["steal",4]]],[11,"new","","Creates a new injector queue.",3,[[],["injector",3]]],[11,"push","","Pushes a task into the queue.",3,[[]]],[11,"steal","","Steals a task from the queue.",3,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["worker",3]],["steal",4]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[]]],[11,"success","","Returns the result of the operation, if successful.",0,[[],["option",4]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[],["steal",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"drop","","",3,[[]]],[11,"clone","","",2,[[],["stealer",3]]],[11,"clone","","",0,[[],["steal",4]]],[11,"eq","","",0,[[["steal",4]]]],[11,"ne","","",0,[[["steal",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[],["steal",4]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed…",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows…",null,[[],["guard",3]]],[5,"default_collector","","Returns the default global collector.",null,[[],["collector",3]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,[[]]],[5,"pin","","Pins the current thread.",null,[[],["guard",3]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic",3]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[],["atomic",3]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \\\"consume\\\"…",1,[[["guard",3]],["shared",3]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["pointer",8],["ordering",4]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["pointer",8],["ordering",4],["guard",3]],["shared",3]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["shared",3],["guard",3]],[["shared",3],["result",4],["compareandseterror",3]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["shared",3],["guard",3]],[["shared",3],["result",4],["compareandseterror",3]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current tag.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current tag.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current tag.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"into_owned","","Takes ownership of the pointee.",1,[[],["owned",3]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[],["owned",3]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,[[],["owned",3]]],[11,"into_shared","","Converts the owned pointer into a `Shared`.",2,[[["guard",3]],["shared",3]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[],["box",3]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[],["owned",3]]],[11,"null","","Returns a new null pointer.",3,[[],["shared",3]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,[[]]],[11,"deref","","Dereferences the pointer.",3,[[]]],[11,"deref_mut","","Dereferences the pointer.",3,[[]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[],["option",4]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[],["owned",3]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[],["shared",3]]],[11,"new","","Creates a new collector.",4,[[]]],[11,"register","","Registers a new handle for the collector.",4,[[],["localhandle",3]]],[11,"pin","","Pins the handle.",5,[[],["guard",3]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[],["collector",3]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["shared",3]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[],[["collector",3],["option",4]]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",7,[[],["ordering",4]]],[10,"failure","","The ordering of the operation when it fails.",7,[[],["ordering",4]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",8,[[]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_usize","","",2,[[]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[]]],[11,"into_usize","","",3,[[]]],[11,"from_usize","","",3,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"as_mut","","",2,[[]]],[11,"as_ref","","",2,[[]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned",3]]]],[11,"from","","",1,[[["box",3]]]],[11,"from","","",1,[[]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared",3]]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,[[]]],[11,"from","","",2,[[]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box",3]]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,[[]]],[11,"clone","","Returns a copy of the atomic value.",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[]]],[11,"default","","",1,[[]]],[11,"default","","",3,[[]]],[11,"cmp","","",3,[[],["ordering",4]]],[11,"eq","","",3,[[]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["collector",3]]]],[11,"partial_cmp","","",3,[[],[["ordering",4],["option",4]]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]]],"p":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]},\
"crossbeam_queue":{"doc":"Concurrent queues.","i":[[3,"ArrayQueue","crossbeam_queue","A bounded multi-producer multi-consumer queue.",null,null],[3,"PopError","","Error which occurs when popping from an empty queue.",null,null],[3,"PushError","","Error which occurs when pushing into a full queue.",null,null],[12,"0","","",0,null],[3,"SegQueue","","An unbounded multi-producer multi-consumer queue.",null,null],[11,"new","","Creates a new bounded queue with the given capacity.",1,[[],["arrayqueue",3]]],[11,"push","","Attempts to push an element into the queue.",1,[[],[["pusherror",3],["result",4]]]],[11,"pop","","Attempts to pop an element from the queue.",1,[[],[["poperror",3],["result",4]]]],[11,"capacity","","Returns the capacity of the queue.",1,[[]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[]]],[11,"is_full","","Returns `true` if the queue is full.",1,[[]]],[11,"len","","Returns the number of elements in the queue.",1,[[]]],[11,"new","","Creates a new unbounded queue.",2,[[],["segqueue",3]]],[11,"push","","Pushes an element into the queue.",2,[[]]],[11,"pop","","Pops an element from the queue.",2,[[],[["poperror",3],["result",4]]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[]]],[11,"len","","Returns the number of elements in the queue.",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"drop","","",1,[[]]],[11,"drop","","",2,[[]]],[11,"clone","","",3,[[],["poperror",3]]],[11,"clone","","",0,[[],["pusherror",3]]],[11,"default","","",2,[[],["segqueue",3]]],[11,"eq","","",3,[[["poperror",3]]]],[11,"eq","","",0,[[["pusherror",3]]]],[11,"ne","","",0,[[["pusherror",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"SegQueue"],[3,"PopError"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","i":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[0,"atomic","","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[],["atomiccell",3]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[]]],[11,"store","","Stores `val` into the atomic cell.",0,[[]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this…",0,[[]]],[11,"take","","Takes the value of the atomic cell, leaving…",0,[[]]],[11,"load","","Loads a value.",0,[[]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[],["result",4]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_and","","Applies logical \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies logical \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies logical \\\"xor\\\" to the current value and returns the…",0,[[]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",null,null],[16,"Val","","Type returned by `load_consume`.",1,null],[10,"load_consume","","Loads a value from the atomic using a \\\"consume\\\" memory…",1,[[]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[],["cachepadded",3]]],[11,"into_inner","","Returns the inner value.",2,[[]]],[11,"new","","Creates a new `Backoff`.",3,[[]]],[11,"reset","","Resets the `Backoff`.",3,[[]]],[11,"spin","","Backs off in a lock-free loop.",3,[[]]],[11,"snooze","","Backs off in a blocking loop.",3,[[]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[]]],[0,"sync","","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated `Parker`.",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",null,null],[11,"new","","Creates a new `Parker`.",4,[[],["parker",3]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["duration",3]]]],[11,"unparker","","Returns a reference to an associated `Unparker`.",4,[[],["unparker",3]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[],["shardedlock",3]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[],["lockresult",6]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[],["lockresult",6]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[],[["trylockresult",6],["shardedlockreadguard",3]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[],[["shardedlockreadguard",3],["lockresult",6]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[],[["shardedlockwriteguard",3],["trylockresult",6]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[],[["shardedlockwriteguard",3],["lockresult",6]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[],["waitgroup",3]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",null,null],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[5,"scope","","Creates a new scope for spawning threads.",null,[[],["result",6]]],[11,"spawn","","Spawns a scoped thread.",8,[[],["scopedjoinhandle",3]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[],["scopedthreadbuilder",3]]],[11,"name","","Sets the name for the new thread.",9,[[["string",3]],["scopedthreadbuilder",3]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[],["scopedthreadbuilder",3]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[],[["scopedjoinhandle",3],["result",6]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[],["result",6]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[],["thread",3]]],[11,"from","crossbeam_utils","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","crossbeam_utils::atomic","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","crossbeam_utils::sync","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","crossbeam_utils::thread","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","crossbeam_utils::sync","",12,[[]]],[11,"drop","","",7,[[]]],[11,"from","crossbeam_utils","",2,[[]]],[11,"from","crossbeam_utils::sync","",6,[[]]],[11,"clone","crossbeam_utils","",2,[[],["cachepadded",3]]],[11,"clone","crossbeam_utils::sync","",5,[[],["unparker",3]]],[11,"clone","","",7,[[],["waitgroup",3]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell",3]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded",3]]],[11,"default","","",3,[[],["backoff",3]]],[11,"default","crossbeam_utils::sync","",6,[[],["shardedlock",3]]],[11,"eq","crossbeam_utils","",2,[[["cachepadded",3]]]],[11,"ne","","",2,[[["cachepadded",3]]]],[11,"deref","","",2,[[]]],[11,"deref","crossbeam_utils::sync","",11,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","crossbeam_utils","",2,[[]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::thread","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"hash","crossbeam_utils","",2,[[]]]],"p":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]},\
"custom_derive":{"doc":"Note: This crate has been superseded by `macro-attr`.","i":[],"p":[]},\
"deflate":{"doc":"An implementation an encoder using DEFLATE compression…","i":[[3,"CompressionOptions","deflate","A struct describing the options for a compressor or…",null,null],[12,"max_hash_checks","","The maximum number of checks to make in the hash table for…",0,null],[12,"lazy_if_less_than","","Only lazy match if we have a length less than this value.",0,null],[12,"matching_type","","Whether to use lazy or greedy matching.",0,null],[12,"special","","Force fixed/stored blocks (Not implemented yet).",0,null],[4,"Compression","","An enum describing the level of compression to be used by…",null,null],[13,"Fast","","Fast minimal compression (`CompressionOptions::fast()`).",1,null],[13,"Default","","Default level (`CompressionOptions::default()`).",1,null],[13,"Best","","Higher compression level (`CompressionOptions::high()`).",1,null],[4,"SpecialOptions","","Enum allowing some special options (not implemented yet)!",null,null],[13,"Normal","","Compress normally.",2,null],[13,"_ForceFixed","","Force fixed Huffman tables. (Unimplemented!).",2,null],[13,"_ForceStored","","Force stored (uncompressed) blocks only. (Unimplemented!).",2,null],[4,"MatchingType","","An enum describing whether we use lazy or greedy matching.",null,null],[13,"Greedy","","Use greedy matching: the matching algorithm simply uses a…",3,null],[13,"Lazy","","Use lazy matching: after finding a match, the next input…",3,null],[5,"deflate_bytes_conf","","Compress the given slice of bytes with DEFLATE compression.",null,[[["compressionoptions",3],["into",8]],["vec",3]]],[5,"deflate_bytes","","Compress the given slice of bytes with DEFLATE compression…",null,[[],["vec",3]]],[5,"deflate_bytes_zlib_conf","","Compress the given slice of bytes with DEFLATE…",null,[[["compressionoptions",3],["into",8]],["vec",3]]],[5,"deflate_bytes_zlib","","Compress the given slice of bytes with DEFLATE…",null,[[],["vec",3]]],[11,"high","","Returns compression settings roughly corresponding to the…",0,[[],["compressionoptions",3]]],[11,"fast","","Returns  a fast set of compression settings",0,[[],["compressionoptions",3]]],[11,"huffman_only","","Returns a set of compression settings that makes the…",0,[[],["compressionoptions",3]]],[11,"rle","","Returns a set of compression settings that makes the…",0,[[],["compressionoptions",3]]],[0,"write","","Encoders implementing a `Write` interface.",null,null],[3,"DeflateEncoder","deflate::write","A DEFLATE encoder/compressor.",null,null],[3,"ZlibEncoder","","A Zlib encoder/compressor.",null,null],[11,"from","deflate","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","deflate::write","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",4,[[]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",5,[[]]],[11,"from","deflate","",0,[[["compression",4]],["compressionoptions",3]]],[11,"clone","","",1,[[],["compression",4]]],[11,"clone","","",2,[[],["specialoptions",4]]],[11,"clone","","",0,[[],["compressionoptions",3]]],[11,"clone","","",3,[[],["matchingtype",4]]],[11,"default","","",1,[[],["compression",4]]],[11,"default","","",2,[[],["specialoptions",4]]],[11,"default","","Returns the options describing the default compression…",0,[[],["compressionoptions",3]]],[11,"cmp","","",1,[[["compression",4]],["ordering",4]]],[11,"cmp","","",3,[[["matchingtype",4]],["ordering",4]]],[11,"eq","","",1,[[["compression",4]]]],[11,"eq","","",2,[[["specialoptions",4]]]],[11,"eq","","",0,[[["compressionoptions",3]]]],[11,"ne","","",0,[[["compressionoptions",3]]]],[11,"eq","","",3,[[["matchingtype",4]]]],[11,"partial_cmp","","",1,[[["compression",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",3,[[["matchingtype",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",3,[[]]],[11,"write","deflate::write","",4,[[],["result",6]]],[11,"flush","","Flush the encoder.",4,[[],["result",6]]],[11,"write","","",5,[[],["result",6]]],[11,"flush","","Flush the encoder.",5,[[],["result",6]]],[11,"new","","Creates a new encoder using the provided compression…",4,[[["compressionoptions",3],["into",8]],["deflateencoder",3]]],[11,"finish","","Encode all pending data to the contained writer, consume…",4,[[],["result",6]]],[11,"reset","","Resets the encoder (except the compression options),…",4,[[],["result",6]]],[11,"new","","Create a new `ZlibEncoder` using the provided compression…",5,[[["compressionoptions",3],["into",8]],["zlibencoder",3]]],[11,"finish","","Encode all pending data to the contained writer, consume…",5,[[],["result",6]]],[11,"reset","","Resets the encoder (except the compression options),…",5,[[],["result",6]]],[11,"checksum","","Return the adler32 checksum of the currently consumed data.",5,[[]]]],"p":[[3,"CompressionOptions"],[4,"Compression"],[4,"SpecialOptions"],[4,"MatchingType"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]},\
"derive_more":{"doc":"`derive_more`Build Status Latest Version Rust…","i":[],"p":[]},\
"dirs":{"doc":"The dirs crate is","i":[[5,"home_dir","dirs","Returns the path to the user\'s home directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"cache_dir","","Returns the path to the user\'s cache directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"config_dir","","Returns the path to the user\'s config directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"data_dir","","Returns the path to the user\'s data directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"data_local_dir","","Returns the path to the user\'s local data directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"executable_dir","","Returns the path to the user\'s executable directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"runtime_dir","","Returns the path to the user\'s runtime directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"audio_dir","","Returns the path to the user\'s audio directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"desktop_dir","","Returns the path to the user\'s desktop directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"document_dir","","Returns the path to the user\'s document directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"download_dir","","Returns the path to the user\'s download directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"font_dir","","Returns the path to the user\'s font directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"picture_dir","","Returns the path to the user\'s picture directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"public_dir","","Returns the path to the user\'s public directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"template_dir","","Returns the path to the user\'s template directory.",null,[[],[["pathbuf",3],["option",4]]]],[5,"video_dir","","Returns the path to the user\'s video directory.",null,[[],[["pathbuf",3],["option",4]]]]],"p":[]},\
"either":{"doc":"The enum `Either` with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"into_iter","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"from","","",0,[[["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"partial_cmp","","",0,[[["either",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"hash","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"extend","","",0,[[]]],[11,"clone","","",0,[[],["either",4]]]],"p":[[4,"Either"]]},\
"failure":{"doc":"An experimental new error-handling library. Guide-style…","i":[[3,"Backtrace","failure","A `Backtrace`.",null,null],[3,"Compat","","A compatibility wrapper around an error type from this…",null,null],[3,"Context","","An error with context around it.",null,null],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",null,null],[3,"Error","","The `Error` type, which can contain any failure.",null,null],[3,"Causes","","A iterator over the causes of a `Fail`",null,null],[5,"err_msg","","Constructs a `Fail` type from a string.",null,[[["display",8],["debug",8],["sync",8],["send",8]],["error",3]]],[11,"new","","Constructs a new backtrace. This will only create a real…",0,[[],["backtrace",3]]],[11,"is_empty","","Returns true if displaying this backtrace would be an…",0,[[]]],[11,"into_inner","","Unwraps this into the inner error.",1,[[]]],[11,"get_ref","","Gets a reference to the inner error.",1,[[]]],[11,"new","","Creates a new context without an underlying error message.",2,[[],["context",3]]],[11,"get_context","","Returns a reference to the context provided with this error.",2,[[]]],[11,"map","","Maps `Context<D>` to `Context<T>` by applying a function…",2,[[],["context",3]]],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement…",3,[[]]],[11,"from_boxed_compat","","Creates an `Error` from `Box<std::error::Error>`.",4,[[["stderror",8],["box",3]],["error",3]]],[11,"as_fail","","Return a reference to the underlying failure that this…",4,[[],["fail",8]]],[11,"name","","Returns the name of the underlying fail.",4,[[],["option",4]]],[11,"cause","","Returns a reference to the underlying cause of this…",4,[[],["fail",8]]],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,[[],["backtrace",3]]],[11,"context","","Provides context for this `Error`.",4,[[["display",8],["sync",8],["send",8]],[["context",3],["display",8],["sync",8],["send",8]]]],[11,"compat","","Wraps `Error` in a compatibility type.",4,[[],[["error",3],["compat",3]]]],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[],[["result",4],["error",3],["fail",8]]]],[11,"find_root_cause","","Returns the \\\"root cause\\\" of this error - the last value in…",4,[[],["fail",8]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the…",4,[[],["causes",3]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",4,[[],["causes",3]]],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[],["option",4]]],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[],["option",4]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",4,[[],["fail",8]]],[11,"causes","","Deprecated alias to `iter_causes`.",4,[[],["causes",3]]],[6,"Fallible","","A common result with an `Error`.",null,null],[8,"AsFail","","The `AsFail` trait",null,null],[10,"as_fail","","Converts a reference to `Self` into a dynamic trait object…",5,[[],["fail",8]]],[8,"ResultExt","","Extension methods for `Result`.",null,null],[10,"compat","","Wraps the error in `Compat` to make it compatible with…",6,[[],[["result",4],["compat",3]]]],[10,"context","","Wraps the error type in a context type.",6,[[],[["context",3],["result",4]]]],[10,"with_context","","Wraps the error type in a context type generated by…",6,[[],[["context",3],["result",4]]]],[8,"Fail","","The `Fail` trait.",null,null],[11,"name","","Returns the \\\"name\\\" of the error.",7,[[],["option",4]]],[11,"cause","","Returns a reference to the underlying cause of this…",7,[[],[["fail",8],["option",4]]]],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this…",7,[[],[["backtrace",3],["option",4]]]],[11,"context","","Provides context for this failure.",7,[[],["context",3]]],[11,"compat","","Wraps this failure in a compatibility wrapper that…",7,[[],["compat",3]]],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by…",7,[[],["option",4]]],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by…",7,[[],["option",4]]],[11,"find_root_cause","","Returns the \\\"root cause\\\" of this `Fail` - the last value…",7,[[],["fail",8]]],[11,"iter_causes","","Returns a iterator over the causes of this `Fail` with the…",7,[[],["causes",3]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",7,[[],["causes",3]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",7,[[],["fail",8]]],[11,"causes","","Deprecated alias to `iter_chain`.",7,[[],["causes",3]]],[14,"bail","","Exits a function early with an `Error`.",null,null],[14,"ensure","","Exits a function early with an `Error` if the condition is…",null,null],[14,"format_err","","Constructs an `Error` using the standard string…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"as_fail","","",7,[[],["fail",8]]],[11,"as_fail","","",4,[[],["fail",8]]],[11,"name","","",2,[[],["option",4]]],[11,"cause","","",2,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",2,[[],[["backtrace",3],["option",4]]]],[11,"as_ref","","",4,[[],["fail",8]]],[11,"from","","",2,[[],["context",3]]],[11,"from","","",4,[[],["error",3]]],[11,"next","","",8,[[],[["option",4],["fail",8]]]],[11,"clone","","",1,[[],["compat",3]]],[11,"default","","",0,[[],["backtrace",3]]],[11,"default","","",1,[[],["compat",3]]],[11,"eq","","",1,[[["compat",3]]]],[11,"ne","","",1,[[["compat",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"description","","",1,[[]]]],"p":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]},\
"failure_derive":{"doc":"","i":[[24,"Fail","failure_derive","",null,null]],"p":[]},\
"fnv":{"doc":"An implementation of the Fowler–Noll–Vo hash function.","i":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",null,null],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",null,null],[11,"with_key","","Create an FNV hasher starting with a state corresponding…",0,[[],["fnvhasher",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["fnvhasher",3]]],[11,"finish","","",0,[[]]],[11,"write","","",0,[[]]]],"p":[[3,"FnvHasher"]]},\
"getrandom":{"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system\'s preferred…",null,[[],[["error",3],["result",4]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",0,[[["nonzerou32",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",3]]]],[11,"ne","","",0,[[["error",3]]]],[11,"clone","","",0,[[],["error",3]]]],"p":[[3,"Error"]]},\
"gif":{"doc":"GIF en- and decoding library Build StatusGIF en- and…","i":[[3,"Frame","gif","A GIF frame",null,null],[12,"delay","","Frame delay in units of 10 ms.",0,null],[12,"dispose","","Disposal method.",0,null],[12,"transparent","","Transparent index (if available).",0,null],[12,"needs_user_input","","True if the frame needs user input to be displayed.",0,null],[12,"top","","Offset from the top border of the canvas.",0,null],[12,"left","","Offset from the left border of the canvas.",0,null],[12,"width","","Width of the frame.",0,null],[12,"height","","Height of the frame.",0,null],[12,"interlaced","","True if the image is interlaced.",0,null],[12,"palette","","Frame local color palette if available.",0,null],[12,"buffer","","Buffer containing the image data. Only indices unless…",0,null],[3,"StreamingDecoder","","GIF decoder which supports streaming",null,null],[3,"MemoryLimit","","Memory limit in bytes. `MemoryLimit::Some(0)` means that…",null,null],[12,"0","","",1,null],[3,"Reader","","GIF decoder",null,null],[3,"Decoder","","GIF decoder",null,null],[3,"Encoder","","GIF encoder.",null,null],[4,"Block","","Known GIF block types",null,null],[13,"Image","","Image block.",2,null],[13,"Extension","","Extension block.",2,null],[13,"Trailer","","Image trailer.",2,null],[4,"Extension","","Known GIF extensions",null,null],[13,"Text","","Text extension.",3,null],[13,"Control","","Control extension.",3,null],[13,"Comment","","Comment extension.",3,null],[13,"Application","","Application extension.",3,null],[4,"DisposalMethod","","Disposal method",null,null],[13,"Any","","StreamingDecoder is not required to take any action.",4,null],[13,"Keep","","Do not dispose.",4,null],[13,"Background","","Restore to background color.",4,null],[13,"Previous","","Restore to previous.",4,null],[4,"Decoded","","Indicates whether a certain object has been decoded",null,null],[13,"Nothing","","Decoded nothing.",5,null],[13,"GlobalPalette","","Global palette.",5,null],[13,"BackgroundColor","","Index of the background color in the global palette.",5,null],[13,"Trailer","","Decoded the image trailer.",5,null],[13,"BlockStart","","The start of a block.",5,null],[13,"SubBlockFinished","","Decoded a sub-block. More sub-block are available.",5,null],[13,"BlockFinished","","Decoded the last (or only) sub-block of a block.",5,null],[13,"Frame","","Decoded all information of the next frame. The returned…",5,null],[13,"Data","","Decoded some data of the current frame.",5,null],[13,"DataEnd","","No more data available the current frame.",5,null],[4,"DecodingError","","Decoding error.",null,null],[13,"Format","","Returned if the image is found to be malformed.",6,null],[13,"Internal","","Internal (logic) error.",6,null],[13,"Io","","Wraps `std::io::Error`.",6,null],[4,"ColorOutput","","Output mode for the image data",null,null],[13,"RGBA","","The decoder expands the image data to 32bit RGBA. This…",7,null],[13,"Indexed","","The decoder returns the raw indexed data.",7,null],[4,"Extensions","","Configures how extensions should be handled",null,null],[13,"Save","","Saves all extention data",8,null],[13,"Skip","","Skips the data of unknown extensions and extracts the data…",8,null],[4,"ExtensionData","","Extension data.",null,null],[13,"Control","","Control extension. Use `ExtensionData::new_control_ext` to…",9,null],[12,"flags","gif::ExtensionData","Flags.",10,null],[12,"delay","","Frame delay.",10,null],[12,"trns","","Transparent index.",10,null],[13,"Repetitions","gif","Sets the number of repetitions",9,null],[4,"Repeat","","Number of repetitions",null,null],[13,"Finite","","Finite number of repetitions",11,null],[13,"Infinite","","Infinite number of repetitions",11,null],[11,"from_u8","","Converts `u8` to `Option<Self>`",4,[[],[["disposalmethod",4],["option",4]]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",2,[[],[["block",4],["option",4]]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",3,[[],[["extension",4],["option",4]]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format. Note: This…",0,[[],["frame",3]]],[11,"from_rgba_speed","","Creates a frame from pixels in RGBA format. `speed` is a…",0,[[],["frame",3]]],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels.",0,[[["option",4]],["frame",3]]],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette.",0,[[["option",4]],["frame",3]]],[11,"from_rgb","","Creates a frame from pixels in RGB format. Note: This…",0,[[],["frame",3]]],[11,"from_rgb_speed","","Creates a frame from pixels in RGB format. `speed` is a…",0,[[],["frame",3]]],[11,"new","","Creates a new streaming decoder",12,[[],["streamingdecoder",3]]],[11,"update","","Updates the internal state of the decoder. ",12,[[],[["decodingerror",4],["result",4]]]],[11,"last_ext","","Returns the data of the last extension that has been…",12,[[]]],[11,"current_frame_mut","","Current frame info as a mutable ref.",12,[[],["frame",3]]],[11,"current_frame","","Current frame info as a ref.",12,[[],["frame",3]]],[11,"width","","Width of the image",12,[[]]],[11,"height","","Height of the image",12,[[]]],[11,"new","","Creates a new decoder builder",13,[[],["decoder",3]]],[11,"read_info","","Reads the logical screen descriptor including the global…",13,[[],[["decodingerror",4],["result",4],["reader",3]]]],[11,"next_frame_info","","Returns the next frame info",14,[[],[["decodingerror",4],["result",4],["option",4]]]],[11,"read_next_frame","","Reads the next frame from the image.",14,[[],[["decodingerror",4],["result",4],["option",4]]]],[11,"read_into_buffer","","Reads the data of the current frame into a pre-allocated…",14,[[],[["decodingerror",4],["result",4]]]],[11,"fill_buffer","","Reads data of the current frame into a pre-allocated…",14,[[],[["decodingerror",4],["result",4]]]],[11,"buffer_size","","Output buffer size",14,[[]]],[11,"line_length","","Line length of the current frame",14,[[]]],[11,"palette","","Returns the color palette relevant for the current (next)…",14,[[],[["decodingerror",4],["result",4]]]],[11,"global_palette","","The global color palette",14,[[],["option",4]]],[11,"width","","Width of the image",14,[[]]],[11,"height","","Height of the image",14,[[]]],[11,"bg_color","","Index of the background color in the global palette",14,[[],["option",4]]],[11,"new_control_ext","","Constructor for control extension data.",9,[[["disposalmethod",4],["option",4]],["extensiondata",4]]],[11,"new","","Creates a new encoder.",15,[[],["result",6]]],[11,"write_global_palette","","Writes the global color palette.",15,[[],["result",6]]],[11,"write_frame","","Writes a frame to the image.",15,[[["frame",3]],["result",6]]],[11,"write_extension","","Writes an extension to the image.",15,[[["extensiondata",4]],["result",6]]],[11,"write_raw_extension","","Writes a raw extension to the image.",15,[[],["result",6]]],[8,"SetParameter","","Implemented for objects that have parameters.",null,null],[11,"set","","Sets `value` as a parameter of `self`.",16,[[["parameter",8]]]],[8,"Parameter","","Configuration parameter trait.",null,null],[16,"Result","","Result type of `set_param`.",17,null],[10,"set_param","","Sets `self` as a parameter of `Object`.",17,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"set_param","","",8,[[["streamingdecoder",3]]]],[11,"set_param","","",7,[[["decoder",3]]]],[11,"set_param","","",1,[[["decoder",3]]]],[11,"set_param","","",11,[[["encoder",3]]]],[11,"drop","","",15,[[]]],[11,"from","","",6,[[["error",3]]]],[11,"clone","","",4,[[],["disposalmethod",4]]],[11,"clone","","",2,[[],["block",4]]],[11,"clone","","",3,[[],["extension",4]]],[11,"clone","","",0,[[],["frame",3]]],[11,"default","","",0,[[],["frame",3]]],[11,"eq","","",4,[[["disposalmethod",4]]]],[11,"eq","","",2,[[["block",4]]]],[11,"eq","","",3,[[["extension",4]]]],[11,"eq","","",8,[[["extensions",4]]]],[11,"eq","","",7,[[["coloroutput",4]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"description","","",6,[[]]],[11,"cause","","",6,[[],[["option",4],["error",8]]]],[11,"set","","Sets `value` as a parameter of `self`.",16,[[["parameter",8]]]]],"p":[[3,"Frame"],[3,"MemoryLimit"],[4,"Block"],[4,"Extension"],[4,"DisposalMethod"],[4,"Decoded"],[4,"DecodingError"],[4,"ColorOutput"],[4,"Extensions"],[4,"ExtensionData"],[13,"Control"],[4,"Repeat"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[8,"SetParameter"],[8,"Parameter"]]},\
"image":{"doc":"This crate provides native rust implementations of image…","i":[[3,"Luma","image","Grayscale colors",null,null],[12,"0","","",0,null],[3,"LumaA","","Grayscale colors + alpha channel",null,null],[12,"0","","",1,null],[3,"Rgb","","RGB colors",null,null],[12,"0","","",2,null],[3,"Rgba","","RGB colors + alpha channel",null,null],[12,"0","","",3,null],[3,"Bgr","","BGR colors",null,null],[12,"0","","",4,null],[3,"Bgra","","BGR colors + alpha channel",null,null],[12,"0","","",5,null],[3,"Progress","","Represents the progress of an image operation.",null,null],[3,"Pixels","","Immutable pixel iterator",null,null],[3,"SubImage","","A View into another image",null,null],[3,"ImageBuffer","","Generic image buffer",null,null],[3,"Delay","","The delay of a frame relative to the previous one.",null,null],[3,"Frame","","A single animation frame",null,null],[3,"Frames","","An implementation dependent iterator, reading the frames…",null,null],[4,"ColorType","","An enumeration over supported color types and bit depths",null,null],[13,"L8","","Pixel is 8-bit luminance",6,null],[13,"La8","","Pixel is 8-bit luminance with an alpha channel",6,null],[13,"Rgb8","","Pixel contains 8-bit R, G and B channels",6,null],[13,"Rgba8","","Pixel is 8-bit RGB with an alpha channel",6,null],[13,"L16","","Pixel is 16-bit luminance",6,null],[13,"La16","","Pixel is 16-bit luminance with an alpha channel",6,null],[13,"Rgb16","","Pixel is 16-bit RGB",6,null],[13,"Rgba16","","Pixel is 16-bit RGBA",6,null],[13,"Bgr8","","Pixel contains 8-bit B, G and R channels",6,null],[13,"Bgra8","","Pixel is 8-bit BGR with an alpha channel",6,null],[4,"ExtendedColorType","","An enumeration of color types encountered in image formats.",null,null],[13,"L1","","",7,null],[13,"La1","","",7,null],[13,"Rgb1","","",7,null],[13,"Rgba1","","",7,null],[13,"L2","","",7,null],[13,"La2","","",7,null],[13,"Rgb2","","",7,null],[13,"Rgba2","","",7,null],[13,"L4","","",7,null],[13,"La4","","",7,null],[13,"Rgb4","","",7,null],[13,"Rgba4","","",7,null],[13,"L8","","",7,null],[13,"La8","","",7,null],[13,"Rgb8","","",7,null],[13,"Rgba8","","",7,null],[13,"L16","","",7,null],[13,"La16","","",7,null],[13,"Rgb16","","",7,null],[13,"Rgba16","","",7,null],[13,"Bgr8","","",7,null],[13,"Bgra8","","",7,null],[13,"Unknown","","Pixel is of unknown color type with the specified bits per…",7,null],[4,"ImageFormat","","An enumeration of supported image formats. Not all formats…",null,null],[13,"Png","","An Image in PNG Format",8,null],[13,"Jpeg","","An Image in JPEG Format",8,null],[13,"Gif","","An Image in GIF Format",8,null],[13,"WebP","","An Image in WEBP Format",8,null],[13,"Pnm","","An Image in general PNM Format",8,null],[13,"Tiff","","An Image in TIFF Format",8,null],[13,"Tga","","An Image in TGA Format",8,null],[13,"Dds","","An Image in DDS Format",8,null],[13,"Bmp","","An Image in BMP Format",8,null],[13,"Ico","","An Image in ICO Format",8,null],[13,"Hdr","","An Image in Radiance HDR Format",8,null],[4,"ImageOutputFormat","","An enumeration of supported image formats for encoding.",null,null],[13,"Png","","An Image in PNG Format",9,null],[13,"Jpeg","","An Image in JPEG Format with specified quality",9,null],[13,"Pnm","","An Image in one of the PNM Formats",9,null],[13,"Gif","","An Image in GIF Format",9,null],[13,"Ico","","An Image in ICO Format",9,null],[13,"Bmp","","An Image in BMP Format",9,null],[13,"Unsupported","","A value for signalling an error: An unsupported format was…",9,null],[4,"DynamicImage","","A Dynamic Image",null,null],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",10,null],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",10,null],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",10,null],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",10,null],[13,"ImageBgr8","","Each pixel in this image is 8-bit Bgr",10,null],[13,"ImageBgra8","","Each pixel in this image is 8-bit Bgr with alpha",10,null],[13,"ImageLuma16","","Each pixel in this image is 16-bit Luma",10,null],[13,"ImageLumaA16","","Each pixel in this image is 16-bit Luma with alpha",10,null],[13,"ImageRgb16","","Each pixel in this image is 16-bit Rgb",10,null],[13,"ImageRgba16","","Each pixel in this image is 16-bit Rgb with alpha",10,null],[5,"guess_format","","Guess image format from memory block",null,[[],[["imageformat",4],["imageresult",6]]]],[5,"load","","Create a new image from a Reader",null,[[["bufread",8],["seek",8],["imageformat",4]],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory","","Create a new image from a byte slice",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory_with_format","","Create a new image from a byte slice",null,[[["imageformat",4]],[["imageresult",6],["dynamicimage",4]]]],[5,"open","","Open the image located at the path specified. The image\'s…",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",null,[[["colortype",4]],["imageresult",6]]],[5,"save_buffer_with_format","","Saves the supplied buffer to a file at the path specified…",null,[[["imageformat",4],["colortype",4]],["imageresult",6]]],[5,"image_dimensions","","Read the dimensions of the image located at the specified…",null,[[],["imageresult",6]]],[0,"error","","Contains detailed error representation.",null,null],[3,"UnsupportedError","image::error","The implementation for an operation was not provided.",null,null],[3,"EncodingError","","An error was encountered while encoding an image.",null,null],[3,"ParameterError","","An error was encountered in inputs arguments.",null,null],[3,"DecodingError","","An error was encountered while decoding an image.",null,null],[3,"LimitError","","Completing the operation would have required more…",null,null],[4,"ImageError","","The generic error type for image operations.",null,null],[13,"Decoding","","An error was encountered while decoding.",11,null],[13,"Encoding","","An error was encountered while encoding.",11,null],[13,"Parameter","","An error was encountered in input arguments.",11,null],[13,"Limits","","Completing the operation would have required more…",11,null],[13,"Unsupported","","An operation can not be completed by the chosen abstraction.",11,null],[13,"IoError","","An error occurred while interacting with the environment.",11,null],[4,"UnsupportedErrorKind","","Details what feature is not supported.",null,null],[13,"Color","","The required color type can not be handled.",12,null],[13,"Format","","An image format is not supported.",12,null],[13,"GenericFeature","","Some feature specified by string. This is discouraged and…",12,null],[4,"ParameterErrorKind","","Details how a parameter is malformed.",null,null],[13,"DimensionMismatch","","The dimensions passed are wrong.",13,null],[13,"FailedAlready","","Repeated an operation for which error that could not be…",13,null],[13,"Generic","","A string describing the parameter. This is discouraged and…",13,null],[13,"NoMoreData","","The end of the image has been reached.",13,null],[4,"LimitErrorKind","","Indicates the limit that prevented an operation from…",null,null],[13,"DimensionError","","The resulting image exceed dimension limits in either…",14,null],[13,"InsufficientMemory","","The operation would have performed an allocation larger…",14,null],[4,"ImageFormatHint","","A best effort representation for image formats.",null,null],[13,"Exact","","The format is known exactly.",15,null],[13,"Name","","The format can be identified by a name.",15,null],[13,"PathExtension","","A common path extension for the format is known.",15,null],[13,"Unknown","","The format is not known or could not be determined.",15,null],[6,"ImageResult","","Result of an image decoding/encoding process",null,null],[11,"from_format_and_kind","","Create an `UnsupportedError` for an image with details on…",16,[[["unsupportederrorkind",4],["imageformathint",4]]]],[11,"kind","","Returns the corresponding `UnsupportedErrorKind` of the…",16,[[],["unsupportederrorkind",4]]],[11,"format_hint","","Returns the image format associated with this error.",16,[[],["imageformathint",4]]],[11,"new","","Create a `DecodingError` that stems from an arbitrary…",17,[[["imageformathint",4]]]],[11,"from_format_hint","","Create a `DecodingError` for an image format.",17,[[["imageformathint",4]]]],[11,"format_hint","","Returns the image format associated with this error.",17,[[],["imageformathint",4]]],[11,"new","","Create an `EncodingError` that stems from an arbitrary…",18,[[["imageformathint",4]]]],[11,"from_format_hint","","Create a `DecodingError` for an image format.",18,[[["imageformathint",4]]]],[11,"format_hint","","Return the image format associated with this error.",18,[[],["imageformathint",4]]],[11,"from_kind","","Construct a `ParameterError` directly from a corresponding…",19,[[["parametererrorkind",4]]]],[11,"kind","","Returns the corresponding `ParameterErrorKind` of the error.",19,[[],["parametererrorkind",4]]],[11,"from_kind","","Construct a generic `LimitError` directly from a…",20,[[["limiterrorkind",4]]]],[11,"kind","","Returns the corresponding `LimitErrorKind` of the error.",20,[[],["limiterrorkind",4]]],[0,"math","image","Mathematical helper functions and types.",null,null],[3,"Rect","image::math","A Rectangle defined by its top left corner, width and…",null,null],[12,"x","","The x coordinate of the top left corner.",21,null],[12,"y","","The y coordinate of the top left corner.",21,null],[12,"width","","The rectangle\'s width.",21,null],[12,"height","","The rectangle\'s height.",21,null],[0,"nq","","NEUQUANT Neural-Net quantization algorithm by Anthony…",null,null],[3,"NeuQuant","image::math::nq","Neural network color quantizer",null,null],[11,"new","","Creates a new neural network and trains it with the…",22,[[]]],[11,"init","","Initializes the neural network and trains it with the…",22,[[]]],[11,"map_pixel","","Maps the pixel in-place to the best-matching color in the…",22,[[]]],[11,"index_of","","Finds the best-matching index in the color map for `pixel`",22,[[]]],[0,"utils","image::math","Shared mathematical utility functions.",null,null],[5,"clamp","image::math::utils","Cut value to be inside given range",null,[[]]],[0,"imageops","image","Image Processing Functions",null,null],[4,"FilterType","image::imageops","Available Sampling Filters.",null,null],[13,"Nearest","","Nearest Neighbor",23,null],[13,"Triangle","","Linear Filter",23,null],[13,"CatmullRom","","Cubic Filter",23,null],[13,"Gaussian","","Gaussian Filter",23,null],[13,"Lanczos3","","Lanczos with window 3",23,null],[5,"flip_horizontal","","Flip an image horizontally",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"flip_horizontal_in_place","","Flip an image horizontally in place.",null,[[]]],[5,"flip_vertical","","Flip an image vertically",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"flip_vertical_in_place","","Flip an image vertically in place.",null,[[]]],[5,"rotate180","","Rotate an image 180 degrees clockwise.",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"rotate180_in_place","","Rotate an image 180 degrees clockwise in place.",null,[[]]],[5,"rotate270","","Rotate an image 270 degrees clockwise.",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"rotate90","","Rotate an image 90 degrees clockwise.",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"rotate180_in","","Rotate an image 180 degrees clockwise and put the result…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"rotate90_in","","Rotate an image 90 degrees clockwise and put the result…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"rotate270_in","","Rotate an image 270 degrees clockwise and put the result…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"flip_horizontal_in","","Flip an image horizontally and put the result into the…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"flip_vertical_in","","Flip an image vertically and put the result into the…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"blur","","Performs a Gaussian blur on the supplied image. `sigma` is…",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image. `kernel`…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"resize","","Resize the supplied image to the specified dimensions.…",null,[[["filtertype",4]],[["imagebuffer",3],["vec",3]]]],[5,"thumbnail","","Resize the supplied image to the specific dimensions.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"unsharpen","","Performs an unsharpen mask on the supplied image. `sigma`…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"crop","","Return a mutable view into an image",null,[[],["subimage",3]]],[5,"overlay_bounds","","Calculate the region that can be copied from top to bottom.",null,[[]]],[5,"overlay","","Overlay an image at a given coordinate (x, y)",null,[[]]],[5,"replace","","Replace the contents of an image at a given coordinate (x,…",null,[[]]],[0,"colorops","","Functions for altering and converting the color of pixelbufs",null,null],[3,"BiLevel","image::imageops::colorops","A bi-level color map",null,null],[5,"grayscale","","Convert the supplied image to grayscale",null,[[],[["vec",3],["imagebuffer",3],["luma",3]]]],[5,"invert","","Invert each pixel within the supplied image. This function…",null,[[]]],[5,"contrast","","Adjust the contrast of the supplied image. `contrast` is…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"brighten","","Brighten the supplied image. `value` is the amount to…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"huerotate","","Hue rotate the supplied image. `value` is the degrees to…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"dither","","Reduces the colors of the image using the supplied…",null,[[["imagebuffer",3]]]],[5,"index_colors","","Reduces the colors using the supplied `color_map` and…",null,[[["imagebuffer",3]],[["luma",3],["imagebuffer",3],["vec",3]]]],[8,"ColorMap","","A color map",null,null],[16,"Color","","The color type on which the map operates on",24,null],[10,"index_of","","Returns the index of the closed match of `color` in the…",24,[[]]],[10,"map_color","","Maps `color` to the closest color in the color map.",24,[[]]],[0,"io","image","Input and output of images.",null,null],[3,"Reader","image::io","A multi-format image reader.",null,null],[11,"new","","Create a new image reader without a preset format.",25,[[]]],[11,"with_format","","Construct a reader with specified format.",25,[[["imageformat",4]]]],[11,"format","","Get the currently determined format.",25,[[],[["option",4],["imageformat",4]]]],[11,"set_format","","Supply the format as which to interpret the read image.",25,[[["imageformat",4]]]],[11,"clear_format","","Remove the current information on the image format.",25,[[]]],[11,"into_inner","","Unwrap the reader.",25,[[]]],[11,"open","","Open a file to read, format will be guessed from path.",25,[[],["result",6]]],[11,"with_guessed_format","","Make a format guess based on the content, replacing it on…",25,[[],["result",6]]],[11,"into_dimensions","","Read the image dimensions.",25,[[],["imageresult",6]]],[11,"decode","","Read the image (replaces `load`).",25,[[],[["imageresult",6],["dynamicimage",4]]]],[0,"flat","image","Image representations for ffi.",null,null],[3,"FlatSamples","image::flat","A flat buffer over a (multi channel) image.",null,null],[12,"samples","","Underlying linear container holding sample values.",26,null],[12,"layout","","A `repr(C)` description of the layout of buffer samples.",26,null],[12,"color_hint","","Supplementary color information.",26,null],[3,"SampleLayout","","A ffi compatible description of a sample buffer.",null,null],[12,"channels","","The number of channels in the color representation of the…",27,null],[12,"channel_stride","","Add this to an index to get to the sample in the next…",27,null],[12,"width","","The width of the represented image.",27,null],[12,"width_stride","","Add this to an index to get to the next sample in…",27,null],[12,"height","","The height of the represented image.",27,null],[12,"height_stride","","Add this to an index to get to the next sample in…",27,null],[3,"View","","A flat buffer that can be used as an image view.",null,null],[3,"ViewMut","","A mutable owning version of a flat buffer.",null,null],[4,"Error","","Denotes invalid flat sample buffers when trying to convert…",null,null],[13,"TooLarge","","The represented image was too large.",28,null],[13,"NormalFormRequired","","The represented image can not use this representation.",28,null],[13,"WrongColor","","The color format did not match the channel count.",28,null],[4,"NormalForm","","Different normal forms of buffers.",null,null],[13,"Unaliased","","No pixel aliases another.",29,null],[13,"PixelPacked","","At least pixels are packed.",29,null],[13,"ImagePacked","","All samples are packed.",29,null],[13,"RowMajorPacked","","The samples are in row-major form and all samples are…",29,null],[13,"ColumnMajorPacked","","The samples are in column-major form and all samples are…",29,null],[11,"row_major_packed","","Describe a row-major image packed in all directions.",27,[[]]],[11,"column_major_packed","","Describe a column-major image packed in all directions.",27,[[]]],[11,"strides_cwh","","Get the strides for indexing matrix-like `[(c, w, h)]`.",27,[[]]],[11,"extents","","Get the dimensions `(channels, width, height)`.",27,[[]]],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",27,[[]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",27,[[],["option",4]]],[11,"fits","","Check if a buffer of length `len` is large enough.",27,[[]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",27,[[]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal…",27,[[["normalform",4]]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",27,[[]]],[11,"index","","Resolve the index of a particular sample.",27,[[],["option",4]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (channel, x, y).",27,[[],["option",4]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",27,[[]]],[11,"shrink_to","","Shrink the image to the minimum of current and given…",27,[[]]],[11,"strides_cwh","","Get the strides for indexing matrix-like `[(c, w, h)]`.",26,[[]]],[11,"extents","","Get the dimensions `(channels, width, height)`.",26,[[]]],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",26,[[]]],[11,"as_ref","","Get a reference based version.",26,[[],["flatsamples",3]]],[11,"as_mut","","Get a mutable reference based version.",26,[[],["flatsamples",3]]],[11,"to_vec","","Copy the data into an owned vector.",26,[[],[["flatsamples",3],["vec",3]]]],[11,"get_sample","","Get a reference to a single sample.",26,[[],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a single sample.",26,[[],["option",4]]],[11,"as_view","","View this buffer as an image over some type of pixel.",26,[[],[["result",4],["view",3],["error",4]]]],[11,"as_view_with_mut_samples","","View this buffer but keep mutability at a sample level.",26,[[],[["error",4],["result",4],["view",3]]]],[11,"as_view_mut","","Interpret this buffer as a mutable image.",26,[[],[["error",4],["result",4],["viewmut",3]]]],[11,"as_slice","","View the samples as a slice.",26,[[]]],[11,"as_mut_slice","","View the samples as a slice.",26,[[]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",26,[[],["option",4]]],[11,"image_mut_slice","","Mutable portion of the buffer that holds sample values.",26,[[],["option",4]]],[11,"try_into_buffer","","Move the data into an image buffer.",26,[[],[["imagebuffer",3],["result",4]]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",26,[[],["option",4]]],[11,"fits","","Check if a buffer of length `len` is large enough.",26,[[]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",26,[[]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal…",26,[[["normalform",4]]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",26,[[]]],[11,"index","","Resolve the index of a particular sample.",26,[[],["option",4]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (x, y, channel).",26,[[],["option",4]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",26,[[]]],[11,"shrink_to","","Shrink the image to the minimum of current and given…",26,[[]]],[11,"into_inner","","Take out the sample buffer.",30,[[],["flatsamples",3]]],[11,"flat","","Get a reference on the inner sample descriptor.",30,[[],["flatsamples",3]]],[11,"samples","","Get a reference on the inner buffer.",30,[[]]],[11,"get_sample","","Get a reference to a selected subpixel if it is in-bounds.",30,[[],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a selected subpixel if it is…",30,[[],["option",4]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",30,[[]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",30,[[]]],[11,"image_mut_slice","","Return the mutable portion of the buffer that holds sample…",30,[[]]],[11,"shrink_to","","Shrink the inner image.",30,[[]]],[11,"try_upgrade","","Try to convert this into an image with mutable pixels.",30,[[],[["result",4],["viewmut",3]]]],[11,"into_inner","","Take out the sample buffer.",31,[[],["flatsamples",3]]],[11,"flat","","Get a reference on the sample buffer descriptor.",31,[[],["flatsamples",3]]],[11,"samples","","Get a reference on the inner buffer.",31,[[]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",31,[[]]],[11,"get_sample","","Get a reference to a selected subpixel.",31,[[],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a selected sample.",31,[[],["option",4]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",31,[[]]],[11,"image_mut_slice","","Return the mutable buffer that holds sample values.",31,[[]]],[11,"shrink_to","","Shrink the inner image.",31,[[]]],[0,"bmp","image","Decoding and Encoding of BMP Images",null,null],[3,"BmpDecoder","image::bmp","A bmp decoder",null,null],[3,"BMPEncoder","","The representation of a BMP encoder.",null,null],[11,"new","","Create a new decoder that decodes from the stream `r`",32,[[],[["imageresult",6],["bmpdecoder",3]]]],[11,"new","","Create a new encoder that writes its output to `w`.",33,[[]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",33,[[["colortype",4]],["imageresult",6]]],[0,"dds","image","Decoding of DDS images",null,null],[3,"DdsDecoder","image::dds","The representation of a DDS decoder",null,null],[11,"new","","Create a new decoder that decodes from the stream `r`",34,[[],["imageresult",6]]],[0,"dxt","image","Decoding of DXT (S3TC) compression",null,null],[3,"DxtDecoder","image::dxt","DXT decoder",null,null],[3,"DXTReader","","DXT reader",null,null],[3,"DXTEncoder","","DXT encoder",null,null],[4,"DXTVariant","","What version of DXT compression are we using? Note that…",null,null],[13,"DXT1","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel…",35,null],[13,"DXT3","","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel…",35,null],[13,"DXT5","","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel…",35,null],[11,"color_type","","Returns the color type that is stored in this DXT variant",35,[[],["colortype",4]]],[11,"new","","Create a new DXT decoder that decodes from the stream `r`.…",36,[[["dxtvariant",4]],[["result",4],["dxtdecoder",3],["imageerror",4]]]],[11,"new","","Create a new encoder that writes its output to `w`",37,[[],["dxtencoder",3]]],[11,"encode","","Encodes the image data `data` that has dimensions `width`…",37,[[["dxtvariant",4]],["imageresult",6]]],[0,"gif","image","Decoding of GIF Images",null,null],[3,"GifDecoder","image::gif","GIF decoder",null,null],[3,"GifReader","","Wrapper struct around a `Cursor<Vec<u8>>`",null,null],[3,"Encoder","","GIF encoder.",null,null],[11,"new","","Creates a new decoder that decodes the input steam `r`",38,[[],[["imageresult",6],["gifdecoder",3]]]],[11,"new","","Creates a new GIF encoder.",39,[[],["encoder",3]]],[11,"encode","","Encode a single image.",39,[[["colortype",4]],["imageresult",6]]],[11,"encode_frame","","Encode one frame of animation.",39,[[["frame",3]],["imageresult",6]]],[11,"encode_frames","","Encodes Frames. Consider using `try_encode_frames` instead…",39,[[],["imageresult",6]]],[11,"try_encode_frames","","Try to encode a collection of…",39,[[],["imageresult",6]]],[0,"hdr","image","Decoding of Radiance HDR Images",null,null],[3,"HDRAdapter","image::hdr","Adapter to conform to `ImageDecoder` trait",null,null],[3,"HdrReader","","Wrapper struct around a `Cursor<Vec<u8>>`",null,null],[3,"HdrDecoder","","An Radiance HDR decoder",null,null],[3,"RGBE8Pixel","","Refer to wikipedia",null,null],[12,"c","","Color components",40,null],[12,"e","","Exponent",40,null],[3,"HDRImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[3,"HDRMetadata","","Metadata for Radiance HDR image",null,null],[12,"width","","Width of decoded image. It could be either scanline…",41,null],[12,"height","","Height of decoded image. It depends on orientation too.",41,null],[12,"orientation","","Orientation matrix. For standard orientation it is…",41,null],[12,"exposure","","Divide color values by exposure to get to get physical…",41,null],[12,"color_correction","","Divide color values by corresponding tuple member (r, g,…",41,null],[12,"pixel_aspect_ratio","","Pixel height divided by pixel width",41,null],[12,"custom_attributes","","All lines contained in image header are put here. Ordering…",41,null],[3,"HDREncoder","","Radiance HDR encoder",null,null],[5,"rgbe8","","Creates `RGBE8Pixel` from components",null,[[],["rgbe8pixel",3]]],[5,"read_raw_file","","Helper function for reading raw 3-channel f32 images",null,[[["path",3],["asref",8]],[["result",6],["vec",3]]]],[5,"to_rgbe8","","Converts `Rgb<f32>` into `RGBE8Pixel`",null,[[["rgb",3]],["rgbe8pixel",3]]],[11,"new","","Creates adapter",42,[[],[["imageresult",6],["hdradapter",3]]]],[11,"new_nonstrict","","Allows reading old Radiance HDR images",42,[[],[["imageresult",6],["hdradapter",3]]]],[11,"to_hdr","","Converts `RGBE8Pixel` into `Rgb<f32>` linearly",40,[[],["rgb",3]]],[11,"to_ldr","","Converts `RGBE8Pixel` into `Rgb<T>` with scale=1 and…",40,[[],[["primitive",8],["zero",8],["rgb",3]]]],[11,"to_ldr_scale_gamma","","Converts RGBE8Pixel into Rgb using provided scale and gamma",40,[[],[["primitive",8],["zero",8],["rgb",3]]]],[11,"new","","Reads Radiance HDR image header from stream `r` if the…",43,[[],[["imageresult",6],["hdrdecoder",3]]]],[11,"with_strictness","","Reads Radiance HDR image header from stream `reader`, if…",43,[[],[["imageresult",6],["hdrdecoder",3]]]],[11,"metadata","","Returns file metadata. Refer to `HDRMetadata` for details.",43,[[],["hdrmetadata",3]]],[11,"read_image_native","","Consumes decoder and returns a vector of RGBE8 pixels",43,[[],[["imageresult",6],["vec",3]]]],[11,"read_image_transform","","Consumes decoder and returns a vector of transformed pixels",43,[[["sync",8],["fn",8],["send",8]],["imageresult",6]]],[11,"read_image_ldr","","Consumes decoder and returns a vector of Rgb pixels. scale…",43,[[],[["vec",3],["imageresult",6]]]],[11,"read_image_hdr","","Consumes decoder and returns a vector of Rgb pixels.",43,[[],[["imageresult",6],["vec",3]]]],[11,"new","","Creates encoder",44,[[],["hdrencoder",3]]],[11,"encode","","Encodes the image `data` that has dimensions `width` and…",44,[[],["imageresult",6]]],[17,"SIGNATURE","","Radiance HDR file signature",null,null],[0,"ico","image","Decoding and Encoding of ICO files",null,null],[3,"IcoDecoder","image::ico","An ico decoder",null,null],[3,"ICOEncoder","","ICO encoder",null,null],[11,"new","","Create a new decoder that decodes from the stream `r`",45,[[],[["icodecoder",3],["imageresult",6]]]],[11,"new","","Create a new encoder that writes its output to `w`.",46,[[],["icoencoder",3]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",46,[[["colortype",4]],["imageresult",6]]],[0,"jpeg","image","Decoding and Encoding of JPEG Images",null,null],[3,"JpegDecoder","image::jpeg","JPEG decoder",null,null],[3,"JPEGEncoder","","The representation of a JPEG encoder",null,null],[3,"PixelDensity","","Represents the pixel density of an image",null,null],[12,"density","","A couple of values for (Xdensity, Ydensity)",47,null],[12,"unit","","The unit in which the density is measured",47,null],[4,"PixelDensityUnit","","Represents a unit in which the density of an image is…",null,null],[13,"PixelAspectRatio","","Represents the absence of a unit, the values indicate only…",48,null],[13,"Inches","","Pixels per inch (2.54 cm)",48,null],[13,"Centimeters","","Pixels per centimeter",48,null],[11,"new","","Create a new decoder that decodes from the stream `r`",49,[[],[["jpegdecoder",3],["imageresult",6]]]],[11,"dpi","","Creates the most common pixel density type: the horizontal…",47,[[]]],[11,"new","","Create a new encoder that writes its output to `w`",50,[[],["jpegencoder",3]]],[11,"new_with_quality","","Create a new encoder that writes its output to `w`, and…",50,[[],["jpegencoder",3]]],[11,"set_pixel_density","","Set the pixel density of the images the encoder will…",50,[[["pixeldensity",3]]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",50,[[["colortype",4]],["imageresult",6]]],[0,"png","image","Decoding and Encoding of PNG Images",null,null],[3,"PNGReader","image::png","PNG Reader",null,null],[3,"PngDecoder","","PNG decoder",null,null],[3,"PNGEncoder","","PNG encoder",null,null],[11,"new","","Creates a new decoder that decodes from the stream `r`",51,[[],[["imageresult",6],["pngdecoder",3]]]],[11,"new","","Create a new encoder that writes its output to `w`",52,[[],["pngencoder",3]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",52,[[["colortype",4]],["imageresult",6]]],[0,"pnm","image","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",null,null],[3,"PnmDecoder","image::pnm","PNM decoder",null,null],[3,"PNMEncoder","","Encodes images to any of the `pnm` image formats.",null,null],[3,"ArbitraryHeader","","Header produced by a `pam` file (\\\"Portable Arbitrary Map\\\")",null,null],[12,"height","","Height of the image file",53,null],[12,"width","","Width of the image file",53,null],[12,"depth","","Number of color channels",53,null],[12,"maxval","","Maximum sample value within the image",53,null],[12,"tupltype","","Color interpretation of image pixels",53,null],[3,"BitmapHeader","","Header produced by a `pbm` file (\\\"Portable Bit Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",54,null],[12,"height","","Height of the image file",54,null],[12,"width","","Width of the image file",54,null],[3,"GraymapHeader","","Header produced by a `pgm` file (\\\"Portable Gray Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",55,null],[12,"height","","Height of the image file",55,null],[12,"width","","Width of the image file",55,null],[12,"maxwhite","","Maximum sample value within the image",55,null],[3,"PixmapHeader","","Header produced by a `ppm` file (\\\"Portable Pixel Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",56,null],[12,"height","","Height of the image file",56,null],[12,"width","","Width of the image file",56,null],[12,"maxval","","Maximum sample value within the image",56,null],[3,"PNMHeader","","Stores the complete header data of a file.",null,null],[4,"ArbitraryTuplType","","Standardized tuple type specifiers in the header of a `pam`.",null,null],[13,"BlackAndWhite","","Pixels are either black (0) or white (1)",57,null],[13,"BlackAndWhiteAlpha","","Pixels are either black (0) or white (1) and a second…",57,null],[13,"Grayscale","","Pixels represent the amount of white",57,null],[13,"GrayscaleAlpha","","Grayscale with an additional alpha channel",57,null],[13,"RGB","","Three channels: Red, Green, Blue",57,null],[13,"RGBAlpha","","Four channels: Red, Green, Blue, Alpha",57,null],[13,"Custom","","An image format which is not standardized",57,null],[4,"PNMSubtype","","Denotes the category of the magic number",null,null],[13,"Bitmap","","Magic numbers P1 and P4",58,null],[13,"Graymap","","Magic numbers P2 and P5",58,null],[13,"Pixmap","","Magic numbers P3 and P6",58,null],[13,"ArbitraryMap","","Magic number P7",58,null],[4,"SampleEncoding","","The kind of encoding used to store sample values",null,null],[13,"Binary","","Samples are unsigned binary integers in big endian",59,null],[13,"Ascii","","Samples are encoded as decimal ascii strings separated by…",59,null],[11,"new","","Create a new decoder that decodes from the stream `read`",60,[[],[["imageresult",6],["pnmdecoder",3]]]],[11,"into_inner","","Extract the reader and header after an image has been read.",60,[[]]],[11,"subtype","","Get the pnm subtype, depending on the magic constant…",60,[[],["pnmsubtype",4]]],[11,"new","","Create new PNMEncoder from the `writer`.",61,[[]]],[11,"with_subtype","","Encode a specific pnm subtype image.",61,[[["pnmsubtype",4]]]],[11,"with_header","","Enforce the use of a chosen header.",61,[[["pnmheader",3]]]],[11,"with_dynamic_header","","Create the header dynamically for each image.",61,[[]]],[11,"encode","","Encode an image whose samples are represented as `u8`.",61,[[["colortype",4]],["imageresult",6]]],[11,"magic_constant","","Get the two magic constant bytes corresponding to this…",58,[[]]],[11,"sample_encoding","","Whether samples are stored as binary or as decimal ascii",58,[[],["sampleencoding",4]]],[11,"subtype","","Retrieve the format subtype from which the header was…",62,[[],["pnmsubtype",4]]],[11,"width","","The width of the image this header is for.",62,[[]]],[11,"height","","The height of the image this header is for.",62,[[]]],[11,"maximal_sample","","The biggest value a sample can have. In other words, the…",62,[[]]],[11,"as_bitmap","","Retrieve the underlying bitmap header if any",62,[[],[["option",4],["bitmapheader",3]]]],[11,"as_graymap","","Retrieve the underlying graymap header if any",62,[[],[["graymapheader",3],["option",4]]]],[11,"as_pixmap","","Retrieve the underlying pixmap header if any",62,[[],[["option",4],["pixmapheader",3]]]],[11,"as_arbitrary","","Retrieve the underlying arbitrary header if any",62,[[],[["option",4],["arbitraryheader",3]]]],[11,"write","","Write the header back into a binary stream",62,[[["write",8]],["result",6]]],[0,"tga","image","Decoding of TGA Images",null,null],[3,"TgaDecoder","image::tga","The representation of a TGA decoder",null,null],[11,"new","","Create a new decoder that decodes from the stream `r`",63,[[],[["imageresult",6],["tgadecoder",3]]]],[0,"tiff","image","Decoding and Encoding of TIFF Images",null,null],[3,"TiffDecoder","image::tiff","Decoder for TIFF images.",null,null],[3,"TiffReader","","Wrapper struct around a `Cursor<Vec<u8>>`",null,null],[3,"TiffEncoder","","Encoder for tiff images",null,null],[11,"new","","Create a new TiffDecoder.",64,[[],[["tiffdecoder",3],["result",4],["imageerror",4]]]],[11,"new","","Create a new encoder that writes its output to `w`",65,[[],["tiffencoder",3]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",65,[[["colortype",4]],["imageresult",6]]],[0,"webp","image","Decoding of WebP Images",null,null],[3,"WebPDecoder","image::webp","WebP Image format decoder. Currently only supportes the…",null,null],[11,"new","","Create a new WebPDecoder from the Reader `r`. This…",66,[[],[["imageresult",6],["webpdecoder",3]]]],[0,"vp8","","An implementation of the VP8 Video Codec",null,null],[3,"Frame","image::webp::vp8","A Representation of the last decoded video frame",null,null],[12,"width","","The width of the luma plane",67,null],[12,"height","","The height of the luma plane",67,null],[12,"ybuf","","The luma plane of the frame",67,null],[12,"keyframe","","Indicates whether this frame is a keyframe",67,null],[12,"for_display","","Indicates whether this frame is intended for display",67,null],[12,"pixel_type","","The pixel type of the frame as defined by Section 9.2 of…",67,null],[3,"Vp8Decoder","","VP8 Decoder",null,null],[11,"new","","Create a new decoder. The reader must present a raw vp8…",68,[[],["vp8decoder",3]]],[11,"decode_frame","","Decodes the current frame and returns a reference to it",68,[[],[["frame",3],["imageresult",6]]]],[11,"new","image","Creates a new `Frames` from an implementation specific…",69,[[["box",3],["iterator",8]]]],[11,"collect_frames","","Steps through the iterator from the current frame until…",69,[[],[["imageresult",6],["vec",3]]]],[11,"new","","Contructs a new frame without any delay.",70,[[["rgbaimage",6]],["frame",3]]],[11,"from_parts","","Contructs a new frame",70,[[["rgbaimage",6],["delay",3]],["frame",3]]],[11,"delay","","Delay of this frame",70,[[],["delay",3]]],[11,"buffer","","Returns the image buffer",70,[[],["rgbaimage",6]]],[11,"into_buffer","","Returns the image buffer",70,[[],["rgbaimage",6]]],[11,"left","","Returns the x offset",70,[[]]],[11,"top","","Returns the y offset",70,[[]]],[11,"from_numer_denom_ms","","Create a delay from a ratio of milliseconds.",71,[[]]],[11,"from_saturating_duration","","Convert from a duration, clamped between 0 and an…",71,[[["duration",3]]]],[11,"numer_denom_ms","","The numerator and denominator of the delay in milliseconds.",71,[[]]],[11,"from_raw","","Contructs a buffer from a generic container (for example a…",72,[[],[["option",4],["imagebuffer",3]]]],[11,"into_raw","","Returns the underlying raw buffer",72,[[]]],[11,"dimensions","","The width and height of this image.",72,[[]]],[11,"width","","The width of this image.",72,[[]]],[11,"height","","The height of this image.",72,[[]]],[11,"pixels","","Returns an iterator over the pixels of this image.",72,[[],["pixels",3]]],[11,"rows","","Returns an iterator over the rows of this image.",72,[[],["rows",3]]],[11,"enumerate_pixels","","Enumerates over the pixels of the image. The iterator…",72,[[],["enumeratepixels",3]]],[11,"enumerate_rows","","Enumerates over the rows of the image. The iterator yields…",72,[[],["enumeraterows",3]]],[11,"get_pixel","","Gets a reference to the pixel at location `(x, y)`",72,[[]]],[11,"sample_layout","","Get the format of the buffer when viewed as a matrix of…",72,[[],["samplelayout",3]]],[11,"into_flat_samples","","Return the raw sample buffer with its stride an dimension…",72,[[],["flatsamples",3]]],[11,"as_flat_samples","","Return a view on the raw sample buffer.",72,[[],["flatsamples",3]]],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.",72,[[],["pixelsmut",3]]],[11,"rows_mut","","Returns an iterator over the mutable rows of this image.",72,[[],["rowsmut",3]]],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image. The iterator…",72,[[],["enumeratepixelsmut",3]]],[11,"enumerate_rows_mut","","Enumerates over the rows of the image. The iterator yields…",72,[[],["enumeraterowsmut",3]]],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",72,[[]]],[11,"put_pixel","","Puts a pixel at location `(x, y)`",72,[[]]],[11,"save","","Saves the buffer to a file at the path specified.",72,[[],["imageresult",6]]],[11,"save_with_format","","Saves the buffer to a file at the specified path in the…",72,[[["imageformat",4]],["imageresult",6]]],[11,"new","","Creates a new image buffer based on a `Vec<P::Subpixel>`.",72,[[],[["imagebuffer",3],["vec",3]]]],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",72,[[],[["imagebuffer",3],["vec",3]]]],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of…",72,[[],[["imagebuffer",3],["vec",3]]]],[11,"from_vec","","Creates an image buffer out of an existing buffer. Returns…",72,[[["vec",3]],[["imagebuffer",3],["option",4]]]],[11,"into_vec","","Consumes the image buffer and returns the underlying data…",72,[[],["vec",3]]],[11,"expand_palette","","Expands a color palette by re-using the existing buffer.…",72,[[["option",4]],["rgbaimage",6]]],[11,"bytes_per_pixel","","Returns the number of bytes contained in a pixel of…",6,[[]]],[11,"bits_per_pixel","","Returns the number of bits contained in a pixel of…",6,[[]]],[11,"channel_count","","Returns the number of color channels that make up this pixel",6,[[]]],[11,"channel_count","","Get the number of channels for colors of this type.",7,[[]]],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",10,[[],["dynamicimage",4]]],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey pixels…",10,[[],["dynamicimage",4]]],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",10,[[],["dynamicimage",4]]],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",10,[[],["dynamicimage",4]]],[11,"new_bgra8","","Creates a dynamic image backed by a buffer of BGRA pixels.",10,[[],["dynamicimage",4]]],[11,"new_bgr8","","Creates a dynamic image backed by a buffer of BGR pixels.",10,[[],["dynamicimage",4]]],[11,"new_luma16","","Creates a dynamic image backed by a buffer of grey pixels.",10,[[],["dynamicimage",4]]],[11,"new_luma_a16","","Creates a dynamic image backed by a buffer of grey pixels…",10,[[],["dynamicimage",4]]],[11,"new_rgb16","","Creates a dynamic image backed by a buffer of RGB pixels.",10,[[],["dynamicimage",4]]],[11,"new_rgba16","","Creates a dynamic image backed by a buffer of RGBA pixels.",10,[[],["dynamicimage",4]]],[11,"from_decoder","","Decodes an encoded image into a dynamic image.",10,[[],["imageresult",6]]],[11,"to_rgb","","Returns a copy of this image as an RGB image.",10,[[],["rgbimage",6]]],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",10,[[],["rgbaimage",6]]],[11,"to_bgr","","Returns a copy of this image as an BGR image.",10,[[],[["vec",3],["bgr",3],["imagebuffer",3]]]],[11,"to_bgra","","Returns a copy of this image as an BGRA image.",10,[[],[["bgra",3],["vec",3],["imagebuffer",3]]]],[11,"to_luma","","Returns a copy of this image as a Luma image.",10,[[],["grayimage",6]]],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",10,[[],["grayalphaimage",6]]],[11,"into_rgb","","Consume the image and returns a RGB image.",10,[[],["rgbimage",6]]],[11,"into_rgba","","Consume the image and returns a RGBA image.",10,[[],["rgbaimage",6]]],[11,"into_bgr","","Consume the image and returns a BGR image.",10,[[],[["vec",3],["bgr",3],["imagebuffer",3]]]],[11,"into_bgra","","Consume the image and returns a BGRA image.",10,[[],[["bgra",3],["vec",3],["imagebuffer",3]]]],[11,"into_luma","","Consume the image and returns a Luma image.",10,[[],["grayimage",6]]],[11,"into_luma_alpha","","Consume the image and returns a LumaA image.",10,[[],["grayalphaimage",6]]],[11,"crop","","Return a cut out of this image delimited by the bounding…",10,[[],["dynamicimage",4]]],[11,"as_rgb8","","Return a reference to an 8bit RGB image",10,[[],[["rgbimage",6],["option",4]]]],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",10,[[],[["rgbimage",6],["option",4]]]],[11,"as_bgr8","","Return a reference to an 8bit BGR image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_bgr8","","Return a mutable reference to an 8bit BGR image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",10,[[],[["rgbaimage",6],["option",4]]]],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",10,[[],[["option",4],["rgbaimage",6]]]],[11,"as_bgra8","","Return a reference to an 8bit BGRA image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_bgra8","","Return a mutable reference to an 8bit RGBA image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",10,[[],[["grayimage",6],["option",4]]]],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",10,[[],[["grayimage",6],["option",4]]]],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an…",10,[[],[["grayalphaimage",6],["option",4]]]],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image with…",10,[[],[["option",4],["grayalphaimage",6]]]],[11,"as_rgb16","","Return a reference to an 16bit RGB image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_rgb16","","Return a mutable reference to an 16bit RGB image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_rgba16","","Return a reference to an 16bit RGBA image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_rgba16","","Return a mutable reference to an 16bit RGBA image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_luma16","","Return a reference to an 16bit Grayscale image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_luma16","","Return a mutable reference to an 16bit Grayscale image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_luma_alpha16","","Return a reference to an 16bit Grayscale image with an…",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_luma_alpha16","","Return a mutable reference to an 16bit Grayscale image…",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_flat_samples_u8","","Return a view on the raw sample buffer for 8 bit per…",10,[[],[["flatsamples",3],["option",4]]]],[11,"as_flat_samples_u16","","Return a view on the raw sample buffer for 16 bit per…",10,[[],[["flatsamples",3],["option",4]]]],[11,"to_bytes","","Return this image\'s pixels as a byte vector.",10,[[],["vec",3]]],[11,"color","","Return this image\'s color type.",10,[[],["colortype",4]]],[11,"grayscale","","Return a grayscale version of this image.",10,[[],["dynamicimage",4]]],[11,"invert","","Invert the colors of this image. This method operates…",10,[[]]],[11,"resize","","Resize this image using the specified filter algorithm.…",10,[[["filtertype",4]],["dynamicimage",4]]],[11,"resize_exact","","Resize this image using the specified filter algorithm.…",10,[[["filtertype",4]],["dynamicimage",4]]],[11,"thumbnail","","Scale this image down to fit within a specific size.…",10,[[],["dynamicimage",4]]],[11,"thumbnail_exact","","Scale this image down to a specific size. Returns a new…",10,[[],["dynamicimage",4]]],[11,"resize_to_fill","","Resize this image using the specified filter algorithm.…",10,[[["filtertype",4]],["dynamicimage",4]]],[11,"blur","","Performs a Gaussian blur on this image. `sigma` is a…",10,[[],["dynamicimage",4]]],[11,"unsharpen","","Performs an unsharpen mask on this image. `sigma` is the…",10,[[],["dynamicimage",4]]],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",10,[[],["dynamicimage",4]]],[11,"adjust_contrast","","Adjust the contrast of this image. `contrast` is the…",10,[[],["dynamicimage",4]]],[11,"brighten","","Brighten the pixels of this image. `value` is the amount…",10,[[],["dynamicimage",4]]],[11,"huerotate","","Hue rotate the supplied image. `value` is the degrees to…",10,[[],["dynamicimage",4]]],[11,"flipv","","Flip this image vertically",10,[[],["dynamicimage",4]]],[11,"fliph","","Flip this image horizontally",10,[[],["dynamicimage",4]]],[11,"rotate90","","Rotate this image 90 degrees clockwise.",10,[[],["dynamicimage",4]]],[11,"rotate180","","Rotate this image 180 degrees clockwise.",10,[[],["dynamicimage",4]]],[11,"rotate270","","Rotate this image 270 degrees clockwise.",10,[[],["dynamicimage",4]]],[11,"write_to","","Encode this image and write it to `w`",10,[[["imageoutputformat",4],["into",8]],["imageresult",6]]],[11,"save","","Saves the buffer to a file at the path specified.",10,[[],["imageresult",6]]],[11,"save_with_format","","Saves the buffer to a file at the specified path in the…",10,[[["imageformat",4]],["imageresult",6]]],[11,"from_path","","Return the image format specified by the path\'s file…",8,[[],["imageresult",6]]],[11,"current","","A measure of completed decoding.",73,[[]]],[11,"total","","A measure of all necessary decoding work.",73,[[]]],[11,"remaining","","Calculate a measure for remaining decoding work.",73,[[]]],[11,"new","","Construct a new subimage",74,[[],["subimage",3]]],[11,"change_bounds","","Change the coordinates of this subimage.",74,[[]]],[11,"to_image","","Convert this subimage to an ImageBuffer",74,[[],[["imagebuffer",3],["vec",3]]]],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",null,null],[6,"GrayImage","","Sendable grayscale image buffer",null,null],[6,"RgbImage","","Sendable Rgb image buffer",null,null],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",null,null],[8,"AnimationDecoder","","AnimationDecoder trait",null,null],[10,"into_frames","","Consume the decoder producing a series of frames.",75,[[],["frames",3]]],[8,"GenericImage","","A trait for manipulating images.",null,null],[16,"InnerImage","","Underlying image type. This is mainly used by SubImages in…",76,null],[10,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",76,[[]]],[10,"put_pixel","","Put a pixel at location (x, y)",76,[[]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",76,[[]]],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha…",76,[[]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",76,[[],["imageresult",6]]],[11,"copy_within","","Copies all of the pixels from one part of this image to…",76,[[["rect",3]]]],[10,"inner_mut","","Returns a mutable reference to the underlying image.",76,[[]]],[11,"sub_image","","Returns a mutable subimage that is a view into this image.…",76,[[],["subimage",3]]],[8,"GenericImageView","","Trait to inspect an image.",null,null],[16,"Pixel","","The type of pixel.",77,null],[16,"InnerImageView","","Underlying image type. This is mainly used by SubImages in…",77,null],[10,"dimensions","","The width and height of this image.",77,[[]]],[11,"width","","The width of this image.",77,[[]]],[11,"height","","The height of this image.",77,[[]]],[10,"bounds","","The bounding rectangle of this image.",77,[[]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside…",77,[[]]],[10,"get_pixel","","Returns the pixel located at (x, y)",77,[[]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",77,[[]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The…",77,[[],["pixels",3]]],[10,"inner","","Returns a reference to the underlying image.",77,[[]]],[11,"view","","Returns an subimage that is an immutable view into this…",77,[[],["subimage",3]]],[8,"ImageDecoder","","The trait that all decoders implement",null,null],[16,"Reader","","The type of reader produced by `into_reader`.",78,null],[10,"dimensions","","Returns a tuple containing the width and height of the image",78,[[]]],[10,"color_type","","Returns the color type of the image data produced by this…",78,[[],["colortype",4]]],[11,"original_color_type","","Retuns the color type of the image file before decoding",78,[[],["extendedcolortype",4]]],[10,"into_reader","","Returns a reader that can be used to obtain the bytes of…",78,[[],["imageresult",6]]],[11,"total_bytes","","Returns the total number of bytes in the decoded image.",78,[[]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be…",78,[[]]],[11,"read_image","","Returns all the bytes in the image.",78,[[],["imageresult",6]]],[11,"read_image_with_progress","","Same as `read_image` but periodically calls the provided…",78,[[["fn",8]],["imageresult",6]]],[8,"ImageDecoderExt","","ImageDecoderExt trait",null,null],[11,"read_rect","","Read a rectangular section of the image.",79,[[],["imageresult",6]]],[10,"read_rect_with_progress","","Read a rectangular section of the image, periodically…",79,[[["fn",8]],["imageresult",6]]],[8,"ImageEncoder","","The trait all encoders implement",null,null],[10,"write_image","","Writes all the bytes in an image to the encoder.",80,[[["colortype",4]],["imageresult",6]]],[8,"ConvertBuffer","","Provides color conversions for whole image buffers.",null,null],[10,"convert","","Converts `self` to a buffer of type T",81,[[]]],[8,"Pixel","","A generalized pixel.",null,null],[16,"Subpixel","","The underlying subpixel type.",82,null],[18,"CHANNEL_COUNT","","The number of channels of this pixel type.",82,null],[11,"channel_count","","Returns the number of channels of this pixel type.",82,[[]]],[10,"channels","","Returns the components as a slice.",82,[[]]],[10,"channels_mut","","Returns the components as a mutable slice",82,[[]]],[18,"COLOR_MODEL","","A string that can help to interpret the meaning each…",82,null],[11,"color_model","","Returns a string that can help to interpret the meaning…",82,[[]]],[18,"COLOR_TYPE","","ColorType for this pixel format",82,null],[11,"color_type","","Returns the ColorType for this pixel format",82,[[],["colortype",4]]],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the…",82,[[]]],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d. If…",82,[[]]],[10,"from_slice","","Returns a view into a slice.",82,[[]]],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",82,[[]]],[10,"to_rgb","","Convert this pixel to RGB",82,[[],["rgb",3]]],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",82,[[],["rgba",3]]],[10,"to_luma","","Convert this pixel to luma",82,[[],["luma",3]]],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",82,[[],["lumaa",3]]],[10,"to_bgr","","Convert this pixel to BGR",82,[[],["bgr",3]]],[10,"to_bgra","","Convert this pixel to BGR with an alpha channel",82,[[],["bgra",3]]],[10,"map","","Apply the function `f` to each channel of this pixel.",82,[[]]],[10,"apply","","Apply the function `f` to each channel of this pixel.",82,[[]]],[10,"map_with_alpha","","Apply the function `f` to each channel except the alpha…",82,[[]]],[10,"apply_with_alpha","","Apply the function `f` to each channel except the alpha…",82,[[]]],[11,"map_without_alpha","","Apply the function `f` to each channel except the alpha…",82,[[]]],[11,"apply_without_alpha","","Apply the function `f` to each channel except the alpha…",82,[[]]],[10,"map2","","Apply the function `f` to each channel of this pixel and…",82,[[]]],[10,"apply2","","Apply the function `f` to each channel of this pixel and…",82,[[]]],[10,"invert","","Invert this pixel",82,[[]]],[10,"blend","","Blend the color of a given pixel into ourself, taking into…",82,[[]]],[8,"Primitive","","Primitive trait from old stdlib",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"par_bridge","","",83,[[],["iterbridge",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"into_iter","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","image::error","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","image::math","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","image::math::nq","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","image::imageops","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","image::imageops::colorops","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","image::io","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","image::flat","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","image::bmp","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","image::dds","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","image::dxt","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","image::gif","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","image::hdr","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"into_iter","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into_iter","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"par_bridge","","",88,[[],["iterbridge",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","image::ico","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","image::jpeg","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","image::png","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","image::pnm","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","image::tga","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","image::tiff","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","image::webp","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","image::webp::vp8","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"index_of","image::imageops::colorops","",84,[[["luma",3]]]],[11,"map_color","","",84,[[["luma",3]]]],[11,"index_of","image::math::nq","",22,[[["rgba",3]]]],[11,"map_color","","",22,[[["rgba",3]]]],[11,"channels","image","",2,[[]]],[11,"channels_mut","","",2,[[]]],[11,"channels4","","",2,[[]]],[11,"from_channels","","",2,[[],["rgb",3]]],[11,"from_slice","","",2,[[],["rgb",3]]],[11,"from_slice_mut","","",2,[[],["rgb",3]]],[11,"to_rgb","","",2,[[],["rgb",3]]],[11,"to_bgr","","",2,[[],["bgr",3]]],[11,"to_rgba","","",2,[[],["rgba",3]]],[11,"to_bgra","","",2,[[],["bgra",3]]],[11,"to_luma","","",2,[[],["luma",3]]],[11,"to_luma_alpha","","",2,[[],["lumaa",3]]],[11,"map","","",2,[[],["rgb",3]]],[11,"apply","","",2,[[]]],[11,"map_with_alpha","","",2,[[],["rgb",3]]],[11,"apply_with_alpha","","",2,[[]]],[11,"map2","","",2,[[],["rgb",3]]],[11,"apply2","","",2,[[["rgb",3]]]],[11,"invert","","",2,[[]]],[11,"blend","","",2,[[["rgb",3]]]],[11,"channels","","",4,[[]]],[11,"channels_mut","","",4,[[]]],[11,"channels4","","",4,[[]]],[11,"from_channels","","",4,[[],["bgr",3]]],[11,"from_slice","","",4,[[],["bgr",3]]],[11,"from_slice_mut","","",4,[[],["bgr",3]]],[11,"to_rgb","","",4,[[],["rgb",3]]],[11,"to_bgr","","",4,[[],["bgr",3]]],[11,"to_rgba","","",4,[[],["rgba",3]]],[11,"to_bgra","","",4,[[],["bgra",3]]],[11,"to_luma","","",4,[[],["luma",3]]],[11,"to_luma_alpha","","",4,[[],["lumaa",3]]],[11,"map","","",4,[[],["bgr",3]]],[11,"apply","","",4,[[]]],[11,"map_with_alpha","","",4,[[],["bgr",3]]],[11,"apply_with_alpha","","",4,[[]]],[11,"map2","","",4,[[],["bgr",3]]],[11,"apply2","","",4,[[["bgr",3]]]],[11,"invert","","",4,[[]]],[11,"blend","","",4,[[["bgr",3]]]],[11,"channels","","",0,[[]]],[11,"channels_mut","","",0,[[]]],[11,"channels4","","",0,[[]]],[11,"from_channels","","",0,[[],["luma",3]]],[11,"from_slice","","",0,[[],["luma",3]]],[11,"from_slice_mut","","",0,[[],["luma",3]]],[11,"to_rgb","","",0,[[],["rgb",3]]],[11,"to_bgr","","",0,[[],["bgr",3]]],[11,"to_rgba","","",0,[[],["rgba",3]]],[11,"to_bgra","","",0,[[],["bgra",3]]],[11,"to_luma","","",0,[[],["luma",3]]],[11,"to_luma_alpha","","",0,[[],["lumaa",3]]],[11,"map","","",0,[[],["luma",3]]],[11,"apply","","",0,[[]]],[11,"map_with_alpha","","",0,[[],["luma",3]]],[11,"apply_with_alpha","","",0,[[]]],[11,"map2","","",0,[[],["luma",3]]],[11,"apply2","","",0,[[["luma",3]]]],[11,"invert","","",0,[[]]],[11,"blend","","",0,[[["luma",3]]]],[11,"channels","","",3,[[]]],[11,"channels_mut","","",3,[[]]],[11,"channels4","","",3,[[]]],[11,"from_channels","","",3,[[],["rgba",3]]],[11,"from_slice","","",3,[[],["rgba",3]]],[11,"from_slice_mut","","",3,[[],["rgba",3]]],[11,"to_rgb","","",3,[[],["rgb",3]]],[11,"to_bgr","","",3,[[],["bgr",3]]],[11,"to_rgba","","",3,[[],["rgba",3]]],[11,"to_bgra","","",3,[[],["bgra",3]]],[11,"to_luma","","",3,[[],["luma",3]]],[11,"to_luma_alpha","","",3,[[],["lumaa",3]]],[11,"map","","",3,[[],["rgba",3]]],[11,"apply","","",3,[[]]],[11,"map_with_alpha","","",3,[[],["rgba",3]]],[11,"apply_with_alpha","","",3,[[]]],[11,"map2","","",3,[[],["rgba",3]]],[11,"apply2","","",3,[[["rgba",3]]]],[11,"invert","","",3,[[]]],[11,"blend","","",3,[[["rgba",3]]]],[11,"channels","","",5,[[]]],[11,"channels_mut","","",5,[[]]],[11,"channels4","","",5,[[]]],[11,"from_channels","","",5,[[],["bgra",3]]],[11,"from_slice","","",5,[[],["bgra",3]]],[11,"from_slice_mut","","",5,[[],["bgra",3]]],[11,"to_rgb","","",5,[[],["rgb",3]]],[11,"to_bgr","","",5,[[],["bgr",3]]],[11,"to_rgba","","",5,[[],["rgba",3]]],[11,"to_bgra","","",5,[[],["bgra",3]]],[11,"to_luma","","",5,[[],["luma",3]]],[11,"to_luma_alpha","","",5,[[],["lumaa",3]]],[11,"map","","",5,[[],["bgra",3]]],[11,"apply","","",5,[[]]],[11,"map_with_alpha","","",5,[[],["bgra",3]]],[11,"apply_with_alpha","","",5,[[]]],[11,"map2","","",5,[[],["bgra",3]]],[11,"apply2","","",5,[[["bgra",3]]]],[11,"invert","","",5,[[]]],[11,"blend","","",5,[[["bgra",3]]]],[11,"channels","","",1,[[]]],[11,"channels_mut","","",1,[[]]],[11,"channels4","","",1,[[]]],[11,"from_channels","","",1,[[],["lumaa",3]]],[11,"from_slice","","",1,[[],["lumaa",3]]],[11,"from_slice_mut","","",1,[[],["lumaa",3]]],[11,"to_rgb","","",1,[[],["rgb",3]]],[11,"to_bgr","","",1,[[],["bgr",3]]],[11,"to_rgba","","",1,[[],["rgba",3]]],[11,"to_bgra","","",1,[[],["bgra",3]]],[11,"to_luma","","",1,[[],["luma",3]]],[11,"to_luma_alpha","","",1,[[],["lumaa",3]]],[11,"map","","",1,[[],["lumaa",3]]],[11,"apply","","",1,[[]]],[11,"map_with_alpha","","",1,[[],["lumaa",3]]],[11,"apply_with_alpha","","",1,[[]]],[11,"map2","","",1,[[],["lumaa",3]]],[11,"apply2","","",1,[[["lumaa",3]]]],[11,"invert","","",1,[[]]],[11,"blend","","",1,[[["lumaa",3]]]],[11,"convert","","",72,[[],[["imagebuffer",3],["vec",3]]]],[11,"dimensions","image::bmp","",32,[[]]],[11,"color_type","","",32,[[],["colortype",4]]],[11,"into_reader","","",32,[[],["imageresult",6]]],[11,"read_image","","",32,[[],["imageresult",6]]],[11,"dimensions","image::dds","",34,[[]]],[11,"color_type","","",34,[[],["colortype",4]]],[11,"scanline_bytes","","",34,[[]]],[11,"into_reader","","",34,[[],["imageresult",6]]],[11,"read_image","","",34,[[],["imageresult",6]]],[11,"dimensions","image::dxt","",36,[[]]],[11,"color_type","","",36,[[],["colortype",4]]],[11,"scanline_bytes","","",36,[[]]],[11,"into_reader","","",36,[[],["imageresult",6]]],[11,"read_image","","",36,[[],["imageresult",6]]],[11,"dimensions","image::gif","",38,[[]]],[11,"color_type","","",38,[[],["colortype",4]]],[11,"into_reader","","",38,[[],["imageresult",6]]],[11,"read_image","","",38,[[],["imageresult",6]]],[11,"dimensions","image::hdr","",42,[[]]],[11,"color_type","","",42,[[],["colortype",4]]],[11,"into_reader","","",42,[[],["imageresult",6]]],[11,"read_image","","",42,[[],["imageresult",6]]],[11,"dimensions","image::ico","",45,[[]]],[11,"color_type","","",45,[[],["colortype",4]]],[11,"into_reader","","",45,[[],["imageresult",6]]],[11,"read_image","","",45,[[],["imageresult",6]]],[11,"dimensions","image::jpeg","",49,[[]]],[11,"color_type","","",49,[[],["colortype",4]]],[11,"into_reader","","",49,[[],["imageresult",6]]],[11,"read_image","","",49,[[],["imageresult",6]]],[11,"dimensions","image::png","",51,[[]]],[11,"color_type","","",51,[[],["colortype",4]]],[11,"into_reader","","",51,[[],["imageresult",6]]],[11,"read_image","","",51,[[],["imageresult",6]]],[11,"scanline_bytes","","",51,[[]]],[11,"dimensions","image::pnm","",60,[[]]],[11,"color_type","","",60,[[],["colortype",4]]],[11,"original_color_type","","",60,[[],["extendedcolortype",4]]],[11,"into_reader","","",60,[[],["imageresult",6]]],[11,"read_image","","",60,[[],["imageresult",6]]],[11,"dimensions","image::tga","",63,[[]]],[11,"color_type","","",63,[[],["colortype",4]]],[11,"scanline_bytes","","",63,[[]]],[11,"into_reader","","",63,[[],["imageresult",6]]],[11,"read_image","","",63,[[],["imageresult",6]]],[11,"dimensions","image::tiff","",64,[[]]],[11,"color_type","","",64,[[],["colortype",4]]],[11,"into_reader","","",64,[[],["imageresult",6]]],[11,"read_image","","",64,[[],["imageresult",6]]],[11,"dimensions","image::webp","",66,[[]]],[11,"color_type","","",66,[[],["colortype",4]]],[11,"into_reader","","",66,[[],["imageresult",6]]],[11,"read_image","","",66,[[],["imageresult",6]]],[11,"read_rect_with_progress","image::bmp","",32,[[["fn",8]],["imageresult",6]]],[11,"read_rect_with_progress","image::dxt","",36,[[["fn",8]],["imageresult",6]]],[11,"read_rect_with_progress","image::hdr","",42,[[["fn",8]],["imageresult",6]]],[11,"into_frames","image::gif","",38,[[],["frames",3]]],[11,"write_image","image::bmp","",33,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::ico","",46,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::jpeg","",50,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::png","",52,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::pnm","",61,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::tiff","",65,[[["colortype",4]],["imageresult",6]]],[11,"dimensions","image::flat","",30,[[]]],[11,"bounds","","",30,[[]]],[11,"in_bounds","","",30,[[]]],[11,"get_pixel","","",30,[[]]],[11,"inner","","",30,[[]]],[11,"dimensions","","",31,[[]]],[11,"bounds","","",31,[[]]],[11,"in_bounds","","",31,[[]]],[11,"get_pixel","","",31,[[]]],[11,"inner","","",31,[[]]],[11,"dimensions","image","",72,[[]]],[11,"bounds","","",72,[[]]],[11,"get_pixel","","",72,[[]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y), ignoring bounds…",72,[[]]],[11,"inner","","",72,[[]]],[11,"dimensions","","",10,[[]]],[11,"bounds","","",10,[[]]],[11,"get_pixel","","",10,[[],["rgba",3]]],[11,"inner","","",10,[[]]],[11,"dimensions","","",74,[[]]],[11,"bounds","","",74,[[]]],[11,"get_pixel","","",74,[[]]],[11,"view","","",74,[[],["subimage",3]]],[11,"inner","","",74,[[]]],[11,"get_pixel_mut","image::flat","",31,[[]]],[11,"put_pixel","","",31,[[]]],[11,"blend_pixel","","",31,[[]]],[11,"inner_mut","","",31,[[]]],[11,"get_pixel_mut","image","",72,[[]]],[11,"put_pixel","","",72,[[]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y), ignoring bounds checking.",72,[[]]],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha…",72,[[]]],[11,"copy_within","","",72,[[["rect",3]]]],[11,"inner_mut","","",72,[[]]],[11,"put_pixel","","",10,[[["rgba",3]]]],[11,"blend_pixel","","DEPRECATED: Use iterator `pixels_mut` to blend the pixels…",10,[[["rgba",3]]]],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",10,[[],["rgba",3]]],[11,"inner_mut","","",10,[[]]],[11,"get_pixel_mut","","",74,[[]]],[11,"put_pixel","","",74,[[]]],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel…",74,[[]]],[11,"sub_image","","",74,[[],["subimage",3]]],[11,"inner_mut","","",74,[[]]],[11,"from","image::error","",11,[[["error",3]],["imageerror",4]]],[11,"from","","",15,[[["imageformat",4]]]],[11,"from","","",15,[[["path",3]]]],[11,"from","","",16,[[["imageformathint",4]]]],[11,"from","","",11,[[["error",4]],["imageerror",4]]],[11,"from","image::pnm","",62,[[["bitmapheader",3]]]],[11,"from","","",62,[[["graymapheader",3]]]],[11,"from","","",62,[[["pixmapheader",3]]]],[11,"from","","",62,[[["arbitraryheader",3]]]],[11,"from","image","",7,[[["colortype",4]]]],[11,"from","","",2,[[]]],[11,"from","","",4,[[]]],[11,"from","","",0,[[]]],[11,"from","","",3,[[]]],[11,"from","","",5,[[]]],[11,"from","","",1,[[]]],[11,"from","","",9,[[["imageformat",4]]]],[11,"into_iter","image::hdr","",43,[[]]],[11,"next","","",88,[[],["option",4]]],[11,"size_hint","","",88,[[]]],[11,"next","image","",69,[[],[["imageresult",6],["option",4]]]],[11,"next","","",83,[[],["option",4]]],[11,"clone","image::error","",12,[[],["unsupportederrorkind",4]]],[11,"clone","","",13,[[],["parametererrorkind",4]]],[11,"clone","","",14,[[],["limiterrorkind",4]]],[11,"clone","","",15,[[],["imageformathint",4]]],[11,"clone","image::math","",21,[[],["rect",3]]],[11,"clone","image::imageops::colorops","",84,[[],["bilevel",3]]],[11,"clone","image::imageops","",23,[[],["filtertype",4]]],[11,"clone","image::flat","",26,[[],["flatsamples",3]]],[11,"clone","","",27,[[],["samplelayout",3]]],[11,"clone","","",30,[[],["view",3]]],[11,"clone","","",31,[[],["viewmut",3]]],[11,"clone","","",28,[[],["error",4]]],[11,"clone","","",29,[[],["normalform",4]]],[11,"clone","image::dxt","",35,[[],["dxtvariant",4]]],[11,"clone","image::hdr","",40,[[],["rgbe8pixel",3]]],[11,"clone","","",41,[[],["hdrmetadata",3]]],[11,"clone","image::jpeg","",48,[[],["pixeldensityunit",4]]],[11,"clone","","",47,[[],["pixeldensity",3]]],[11,"clone","image::pnm","",59,[[],["sampleencoding",4]]],[11,"clone","","",58,[[],["pnmsubtype",4]]],[11,"clone","","",54,[[],["bitmapheader",3]]],[11,"clone","","",55,[[],["graymapheader",3]]],[11,"clone","","",56,[[],["pixmapheader",3]]],[11,"clone","","",53,[[],["arbitraryheader",3]]],[11,"clone","","",57,[[],["arbitrarytupltype",4]]],[11,"clone","image::webp::vp8","",67,[[],["frame",3]]],[11,"clone","image","",70,[[],["frame",3]]],[11,"clone","","",71,[[],["delay",3]]],[11,"clone","","",72,[[],["imagebuffer",3]]],[11,"clone","","",6,[[],["colortype",4]]],[11,"clone","","",7,[[],["extendedcolortype",4]]],[11,"clone","","",2,[[],["rgb",3]]],[11,"clone","","",4,[[],["bgr",3]]],[11,"clone","","",0,[[],["luma",3]]],[11,"clone","","",3,[[],["rgba",3]]],[11,"clone","","",5,[[],["bgra",3]]],[11,"clone","","",1,[[],["lumaa",3]]],[11,"clone","","",10,[[],["dynamicimage",4]]],[11,"clone","","",8,[[],["imageformat",4]]],[11,"clone","","",9,[[],["imageoutputformat",4]]],[11,"clone","","",73,[[],["progress",3]]],[11,"default","image::hdr","",40,[[],["rgbe8pixel",3]]],[11,"default","image::jpeg","Returns a pixel density with a pixel aspect ratio of 1",47,[[]]],[11,"default","image::webp::vp8","",67,[[],["frame",3]]],[11,"eq","image::error","",12,[[["unsupportederrorkind",4]]]],[11,"ne","","",12,[[["unsupportederrorkind",4]]]],[11,"eq","","",13,[[["parametererrorkind",4]]]],[11,"ne","","",13,[[["parametererrorkind",4]]]],[11,"eq","","",14,[[["limiterrorkind",4]]]],[11,"ne","","",14,[[["limiterrorkind",4]]]],[11,"eq","","",15,[[["imageformathint",4]]]],[11,"ne","","",15,[[["imageformathint",4]]]],[11,"eq","image::math","",21,[[["rect",3]]]],[11,"ne","","",21,[[["rect",3]]]],[11,"eq","image::flat","",27,[[["samplelayout",3]]]],[11,"ne","","",27,[[["samplelayout",3]]]],[11,"eq","","",28,[[["error",4]]]],[11,"ne","","",28,[[["error",4]]]],[11,"eq","","",29,[[["normalform",4]]]],[11,"eq","image::dxt","",35,[[["dxtvariant",4]]]],[11,"eq","image::hdr","",40,[[["rgbe8pixel",3]]]],[11,"ne","","",40,[[["rgbe8pixel",3]]]],[11,"eq","image::jpeg","",48,[[["pixeldensityunit",4]]]],[11,"eq","","",47,[[["pixeldensity",3]]]],[11,"ne","","",47,[[["pixeldensity",3]]]],[11,"eq","image::pnm","",59,[[["sampleencoding",4]]]],[11,"eq","","",58,[[["pnmsubtype",4]]]],[11,"ne","","",58,[[["pnmsubtype",4]]]],[11,"eq","image","",71,[[["delay",3]]]],[11,"ne","","",71,[[["delay",3]]]],[11,"eq","","",6,[[["colortype",4]]]],[11,"ne","","",6,[[["colortype",4]]]],[11,"eq","","",7,[[["extendedcolortype",4]]]],[11,"ne","","",7,[[["extendedcolortype",4]]]],[11,"eq","","",2,[[["rgb",3]]]],[11,"ne","","",2,[[["rgb",3]]]],[11,"eq","","",4,[[["bgr",3]]]],[11,"ne","","",4,[[["bgr",3]]]],[11,"eq","","",0,[[["luma",3]]]],[11,"ne","","",0,[[["luma",3]]]],[11,"eq","","",3,[[["rgba",3]]]],[11,"ne","","",3,[[["rgba",3]]]],[11,"eq","","",5,[[["bgra",3]]]],[11,"ne","","",5,[[["bgra",3]]]],[11,"eq","","",1,[[["lumaa",3]]]],[11,"ne","","",1,[[["lumaa",3]]]],[11,"eq","","",8,[[["imageformat",4]]]],[11,"ne","","",8,[[["imageformat",4]]]],[11,"eq","","",9,[[["imageoutputformat",4]]]],[11,"ne","","",9,[[["imageoutputformat",4]]]],[11,"eq","","",73,[[["progress",3]]]],[11,"ne","","",73,[[["progress",3]]]],[11,"partial_cmp","image::flat","Compares the logical preconditions.",29,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","image","",71,[[["delay",3]],[["ordering",4],["option",4]]]],[11,"lt","","",71,[[["delay",3]]]],[11,"le","","",71,[[["delay",3]]]],[11,"gt","","",71,[[["delay",3]]]],[11,"ge","","",71,[[["delay",3]]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"fmt","image::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","image::math","",21,[[["formatter",3]],["result",6]]],[11,"fmt","image::imageops","",23,[[["formatter",3]],["result",6]]],[11,"fmt","image::flat","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","image::dxt","",35,[[["formatter",3]],["result",6]]],[11,"fmt","image::hdr","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","image::jpeg","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","image::pnm","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","image::webp::vp8","",67,[[["formatter",3]],["result",6]]],[11,"fmt","image","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","image::error","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",16,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"index","image::flat","Return a reference to a single sample at specified…",26,[[]]],[11,"index","image","",72,[[]]],[11,"index","","",2,[[]]],[11,"index","","",4,[[]]],[11,"index","","",0,[[]]],[11,"index","","",3,[[]]],[11,"index","","",5,[[]]],[11,"index","","",1,[[]]],[11,"index_mut","image::flat","Return a mutable reference to a single sample at specified…",26,[[]]],[11,"index_mut","image","",72,[[]]],[11,"index_mut","","",2,[[]]],[11,"index_mut","","",4,[[]]],[11,"index_mut","","",0,[[]]],[11,"index_mut","","",3,[[]]],[11,"index_mut","","",5,[[]]],[11,"index_mut","","",1,[[]]],[11,"hash","image::error","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","image::math","",21,[[]]],[11,"hash","image::flat","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","image","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",8,[[]]],[11,"source","image::error","",11,[[],[["option",4],["error",8]]]],[11,"source","","",19,[[],[["option",4],["error",8]]]],[11,"source","","",18,[[],[["option",4],["error",8]]]],[11,"source","","",17,[[],[["option",4],["error",8]]]],[11,"read","image::dxt","",85,[[],["result",6]]],[11,"read","image::gif","",86,[[],["result",6]]],[11,"read_to_end","","",86,[[["vec",3]],["result",6]]],[11,"read","image::hdr","",87,[[],["result",6]]],[11,"read_to_end","","",87,[[["vec",3]],["result",6]]],[11,"read","image::png","",89,[[],["result",6]]],[11,"read_to_end","","",89,[[["vec",3]],["result",6]]],[11,"read","image::tiff","",90,[[],["result",6]]],[11,"read_to_end","","",90,[[["vec",3]],["result",6]]],[18,"CHANNEL_COUNT","image","The number of channels of this pixel type.",82,null],[11,"channel_count","","Returns the number of channels of this pixel type.",82,[[]]],[18,"COLOR_MODEL","","A string that can help to interpret the meaning each…",82,null],[11,"color_model","","Returns a string that can help to interpret the meaning…",82,[[]]],[18,"COLOR_TYPE","","ColorType for this pixel format",82,null],[11,"color_type","","Returns the ColorType for this pixel format",82,[[],["colortype",4]]],[11,"map_without_alpha","","Apply the function `f` to each channel except the alpha…",82,[[]]],[11,"apply_without_alpha","","Apply the function `f` to each channel except the alpha…",82,[[]]],[11,"expand_palette","","Expands a color palette by re-using the existing buffer.…",91,[[["option",4]],["rgbaimage",6]]],[11,"original_color_type","","Retuns the color type of the image file before decoding",78,[[],["extendedcolortype",4]]],[11,"total_bytes","","Returns the total number of bytes in the decoded image.",78,[[]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be…",78,[[]]],[11,"read_image","","Returns all the bytes in the image.",78,[[],["imageresult",6]]],[11,"read_image_with_progress","","Same as `read_image` but periodically calls the provided…",78,[[["fn",8]],["imageresult",6]]],[11,"read_rect","","Read a rectangular section of the image.",79,[[],["imageresult",6]]],[11,"width","","The width of this image.",77,[[]]],[11,"height","","The height of this image.",77,[[]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside…",77,[[]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",77,[[]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The…",77,[[],["pixels",3]]],[11,"view","","Returns an subimage that is an immutable view into this…",77,[[],["subimage",3]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",76,[[]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",76,[[],["imageresult",6]]],[11,"copy_within","","Copies all of the pixels from one part of this image to…",76,[[["rect",3]]]],[11,"sub_image","","Returns a mutable subimage that is a view into this image.…",76,[[],["subimage",3]]]],"p":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[4,"ColorType"],[4,"ExtendedColorType"],[4,"ImageFormat"],[4,"ImageOutputFormat"],[4,"DynamicImage"],[4,"ImageError"],[4,"UnsupportedErrorKind"],[4,"ParameterErrorKind"],[4,"LimitErrorKind"],[4,"ImageFormatHint"],[3,"UnsupportedError"],[3,"DecodingError"],[3,"EncodingError"],[3,"ParameterError"],[3,"LimitError"],[3,"Rect"],[3,"NeuQuant"],[4,"FilterType"],[8,"ColorMap"],[3,"Reader"],[3,"FlatSamples"],[3,"SampleLayout"],[4,"Error"],[4,"NormalForm"],[3,"View"],[3,"ViewMut"],[3,"BmpDecoder"],[3,"BMPEncoder"],[3,"DdsDecoder"],[4,"DXTVariant"],[3,"DxtDecoder"],[3,"DXTEncoder"],[3,"GifDecoder"],[3,"Encoder"],[3,"RGBE8Pixel"],[3,"HDRMetadata"],[3,"HDRAdapter"],[3,"HdrDecoder"],[3,"HDREncoder"],[3,"IcoDecoder"],[3,"ICOEncoder"],[3,"PixelDensity"],[4,"PixelDensityUnit"],[3,"JpegDecoder"],[3,"JPEGEncoder"],[3,"PngDecoder"],[3,"PNGEncoder"],[3,"ArbitraryHeader"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"ArbitraryTuplType"],[4,"PNMSubtype"],[4,"SampleEncoding"],[3,"PnmDecoder"],[3,"PNMEncoder"],[3,"PNMHeader"],[3,"TgaDecoder"],[3,"TiffDecoder"],[3,"TiffEncoder"],[3,"WebPDecoder"],[3,"Frame"],[3,"Vp8Decoder"],[3,"Frames"],[3,"Frame"],[3,"Delay"],[3,"ImageBuffer"],[3,"Progress"],[3,"SubImage"],[8,"AnimationDecoder"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[8,"ImageDecoderExt"],[8,"ImageEncoder"],[8,"ConvertBuffer"],[8,"Pixel"],[3,"Pixels"],[3,"BiLevel"],[3,"DXTReader"],[3,"GifReader"],[3,"HdrReader"],[3,"HDRImageDecoderIterator"],[3,"PNGReader"],[3,"TiffReader"],[6,"GrayImage"]]},\
"imageproc":{"doc":"An image processing library based on the image crate.","i":[[0,"utils","imageproc","Utils for testing and debugging.",null,null],[3,"Diff","imageproc::utils","A difference between two images",null,null],[12,"x","","x-coordinate of diff.",0,null],[12,"y","","y-coordinate of diff.",0,null],[12,"expected","","Pixel value in expected image.",0,null],[12,"actual","","Pixel value in actual image.",0,null],[5,"pixel_diff_summary","","Human readable description of some of the pixels that…",null,[[],[["string",3],["option",4]]]],[5,"significant_pixel_diff_summary","","Human readable description of some of the pixels that…",null,[[],[["string",3],["option",4]]]],[5,"pixel_diffs","","Lists pixels that differ between left and right images.",null,[[],[["diff",3],["vec",3]]]],[5,"describe_pixel_diffs","","Gives a summary description of a list of pixel diffs for…",null,[[],["string",3]]],[5,"load_image_or_panic","","Loads image at given path, panicking on failure.",null,[[["path",3],["debug",8],["asref",8]],["dynamicimage",4]]],[5,"gray_bench_image","","Gray image to use in benchmarks. This is neither noise nor…",null,[[],["grayimage",6]]],[5,"rgb_bench_image","","RGB image to use in benchmarks. See comment on…",null,[[],["rgbimage",6]]],[0,"contrast","imageproc","Functions for manipulating the contrast of images.",null,null],[5,"adaptive_threshold","imageproc::contrast","Applies an adaptive threshold to an image.",null,[[["grayimage",6]],["grayimage",6]]],[5,"otsu_level","","Returns the Otsu threshold level of an 8bpp image.",null,[[["grayimage",6]]]],[5,"threshold","","Returns a binarized image from an input 8bpp grayscale…",null,[[["grayimage",6]],["grayimage",6]]],[5,"threshold_mut","","Mutates given image to form a binarized version produced…",null,[[["grayimage",6]]]],[5,"equalize_histogram_mut","","Equalises the histogram of an 8bpp grayscale image in…",null,[[["grayimage",6]]]],[5,"equalize_histogram","","Equalises the histogram of an 8bpp grayscale image. See…",null,[[["grayimage",6]],["grayimage",6]]],[5,"match_histogram_mut","","Adjusts contrast of an 8bpp grayscale image in place so…",null,[[["grayimage",6],["grayimage",6]]]],[5,"match_histogram","","Adjusts contrast of an 8bpp grayscale image so that its…",null,[[["grayimage",6]],["grayimage",6]]],[5,"stretch_contrast","","Linearly stretches the contrast in an image, sending…",null,[[["grayimage",6]],["grayimage",6]]],[5,"stretch_contrast_mut","","Linearly stretches the contrast in an image in place,…",null,[[["grayimage",6]]]],[0,"corners","imageproc","Functions for detecting corners, also known as interest…",null,null],[3,"Corner","imageproc::corners","A location and score for a detected corner. The scores…",null,null],[12,"x","","x-coordinate of the corner.",1,null],[12,"y","","y-coordinate of the corner.",1,null],[12,"score","","Score of the detected corner.",1,null],[4,"Fast","","Variants of the FAST corner detector. These classify a…",null,null],[13,"Nine","","Corners require a section of length as least nine.",2,null],[13,"Twelve","","Corners require a section of length as least twelve.",2,null],[5,"corners_fast12","","Finds corners using FAST-12 features. See comment on `Fast`.",null,[[["grayimage",6]],[["vec",3],["corner",3]]]],[5,"corners_fast9","","Finds corners using FAST-9 features. See comment on Fast…",null,[[["grayimage",6]],[["vec",3],["corner",3]]]],[5,"fast_corner_score","","The score of a corner detected using the FAST detector is…",null,[[["grayimage",6],["fast",4]]]],[11,"new","","A corner at location (x, y) with score `score`.",1,[[],["corner",3]]],[0,"definitions","imageproc","Trait definitions and type aliases.",null,null],[6,"Image","imageproc::definitions","An `ImageBuffer` containing Pixels of type P with storage…",null,null],[8,"HasBlack","","Pixels which have a named Black value.",null,null],[10,"black","","Returns a black pixel of this type.",3,[[]]],[8,"HasWhite","","Pixels which have a named White value.",null,null],[10,"white","","Returns a white pixel of this type.",4,[[]]],[8,"Position","","Something with a 2d position.",null,null],[10,"x","","x-coordinate.",5,[[]]],[10,"y","","y-coordinate.",5,[[]]],[8,"Score","","Something with a score.",null,null],[10,"score","","Score of this item.",6,[[]]],[8,"Clamp","","A type to which we can clamp a value of type T.…",null,null],[10,"clamp","","Clamp `x` to a valid value for this type.",7,[[]]],[0,"distance_transform","imageproc","Functions for computing distance transforms - the distance…",null,null],[4,"Norm","imageproc::distance_transform","How to measure distance between coordinates. See the…",null,null],[13,"L1","","Defines d((x1, y1), (x2, y2)) to be abs(x1 - x2) + abs(y1…",8,null],[13,"LInf","","Defines d((x1, y1), (x2, y2)) to be max(abs(x1 - x2),…",8,null],[5,"distance_transform","","Returns an image showing the distance of each pixel from a…",null,[[["grayimage",6],["norm",4]],["grayimage",6]]],[5,"distance_transform_mut","","Updates an image in place so that each pixel contains its…",null,[[["norm",4],["grayimage",6]]]],[5,"euclidean_squared_distance_transform","","Computes the square of the `L2` (Euclidean) distance…",null,[[["image",6]],[["luma",3],["image",6]]]],[0,"drawing","imageproc","Helpers for drawing basic shapes on images.",null,null],[3,"Blend","imageproc::drawing","A canvas that blends pixels when drawing.",null,null],[12,"0","","",9,null],[3,"BresenhamLineIter","","Iterates over the coordinates in a line segment using…",null,null],[3,"BresenhamLinePixelIter","","Iterates over the image pixels in a line segment using…",null,null],[3,"BresenhamLinePixelIterMut","","Iterates over the image pixels in a line segment using…",null,null],[3,"Point","","A 2D point.",null,null],[5,"draw_cubic_bezier_curve","","Draws as much of a cubic bezier curve as lies within image…",null,[[],["image",6]]],[5,"draw_cubic_bezier_curve_mut","","Draws as much of a cubic bezier curve as lies within image…",null,[[]]],[5,"draw_filled_circle","","Draw as much of a circle and its contents as lies inside…",null,[[],["image",6]]],[5,"draw_filled_circle_mut","","Draw as much of a circle, including its contents, as lies…",null,[[]]],[5,"draw_filled_ellipse","","Draw as much of an ellipse, including its contents, as…",null,[[],["image",6]]],[5,"draw_filled_ellipse_mut","","Draw as much of an ellipse, including its contents, as…",null,[[]]],[5,"draw_hollow_circle","","Draw as much of a circle as lies inside the image bounds.",null,[[],["image",6]]],[5,"draw_hollow_circle_mut","","Draw as much of a circle as lies inside the image bounds.",null,[[]]],[5,"draw_hollow_ellipse","","Draw as much of an ellipse as lies inside the image…",null,[[],["image",6]]],[5,"draw_hollow_ellipse_mut","","Draw as much of an ellipse as lies inside the image…",null,[[]]],[5,"draw_cross","","Draws a colored cross on an image. Handles coordinates…",null,[[],["image",6]]],[5,"draw_cross_mut","","Draws a colored cross on an image in place. Handles…",null,[[]]],[5,"draw_antialiased_line_segment","","Draws as much of the line segment between start and end as…",null,[[],["image",6]]],[5,"draw_antialiased_line_segment_mut","","Draws as much of the line segment between start and end as…",null,[[]]],[5,"draw_line_segment","","Draws as much of the line segment between start and end as…",null,[[],["image",6]]],[5,"draw_line_segment_mut","","Draws as much of the line segment between start and end as…",null,[[]]],[5,"draw_convex_polygon","","Draws as much of a filled convex polygon as lies within…",null,[[],["image",6]]],[5,"draw_convex_polygon_mut","","Draws as much of a filled convex polygon as lies within…",null,[[]]],[5,"draw_filled_rect","","Draw as much of a rectangle, including its boundary, as…",null,[[["rect",3]],["image",6]]],[5,"draw_filled_rect_mut","","Draw as much of a rectangle, including its boundary, as…",null,[[["rect",3]]]],[5,"draw_hollow_rect","","Draws as much of the boundary of a rectangle as lies…",null,[[["rect",3]],["image",6]]],[5,"draw_hollow_rect_mut","","Draws as much of the boundary of a rectangle as lies…",null,[[["rect",3]]]],[5,"draw_text","","Draws colored text on an image in place. `scale` is…",null,[[["font",3],["scale",3]],["image",6]]],[5,"draw_text_mut","","Draws colored text on an image in place. `scale` is…",null,[[["font",3],["scale",3]]]],[11,"new","","Creates a `BresenhamLineIter` which will iterate over the…",10,[[],["bresenhamlineiter",3]]],[11,"new","","Creates a `BresenhamLinePixelIter` which will iterate over…",11,[[["image",6]],["bresenhamlinepixeliter",3]]],[11,"new","","Creates a `BresenhamLinePixelIterMut` which will iterate…",12,[[["image",6]],["bresenhamlinepixelitermut",3]]],[11,"new","","Construct a point at (x, y).",13,[[],["point",3]]],[8,"Canvas","","A surface for drawing on - many drawing functions in this…",null,null],[16,"Pixel","","The type of `Pixel` that can be drawn on this canvas.",14,null],[10,"dimensions","","The width and height of this canvas.",14,[[]]],[11,"width","","The width of this canvas.",14,[[]]],[11,"height","","The height of this canvas.",14,[[]]],[10,"get_pixel","","Returns the pixel located at (x, y).",14,[[]]],[10,"draw_pixel","","Draw a pixel at the given coordinates. `x` and `y` should…",14,[[]]],[0,"edges","imageproc","Functions for detecting edges in images.",null,null],[5,"canny","imageproc::edges","Runs the canny edge detection algorithm.",null,[[["grayimage",6]],["grayimage",6]]],[0,"filter","imageproc","Functions for filtering images.",null,null],[3,"Kernel","imageproc::filter","A 2D kernel, used to filter images via convolution.",null,null],[5,"median_filter","","Applies a median filter of given dimensions to an image.…",null,[[["image",6]],["image",6]]],[5,"sharpen3x3","","Sharpens a grayscale image by applying a 3x3 approximation…",null,[[["grayimage",6]],["grayimage",6]]],[5,"sharpen_gaussian","","Sharpens a grayscale image using a Gaussian as a low-pass…",null,[[["grayimage",6]],["grayimage",6]]],[5,"box_filter","","Convolves an 8bpp grayscale image with a kernel of width…",null,[[["grayimage",6]],[["luma",3],["image",6]]]],[5,"gaussian_blur_f32","","Blurs an image using a Gaussian of standard deviation…",null,[[["image",6]],["image",6]]],[5,"separable_filter","","Returns 2d correlation of view with the outer product of…",null,[[["image",6]],["image",6]]],[5,"separable_filter_equal","","Returns 2d correlation of an image with the outer product…",null,[[["image",6]],["image",6]]],[5,"filter3x3","","Returns 2d correlation of an image with a 3x3 row-major…",null,[[["image",6]],[["channelmap",6],["image",6]]]],[5,"horizontal_filter","","Returns horizontal correlations between an image and a 1d…",null,[[["image",6]],["image",6]]],[5,"vertical_filter","","Returns horizontal correlations between an image and a 1d…",null,[[["image",6]],["image",6]]],[11,"new","","Construct a kernel from a slice and its dimensions. The…",15,[[],["kernel",3]]],[11,"filter","","Returns 2d correlation of an image. Intermediate…",15,[[["image",6]],["image",6]]],[0,"geometric_transformations","imageproc","Geometric transformations of images. This includes…",null,null],[3,"Projection","imageproc::geometric_transformations","A 2d projective transformation, stored as a row major 3x3…",null,null],[4,"Interpolation","","How to handle pixels whose pre-image lies between input…",null,null],[13,"Nearest","","Choose the nearest pixel to the pre-image of the output…",16,null],[13,"Bilinear","","Bilinearly interpolate between the four pixels closest to…",16,null],[13,"Bicubic","","Bicubicly interpolate between the four pixels closest to…",16,null],[5,"rotate_about_center","","Rotates an image clockwise about its center. The output…",null,[[["image",6],["interpolation",4]],["image",6]]],[5,"rotate","","Rotates an image clockwise about the provided center by…",null,[[["image",6],["interpolation",4]],["image",6]]],[5,"translate","","Translates the input image by t. Note that image…",null,[[["image",6]],["image",6]]],[5,"warp","","Applies a projective transformation to an image.",null,[[["image",6],["projection",3],["interpolation",4]],["image",6]]],[5,"warp_into","","Applies a projective transformation to an image, writing…",null,[[["image",6],["projection",3],["interpolation",4],["image",6]]]],[5,"warp_with","","Warps an image using the provided function to define the…",null,[[["image",6],["interpolation",4]],["image",6]]],[5,"warp_into_with","","Warps an image using the provided function to define the…",null,[[["image",6],["interpolation",4],["image",6]]]],[11,"from_matrix","","Creates a 2d projective transform from a row-major 3x3…",17,[[],[["projection",3],["option",4]]]],[11,"translate","","A translation by (tx, ty).",17,[[],["projection",3]]],[11,"rotate","","A clockwise rotation around the top-left corner of the…",17,[[],["projection",3]]],[11,"scale","","An anisotropic scaling (sx, sy).",17,[[],["projection",3]]],[11,"invert","","Inverts the transformation.",17,[[],["projection",3]]],[11,"from_control_points","","Calculates a projection from a set of four control point…",17,[[],[["projection",3],["option",4]]]],[0,"gradients","imageproc","Functions for computing gradients of image intensities.",null,null],[5,"horizontal_sobel","imageproc::gradients","Convolves an image with the `HORIZONTAL_SOBEL` kernel to…",null,[[["grayimage",6]],[["image",6],["luma",3]]]],[5,"vertical_sobel","","Convolves an image with the `VERTICAL_SOBEL` kernel to…",null,[[["grayimage",6]],[["image",6],["luma",3]]]],[5,"horizontal_scharr","","Convolves an image with the `HORIZONTAL_SCHARR` kernel to…",null,[[["grayimage",6]],[["image",6],["luma",3]]]],[5,"vertical_scharr","","Convolves an image with the `VERTICAL_SCHARR` kernel to…",null,[[["grayimage",6]],[["image",6],["luma",3]]]],[5,"horizontal_prewitt","","Convolves an image with the `HORIZONTAL_PREWITT` kernel to…",null,[[["grayimage",6]],[["image",6],["luma",3]]]],[5,"vertical_prewitt","","Convolves an image with the `VERTICAL_PREWITT` kernel to…",null,[[["grayimage",6]],[["image",6],["luma",3]]]],[5,"sobel_gradients","","Returns the magnitudes of gradients in an image using…",null,[[["grayimage",6]],[["luma",3],["image",6]]]],[5,"sobel_gradient_map","","Computes per-channel gradients using Sobel filters and…",null,[[["image",6]],["image",6]]],[5,"prewitt_gradients","","Returns the magnitudes of gradients in an image using…",null,[[["grayimage",6]],[["luma",3],["image",6]]]],[7,"VERTICAL_SOBEL","","Sobel filter for detecting vertical gradients.",null,null],[7,"HORIZONTAL_SOBEL","","Sobel filter for detecting horizontal gradients.",null,null],[7,"VERTICAL_SCHARR","","Scharr filter for detecting vertical gradients.",null,null],[7,"HORIZONTAL_SCHARR","","Scharr filter for detecting horizontal gradients.",null,null],[7,"VERTICAL_PREWITT","","Prewitt filter for detecting vertical gradients.",null,null],[7,"HORIZONTAL_PREWITT","","Prewitt filter for detecting horizontal gradients.",null,null],[0,"haar","imageproc","Functions for creating and evaluating Haar-like features.",null,null],[3,"HaarFeature","imageproc::haar","A Haar-like feature.",null,null],[4,"HaarFeatureType","","The type of a Haar-like feature determines the number of…",null,null],[13,"TwoRegionHorizontal","","Two horizontally-adjacent regions of equal width.",18,null],[13,"ThreeRegionHorizontal","","Three horizontally-adjacent regions of equal width.",18,null],[13,"TwoRegionVertical","","Two vertically-adjacent regions of equal height.",18,null],[13,"ThreeRegionVertical","","Three vertically-adjacent regions of equal height.",18,null],[13,"FourRegion","","Four regions arranged in a two-by-two grid. The two…",18,null],[5,"enumerate_haar_features","","Returns a vector of all valid Haar-like features for an…",null,[[],[["vec",3],["haarfeature",3]]]],[5,"number_of_haar_features","","Returns the number of distinct Haar-like features for an…",null,[[]]],[5,"draw_haar_feature","","Draws the given Haar-like feature on an image, drawing…",null,[[["haarfeature",3]],["image",6]]],[5,"draw_haar_feature_mut","","Draws the given Haar-like feature on an image in place,…",null,[[["haarfeature",3]]]],[11,"evaluate","","Evaluates the Haar-like feature on an integral image.",19,[[["image",6]]]],[0,"hog","imageproc","HoG features and helpers for visualizing them.",null,null],[3,"HogOptions","imageproc::hog","Parameters for HoG descriptors.",null,null],[12,"orientations","","Number of gradient orientation bins.",20,null],[12,"signed","","Whether gradients in opposite directions are treated as…",20,null],[12,"cell_side","","Width and height of cell in pixels.",20,null],[12,"block_side","","Width and height of block in cells.",20,null],[12,"block_stride","","Offset of the start of one block from the next in cells.",20,null],[3,"HogSpec","","HoG options plus values calculated from these options and…",null,null],[3,"Array3d","","A 3d array that owns its data.",null,null],[3,"View3d","","A view into a 3d array.",null,null],[5,"hog","","Computes the HoG descriptor of an image, or None if the…",null,[[["grayimage",6],["hogoptions",3]],[["string",3],["vec",3],["result",4]]]],[5,"cell_histograms","","Computes orientation histograms for each cell of an image.…",null,[[["grayimage",6],["hogspec",3]],["array3d",3]]],[5,"render_hist_grid","","Visualises an array of orientation histograms. The…",null,[[["view3d",3]],[["luma",3],["image",6]]]],[11,"new","","User-provided options, prior to validation.",20,[[],["hogoptions",3]]],[11,"from_options","","Returns an error message if image dimensions aren\'t…",21,[[["hogoptions",3]],[["string",3],["hogspec",3],["result",4]]]],[11,"descriptor_length","","The total size in floats of the HoG descriptor with these…",21,[[]]],[11,"view_mut","","Provides a 3d view of the data.",22,[[],["view3d",3]]],[0,"hough","imageproc","Line detection via the Hough transform.",null,null],[3,"PolarLine","imageproc::hough","A detected line, in polar coordinates.",null,null],[12,"r","","Signed distance of the line from the origin (top-left of…",23,null],[12,"angle_in_degrees","","Clockwise angle in degrees between the x-axis and the…",23,null],[3,"LineDetectionOptions","","Options for Hough line detection.",null,null],[12,"vote_threshold","","Number of votes required to be detected as a line.",24,null],[12,"suppression_radius","","Non-maxima suppression is applied to accumulator buckets…",24,null],[5,"detect_lines","","Detects lines in a binary input image using the Hough…",null,[[["grayimage",6],["linedetectionoptions",3]],[["polarline",3],["vec",3]]]],[5,"draw_polar_lines","","Draws each element of `lines` on `image` in the provided…",null,[[["image",6]],["image",6]]],[5,"draw_polar_lines_mut","","Draws each element of `lines` on `image` in the provided…",null,[[["image",6]]]],[0,"integral_image","imageproc","Functions for computing integral images and running sums…",null,null],[5,"integral_image","imageproc::integral_image","Computes the 2d running sum of an image. Channels are…",null,[[["image",6]],[["channelmap",6],["image",6]]]],[5,"integral_squared_image","","Computes the 2d running sum of the squares of the…",null,[[["image",6]],[["channelmap",6],["image",6]]]],[5,"sum_image_pixels","","Sums the pixels in positions [left, right] * [top, bottom]…",null,[[["image",6]]]],[5,"variance","","Computes the variance of [left, right] * [top, bottom] in…",null,[[["image",6]]]],[5,"row_running_sum","","Computes the running sum of one row of image, padded at…",null,[[["grayimage",6]]]],[5,"column_running_sum","","Computes the running sum of one column of image, padded at…",null,[[["grayimage",6]]]],[8,"ArrayData","","Hack to get around lack of const generics. See comment on…",null,null],[16,"DataType","","The type of the data for this array. e.g. `[T; 1]` for…",25,null],[10,"data","","Get the data from this pixel as a constant length array.",25,[[]]],[10,"add","","Add the elements of two data arrays elementwise.",25,[[]]],[10,"sub","","Subtract the elements of two data arrays elementwise.",25,[[]]],[0,"local_binary_patterns","imageproc","Functions for computing local binary patterns.",null,null],[5,"local_binary_pattern","imageproc::local_binary_patterns","Computes the basic local binary pattern of a pixel, or…",null,[[],["option",4]]],[5,"min_shift","","Returns the least value of all rotations of a byte.",null,[[]]],[5,"count_transitions","","Number of bit transitions in a byte, counting the last and…",null,[[]]],[7,"UNIFORM_REPRESENTATIVE_2","","Maps uniform bytes (i.e. those with at most two bit…",null,null],[7,"MIN_SHIFT","","Lookup table for the least circular shift of a byte.",null,null],[0,"map","imageproc","Functions for mapping over pixels, colors or subpixels of…",null,null],[5,"map_subpixels","imageproc::map","Applies `f` to each subpixel of the input image.",null,[[],[["channelmap",6],["image",6]]]],[5,"map_colors","","Applies `f` to the color of each pixel in the input image.",null,[[],["image",6]]],[5,"map_colors2","","Applies `f` to the colors of the pixels in the input images.",null,[[],["image",6]]],[5,"map_pixels","","Applies `f` to each pixel in the input image.",null,[[],["image",6]]],[5,"red_channel","","Creates a grayscale image by extracting the red channel of…",null,[[],[["image",6],["luma",3]]]],[5,"as_red_channel","","Creates an RGB image by embedding a grayscale image in its…",null,[[],[["image",6],["rgb",3]]]],[5,"green_channel","","Creates a grayscale image by extracting the green channel…",null,[[],[["image",6],["luma",3]]]],[5,"as_green_channel","","Creates an RGB image by embedding a grayscale image in its…",null,[[],[["image",6],["rgb",3]]]],[5,"blue_channel","","Creates a grayscale image by extracting the blue channel…",null,[[],[["image",6],["luma",3]]]],[5,"as_blue_channel","","Creates an RGB image by embedding a grayscale image in its…",null,[[],[["image",6],["rgb",3]]]],[6,"ChannelMap","","Alias to make uses of `WithChannel` less syntactically…",null,null],[8,"WithChannel","","The type obtained by replacing the channel type of a given…",null,null],[16,"Pixel","","The new pixel type.",26,null],[0,"math","imageproc","Assorted mathematical helper functions.",null,null],[5,"l1_norm","imageproc::math","L1 norm of a vector.",null,[[]]],[5,"l2_norm","","L2 norm of a vector.",null,[[]]],[5,"cast","","Helper for a conversion that we know can\'t fail.",null,[[]]],[0,"morphology","imageproc","Functions for computing morphological operators.",null,null],[5,"dilate","imageproc::morphology","Sets all pixels within distance `k` of a foreground pixel…",null,[[["grayimage",6],["norm",4]],["grayimage",6]]],[5,"dilate_mut","","Sets all pixels within distance `k` of a foreground pixel…",null,[[["norm",4],["grayimage",6]]]],[5,"erode","","Sets all pixels within distance `k` of a background pixel…",null,[[["grayimage",6],["norm",4]],["grayimage",6]]],[5,"erode_mut","","Sets all pixels within distance `k` of a background pixel…",null,[[["norm",4],["grayimage",6]]]],[5,"open","","Erosion followed by dilation.",null,[[["grayimage",6],["norm",4]],["grayimage",6]]],[5,"open_mut","","Erosion followed by dilation.",null,[[["norm",4],["grayimage",6]]]],[5,"close","","Dilation followed by erosion.",null,[[["grayimage",6],["norm",4]],["grayimage",6]]],[5,"close_mut","","Dilation followed by erosion.",null,[[["norm",4],["grayimage",6]]]],[0,"noise","imageproc","Functions for adding synthetic noise to images.",null,null],[5,"gaussian_noise","imageproc::noise","Adds independent additive Gaussian noise to all channels…",null,[[["image",6]],["image",6]]],[5,"gaussian_noise_mut","","Adds independent additive Gaussian noise to all channels…",null,[[["image",6]]]],[5,"salt_and_pepper_noise","","Converts pixels to black or white at the given `rate`…",null,[[["image",6]],["image",6]]],[5,"salt_and_pepper_noise_mut","","Converts pixels to black or white in place at the given…",null,[[["image",6]]]],[0,"pixelops","imageproc","Pixel manipulations.",null,null],[5,"weighted_sum","imageproc::pixelops","Adds pixels with the given weights. Results are clamped to…",null,[[["pixel",8]],["pixel",8]]],[5,"interpolate","","Equivalent to `weighted_sum(left, right, left_weight, 1 -…",null,[[["pixel",8]],["pixel",8]]],[0,"rect","imageproc","Basic manipulation of rectangles.",null,null],[3,"Rect","imageproc::rect","A rectangular region of non-zero width and height.",null,null],[3,"RectPosition","","Position of the top left of a rectangle. Only used when…",null,null],[8,"Region","","A geometrical representation of a set of 2D points with…",null,null],[10,"contains","","Whether this region contains the given point.",27,[[]]],[11,"at","","Reduces possibility of confusing coordinates and…",28,[[],["rectposition",3]]],[11,"top","","Smallest y-coordinate reached by rect.",28,[[]]],[11,"left","","Smallest x-coordinate reached by rect.",28,[[]]],[11,"bottom","","Greatest y-coordinate reached by rect.",28,[[]]],[11,"right","","Greatest x-coordinate reached by rect.",28,[[]]],[11,"width","","Width of rect.",28,[[]]],[11,"height","","Height of rect.",28,[[]]],[11,"intersect","","Returns the intersection of self and other, or none if…",28,[[["rect",3]],[["option",4],["rect",3]]]],[11,"of_size","","Construct a rectangle from a position and size. Width and…",29,[[],["rect",3]]],[0,"region_labelling","imageproc","Functions for finding and labelling connected components…",null,null],[4,"Connectivity","imageproc::region_labelling","Determines which neighbors of a pixel we consider to be…",null,null],[13,"Four","","A pixel is connected to its N, S, E and W neighbors.",30,null],[13,"Eight","","A pixel is connected to all of its neighbors.",30,null],[5,"connected_components","","Returns an image of the same size as the input, where each…",null,[[["connectivity",4]],[["image",6],["luma",3]]]],[0,"seam_carving","imageproc","An implementation of seam carving. Currently in a pretty…",null,null],[3,"VerticalSeam","imageproc::seam_carving","An image seam connecting the bottom of an image to its top…",null,null],[5,"shrink_width","","Reduces the width of an image using seam carving.",null,[[["image",6]],["image",6]]],[5,"find_vertical_seam","","Computes an 8-connected path from the bottom of the image…",null,[[["image",6]],["verticalseam",3]]],[5,"remove_vertical_seam","","Returns the result of removing `seam` from `image`.",null,[[["image",6],["verticalseam",3]],["image",6]]],[5,"draw_vertical_seams","","Draws a series of `seams` on `image` in red. Assumes that…",null,[[["grayimage",6]],[["image",6],["rgb",3]]]],[0,"stats","imageproc","Statistical properties of images.",null,null],[3,"ChannelHistogram","imageproc::stats","A set of per-channel histograms from an image with 8 bits…",null,null],[12,"channels","","Per-channel histograms.",31,null],[3,"CumulativeChannelHistogram","","A set of per-channel cumulative histograms from an image…",null,null],[12,"channels","","Per-channel cumulative histograms.",32,null],[5,"histogram","","Returns a vector of per-channel histograms.",null,[[["image",6]],["channelhistogram",3]]],[5,"cumulative_histogram","","Returns per-channel cumulative histograms.",null,[[["image",6]],["cumulativechannelhistogram",3]]],[5,"percentile","","Returns the `p`th percentile of the pixel intensities in…",null,[[["grayimage",6]]]],[5,"root_mean_squared_error","","Returns the square root of the mean of the squares of…",null,[[]]],[5,"peak_signal_to_noise_ratio","","Returns the peak signal to noise ratio for a clean image…",null,[[]]],[0,"suppress","imageproc","Functions for suppressing non-maximal values.",null,null],[5,"suppress_non_maximum","imageproc::suppress","Returned image has zeroes for all inputs pixels which do…",null,[[],[["vec",3],["imagebuffer",3],["luma",3]]]],[5,"local_maxima","","Returns all items which have the highest score in the (2 *…",null,[[],["vec",3]]],[0,"template_matching","imageproc","Functions for performing template matching.",null,null],[3,"Extremes","imageproc::template_matching","The largest and smallest values in an image, together with…",null,null],[12,"max_value","","The largest value in an image.",33,null],[12,"min_value","","The smallest value in an image.",33,null],[12,"max_value_location","","The coordinates of the largest value in an image.",33,null],[12,"min_value_location","","The coordinates of the smallest value in an image.",33,null],[4,"MatchTemplateMethod","","Method used to compute the matching score between a…",null,null],[13,"SumOfSquaredErrors","","Sum of the squares of the difference between image and…",34,null],[13,"SumOfSquaredErrorsNormalized","","Divides the sum computed using `SumOfSquaredErrors` by a…",34,null],[13,"CrossCorrelation","","Cross Correlation",34,null],[13,"CrossCorrelationNormalized","","Divides the sum computed using `CrossCorrelation` by a…",34,null],[5,"match_template","","Slides a `template` over an `image` and scores the match…",null,[[["grayimage",6],["matchtemplatemethod",4]],[["image",6],["luma",3]]]],[5,"find_extremes","","Finds the largest and smallest values in an image and…",null,[[["image",6]],["extremes",3]]],[0,"union_find","imageproc","An implementation of disjoint set forests for union find.",null,null],[3,"DisjointSetForest","imageproc::union_find","Data structure for efficient union find.",null,null],[11,"new","","Constructs forest of singletons with count elements.",35,[[],["disjointsetforest",3]]],[11,"num_trees","","Returns the number of trees in the forest.",35,[[]]],[11,"root","","Returns index of the root of the tree containing i. Needs…",35,[[]]],[11,"find","","Returns true if i and j are in the same tree. Need mutable…",35,[[]]],[11,"union","","Unions the trees containing i and j.",35,[[]]],[11,"trees","","Returns the elements of each tree.",35,[[],[["vec",3],["vec",3]]]],[14,"gray_image","imageproc","Helper for defining greyscale images.",null,null],[14,"rgb_image","","Helper for defining RGB images.",null,null],[14,"rgba_image","","Helper for defining RGBA images.",null,null],[14,"assert_pixels_eq","","Panics if any pixels differ between the two input images.",null,null],[14,"assert_pixels_eq_within","","Panics if any pixels differ between the two images by more…",null,null],[14,"assert_dimensions_match","","Panics if image dimensions do not match.",null,null],[11,"from","imageproc::utils","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"approx_from","","",0,[[],["result",4]]],[11,"approx_into","","",0,[[],["result",4]]],[11,"value_from","","",0,[[],["result",4]]],[11,"value_into","","",0,[[],["result",4]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"vzip","","",0,[[]]],[11,"from","imageproc::corners","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"approx_from","","",1,[[],["result",4]]],[11,"approx_into","","",1,[[],["result",4]]],[11,"value_from","","",1,[[],["result",4]]],[11,"value_into","","",1,[[],["result",4]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"approx_from","","",2,[[],["result",4]]],[11,"approx_into","","",2,[[],["result",4]]],[11,"value_from","","",2,[[],["result",4]]],[11,"value_into","","",2,[[],["result",4]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"vzip","","",2,[[]]],[11,"from","imageproc::distance_transform","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"approx_from","","",8,[[],["result",4]]],[11,"approx_into","","",8,[[],["result",4]]],[11,"value_from","","",8,[[],["result",4]]],[11,"value_into","","",8,[[],["result",4]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"vzip","","",8,[[]]],[11,"from","imageproc::drawing","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"approx_from","","",9,[[],["result",4]]],[11,"approx_into","","",9,[[],["result",4]]],[11,"value_from","","",9,[[],["result",4]]],[11,"value_into","","",9,[[],["result",4]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"par_bridge","","",10,[[],["iterbridge",3]]],[11,"approx_from","","",10,[[],["result",4]]],[11,"approx_into","","",10,[[],["result",4]]],[11,"value_from","","",10,[[],["result",4]]],[11,"value_into","","",10,[[],["result",4]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"par_bridge","","",11,[[],["iterbridge",3]]],[11,"approx_from","","",11,[[],["result",4]]],[11,"approx_into","","",11,[[],["result",4]]],[11,"value_from","","",11,[[],["result",4]]],[11,"value_into","","",11,[[],["result",4]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"par_bridge","","",12,[[],["iterbridge",3]]],[11,"approx_from","","",12,[[],["result",4]]],[11,"approx_into","","",12,[[],["result",4]]],[11,"value_from","","",12,[[],["result",4]]],[11,"value_into","","",12,[[],["result",4]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"approx_from","","",13,[[],["result",4]]],[11,"approx_into","","",13,[[],["result",4]]],[11,"value_from","","",13,[[],["result",4]]],[11,"value_into","","",13,[[],["result",4]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"vzip","","",13,[[]]],[11,"from","imageproc::filter","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"approx_from","","",15,[[],["result",4]]],[11,"approx_into","","",15,[[],["result",4]]],[11,"value_from","","",15,[[],["result",4]]],[11,"value_into","","",15,[[],["result",4]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"vzip","","",15,[[]]],[11,"from","imageproc::geometric_transformations","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"approx_from","","",17,[[],["result",4]]],[11,"approx_into","","",17,[[],["result",4]]],[11,"value_from","","",17,[[],["result",4]]],[11,"value_into","","",17,[[],["result",4]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"vzip","","",17,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"approx_from","","",16,[[],["result",4]]],[11,"approx_into","","",16,[[],["result",4]]],[11,"value_from","","",16,[[],["result",4]]],[11,"value_into","","",16,[[],["result",4]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"vzip","","",16,[[]]],[11,"from","imageproc::haar","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"approx_from","","",19,[[],["result",4]]],[11,"approx_into","","",19,[[],["result",4]]],[11,"value_from","","",19,[[],["result",4]]],[11,"value_into","","",19,[[],["result",4]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"vzip","","",19,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"approx_from","","",18,[[],["result",4]]],[11,"approx_into","","",18,[[],["result",4]]],[11,"value_from","","",18,[[],["result",4]]],[11,"value_into","","",18,[[],["result",4]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"vzip","","",18,[[]]],[11,"from","imageproc::hog","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"approx_from","","",20,[[],["result",4]]],[11,"approx_into","","",20,[[],["result",4]]],[11,"value_from","","",20,[[],["result",4]]],[11,"value_into","","",20,[[],["result",4]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"approx_from","","",21,[[],["result",4]]],[11,"approx_into","","",21,[[],["result",4]]],[11,"value_from","","",21,[[],["result",4]]],[11,"value_into","","",21,[[],["result",4]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"approx_from","","",22,[[],["result",4]]],[11,"approx_into","","",22,[[],["result",4]]],[11,"value_from","","",22,[[],["result",4]]],[11,"value_into","","",22,[[],["result",4]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"vzip","","",22,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"approx_from","","",36,[[],["result",4]]],[11,"approx_into","","",36,[[],["result",4]]],[11,"value_from","","",36,[[],["result",4]]],[11,"value_into","","",36,[[],["result",4]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"vzip","","",36,[[]]],[11,"from","imageproc::hough","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"approx_from","","",23,[[],["result",4]]],[11,"approx_into","","",23,[[],["result",4]]],[11,"value_from","","",23,[[],["result",4]]],[11,"value_into","","",23,[[],["result",4]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"approx_from","","",24,[[],["result",4]]],[11,"approx_into","","",24,[[],["result",4]]],[11,"value_from","","",24,[[],["result",4]]],[11,"value_into","","",24,[[],["result",4]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"vzip","","",24,[[]]],[11,"from","imageproc::rect","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"approx_from","","",28,[[],["result",4]]],[11,"approx_into","","",28,[[],["result",4]]],[11,"value_from","","",28,[[],["result",4]]],[11,"value_into","","",28,[[],["result",4]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"approx_from","","",29,[[],["result",4]]],[11,"approx_into","","",29,[[],["result",4]]],[11,"value_from","","",29,[[],["result",4]]],[11,"value_into","","",29,[[],["result",4]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"vzip","","",29,[[]]],[11,"from","imageproc::region_labelling","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"approx_from","","",30,[[],["result",4]]],[11,"approx_into","","",30,[[],["result",4]]],[11,"value_from","","",30,[[],["result",4]]],[11,"value_into","","",30,[[],["result",4]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"vzip","","",30,[[]]],[11,"from","imageproc::seam_carving","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"approx_from","","",37,[[],["result",4]]],[11,"approx_into","","",37,[[],["result",4]]],[11,"value_from","","",37,[[],["result",4]]],[11,"value_into","","",37,[[],["result",4]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"vzip","","",37,[[]]],[11,"from","imageproc::stats","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"approx_from","","",31,[[],["result",4]]],[11,"approx_into","","",31,[[],["result",4]]],[11,"value_from","","",31,[[],["result",4]]],[11,"value_into","","",31,[[],["result",4]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"approx_from","","",32,[[],["result",4]]],[11,"approx_into","","",32,[[],["result",4]]],[11,"value_from","","",32,[[],["result",4]]],[11,"value_into","","",32,[[],["result",4]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"vzip","","",32,[[]]],[11,"from","imageproc::template_matching","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"approx_from","","",33,[[],["result",4]]],[11,"approx_into","","",33,[[],["result",4]]],[11,"value_from","","",33,[[],["result",4]]],[11,"value_into","","",33,[[],["result",4]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"approx_from","","",34,[[],["result",4]]],[11,"approx_into","","",34,[[],["result",4]]],[11,"value_from","","",34,[[],["result",4]]],[11,"value_into","","",34,[[],["result",4]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"vzip","","",34,[[]]],[11,"from","imageproc::union_find","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"approx_from","","",35,[[],["result",4]]],[11,"approx_into","","",35,[[],["result",4]]],[11,"value_from","","",35,[[],["result",4]]],[11,"value_into","","",35,[[],["result",4]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"vzip","","",35,[[]]],[11,"x","imageproc::corners","x-coordinate of the corner.",1,[[]]],[11,"y","","y-coordinate of the corner.",1,[[]]],[11,"score","","",1,[[]]],[11,"dimensions","imageproc::drawing","",9,[[]]],[11,"get_pixel","","",9,[[]]],[11,"draw_pixel","","",9,[[]]],[11,"contains","imageproc::rect","",28,[[]]],[11,"contains","","",28,[[]]],[11,"next","imageproc::drawing","",10,[[],["option",4]]],[11,"next","","",11,[[],["option",4]]],[11,"next","","",12,[[],["option",4]]],[11,"clone","imageproc::corners","",1,[[],["corner",3]]],[11,"clone","imageproc::distance_transform","",8,[[],["norm",4]]],[11,"clone","imageproc::drawing","",13,[[],["point",3]]],[11,"clone","imageproc::geometric_transformations","",17,[[],["projection",3]]],[11,"clone","","",16,[[],["interpolation",4]]],[11,"clone","imageproc::haar","",19,[[],["haarfeature",3]]],[11,"clone","","",18,[[],["haarfeaturetype",4]]],[11,"clone","imageproc::hog","",20,[[],["hogoptions",3]]],[11,"clone","","",21,[[],["hogspec",3]]],[11,"clone","imageproc::hough","",23,[[],["polarline",3]]],[11,"clone","","",24,[[],["linedetectionoptions",3]]],[11,"clone","imageproc::rect","",28,[[],["rect",3]]],[11,"clone","","",29,[[],["rectposition",3]]],[11,"clone","imageproc::region_labelling","",30,[[],["connectivity",4]]],[11,"clone","imageproc::template_matching","",34,[[],["matchtemplatemethod",4]]],[11,"clone","","",33,[[],["extremes",3]]],[11,"eq","imageproc::corners","",1,[[["corner",3]]]],[11,"ne","","",1,[[["corner",3]]]],[11,"eq","imageproc::distance_transform","",8,[[["norm",4]]]],[11,"eq","imageproc::drawing","",13,[[["point",3]]]],[11,"ne","","",13,[[["point",3]]]],[11,"eq","imageproc::geometric_transformations","",16,[[["interpolation",4]]]],[11,"eq","imageproc::haar","",19,[[["haarfeature",3]]]],[11,"ne","","",19,[[["haarfeature",3]]]],[11,"eq","","",18,[[["haarfeaturetype",4]]]],[11,"eq","imageproc::hog","",20,[[["hogoptions",3]]]],[11,"ne","","",20,[[["hogoptions",3]]]],[11,"eq","","",21,[[["hogspec",3]]]],[11,"ne","","",21,[[["hogspec",3]]]],[11,"eq","imageproc::hough","",23,[[["polarline",3]]]],[11,"ne","","",23,[[["polarline",3]]]],[11,"eq","","",24,[[["linedetectionoptions",3]]]],[11,"ne","","",24,[[["linedetectionoptions",3]]]],[11,"eq","imageproc::rect","",28,[[["rect",3]]]],[11,"ne","","",28,[[["rect",3]]]],[11,"eq","","",29,[[["rectposition",3]]]],[11,"ne","","",29,[[["rectposition",3]]]],[11,"eq","imageproc::region_labelling","",30,[[["connectivity",4]]]],[11,"eq","imageproc::template_matching","",34,[[["matchtemplatemethod",4]]]],[11,"eq","","",33,[[["extremes",3]]]],[11,"ne","","",33,[[["extremes",3]]]],[11,"fmt","imageproc::corners","",1,[[["formatter",3]],["result",6]]],[11,"fmt","imageproc::distance_transform","",8,[[["formatter",3]],["result",6]]],[11,"fmt","imageproc::drawing","",13,[[["formatter",3]],["result",6]]],[11,"fmt","imageproc::geometric_transformations","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","imageproc::haar","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","imageproc::hog","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","imageproc::hough","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","imageproc::rect","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","imageproc::region_labelling","",30,[[["formatter",3]],["result",6]]],[11,"fmt","imageproc::template_matching","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"mul","imageproc::geometric_transformations","",17,[[["projection",3]],["projection",3]]],[11,"mul","","",17,[[]]],[11,"hash","imageproc::haar","",18,[[]]],[11,"width","imageproc::drawing","The width of this canvas.",14,[[]]],[11,"height","","The height of this canvas.",14,[[]]]],"p":[[3,"Diff"],[3,"Corner"],[4,"Fast"],[8,"HasBlack"],[8,"HasWhite"],[8,"Position"],[8,"Score"],[8,"Clamp"],[4,"Norm"],[3,"Blend"],[3,"BresenhamLineIter"],[3,"BresenhamLinePixelIter"],[3,"BresenhamLinePixelIterMut"],[3,"Point"],[8,"Canvas"],[3,"Kernel"],[4,"Interpolation"],[3,"Projection"],[4,"HaarFeatureType"],[3,"HaarFeature"],[3,"HogOptions"],[3,"HogSpec"],[3,"Array3d"],[3,"PolarLine"],[3,"LineDetectionOptions"],[8,"ArrayData"],[8,"WithChannel"],[8,"Region"],[3,"Rect"],[3,"RectPosition"],[4,"Connectivity"],[3,"ChannelHistogram"],[3,"CumulativeChannelHistogram"],[3,"Extremes"],[4,"MatchTemplateMethod"],[3,"DisjointSetForest"],[3,"View3d"],[3,"VerticalSeam"]]},\
"inflate":{"doc":"A DEFLATE decoder written in rust.","i":[[3,"InflateWriter","inflate","A DEFLATE decoder.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder/decompressor.",null,null],[3,"DeflateDecoderBuf","","A DEFLATE decoder/decompressor.",null,null],[3,"InflateStream","","",null,null],[5,"inflate_bytes","","Decompress the given slice of DEFLATE compressed data.",null,[[],[["string",3],["vec",3],["result",4]]]],[5,"inflate_bytes_zlib","","Decompress the given slice of DEFLATE compressed (with…",null,[[],[["string",3],["vec",3],["result",4]]]],[5,"inflate_bytes_zlib_no_checksum","","Decompress the given slice of DEFLATE compressed (with…",null,[[],[["string",3],["vec",3],["result",4]]]],[11,"new","","",0,[[],["inflatewriter",3]]],[11,"from_zlib","","",0,[[],["inflatewriter",3]]],[11,"finish","","",0,[[],["result",6]]],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw…",1,[[],["deflatedecoderbuf",3]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib…",1,[[],["deflatedecoderbuf",3]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib…",1,[[],["deflatedecoderbuf",3]]],[11,"reset","","Resets the decompressor, and replaces the current inner…",1,[[]]],[11,"reset_data","","Resets the decoder, but continue to read from the same…",1,[[]]],[11,"get_ref","","Returns a reference to the underlying `BufRead` instance.",1,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying `BufRead`…",1,[[]]],[11,"into_inner","","Drops the decoder and return the inner `BufRead` instance.",1,[[]]],[11,"total_in","","Returns the total bytes read from the underlying `BufRead`…",1,[[]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",1,[[]]],[11,"current_checksum","","Returns the calculated checksum value of the currently…",1,[[]]],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw…",2,[[],["deflatedecoder",3]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib…",2,[[],["deflatedecoder",3]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib…",2,[[],["deflatedecoder",3]]],[11,"reset","","Resets the decompressor, and replaces the current inner…",2,[[]]],[11,"get_ref","","Returns a reference to the underlying reader.",2,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying reader.",2,[[]]],[11,"into_inner","","Returns the total number of bytes output from this decoder.",2,[[]]],[11,"reset_data","","Resets the decoder, but continue to read from the same…",2,[[]]],[11,"total_in","","Returns the total bytes read from the underlying reader.",2,[[]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",2,[[]]],[11,"current_checksum","","Returns the calculated checksum value of the currently…",2,[[]]],[11,"new","","Create a new stream for decoding raw deflate encoded data.",3,[[],["inflatestream",3]]],[11,"from_zlib","","Create a new stream for decoding deflate encoded data with…",3,[[],["inflatestream",3]]],[11,"from_zlib_no_checksum","","Create a new stream for decoding deflate encoded data with…",3,[[],["inflatestream",3]]],[11,"reset","","",3,[[]]],[11,"reset_to_zlib","","",3,[[]]],[11,"update","","Try to uncompress/decode the data in `data`.",3,[[],[["result",4],["string",3]]]],[11,"current_checksum","","Returns the calculated checksum value of the currently…",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"read","","",1,[[],["result",6]]],[11,"read","","",2,[[],["result",6]]],[11,"write","","",0,[[],["result",6]]],[11,"flush","","",0,[[],["result",6]]]],"p":[[3,"InflateWriter"],[3,"DeflateDecoderBuf"],[3,"DeflateDecoder"],[3,"InflateStream"]]},\
"itertools":{"doc":"Extra iterator adaptors, functions and macros.","i":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,null],[13,"Shorter","","The total number of elements that were in `J` along with…",1,null],[13,"Longer","","The total number of elements that were in `I` along with…",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,null],[13,"MinMax","","More than one element in the iterator, the first element…",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",null,null],[13,"Both","","Both values are present.",4,null],[13,"Left","","Only the left value of type `A` is present.",4,null],[13,"Right","","Only the right value of type `B` is present.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of…",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"concat","","Combine all an iterator\'s elements into one element by…",null,[[]]],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",null,[[],["constuples",3]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",null,[[],[["option",4],["diff",4]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained…",null,[[],["kmergeby",3]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",null,[[],["result",4]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",null,[[],["repeatn",3]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",null,[[],["repeatcall",3]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",null,[[],["unfold",3]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",null,[[],["iterate",3]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",null,[[],["zip",3]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,[[],["interleave",3]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,[[],["merge",6]]],[5,"put_back","","Create an iterator where you can put back a single item",null,[[],["putback",3]]],[5,"put_back_n","","Create an iterator where you can put back multiple values…",null,[[],["putbackn",3]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at…",null,[[],["multipeek",3]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",null,[[],["kmerge",6]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,[[],["zipeq",3]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",null,[[],["mergejoinby",3]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",null,[[],["rciter",3]]],[5,"enumerate","","Iterate `iterable` with a running index.",null,[[],["enumerate",3]]],[5,"rev","","Iterate `iterable` in reverse.",null,[[],["rev",3]]],[5,"zip","","Iterate `i` and `j` in lock step.",null,[[],["zip",3]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,[[],["chain",3]]],[5,"cloned","","Create an iterator that clones each element from &T to T",null,[[],["cloned",3]]],[5,"fold","","Perform a fold operation over the iterable.",null,[[]]],[5,"all","","Test whether the predicate holds for all elements in the…",null,[[]]],[5,"any","","Test whether the predicate holds for any elements in the…",null,[[]]],[5,"max","","Return the maximum value of the iterable.",null,[[],["option",4]]],[5,"min","","Return the minimum value of the iterable.",null,[[],["option",4]]],[5,"join","","Combine all iterator elements into one String, seperated…",null,[[],["string",3]]],[5,"sorted","","Sort all iterator elements into a new iterator in…",null,[[],["intoiter",3]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",null,[[]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",null,[[]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",null,[[]]],[0,"structs","","The concrete iterator types.",null,null],[3,"DedupBy","itertools::structs","An iterator adaptor that removes repeated duplicates,…",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two…",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure receives a…",null,null],[3,"MapInto","","An iterator adapter to apply `Into` conversion to each…",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a…",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",null,null],[3,"Positions","","An iterator adapter to get the positions of each element…",null,null],[3,"Update","","An iterator adapter to apply a mutating function to each…",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the…",null,null],[3,"MultiProduct","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"Combinations","","An iterator to iterate through all the `k`-length…",null,null],[3,"CombinationsWithReplacement","","An iterator to iterate through all the `n`-length…",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",null,null],[3,"ExactlyOneError","","Iterator returned for the error case of…",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",null,null],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base…",null,null],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",null,null],[3,"MultiPeek","","See `multipeek()` for more information.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",null,null],[3,"Permutations","","An iterator adaptor that iterates through all the…",null,null],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",null,null],[12,"rciter","","The boxed iterator.",6,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the…",7,null],[3,"Iterate","","An iterator that infinitely applies function to value and…",null,null],[3,"Tee","","One half of an iterator pair where both return the same…",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",null,null],[3,"ZipEq","","An iterator which iterates two other iterators…",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators…",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[6,"Dedup","","An iterator adaptor that removes repeated duplicates.",null,null],[6,"Merge","","An iterator adaptor that merges the two base iterators in…",null,null],[6,"KMerge","","An iterator adaptor that merges an abitrary number of base…",null,null],[11,"with_value","","put back value `value` (builder method)",8,[[]]],[11,"into_parts","","Split the `PutBack` into its parts.",8,[[]]],[11,"put_back","","Put back a single value to the front of the iterator.",8,[[]]],[11,"has_left","itertools","If `Left`, or `Both`, return true, otherwise, return false.",4,[[]]],[11,"has_right","","If `Right`, or `Both`, return true, otherwise, return false.",4,[[]]],[11,"is_left","","If Left, return true otherwise, return false. Exclusive…",4,[[]]],[11,"is_right","","If Right, return true otherwise, return false. Exclusive…",4,[[]]],[11,"is_both","","If Right, return true otherwise, return false. Equivalent…",4,[[]]],[11,"left","","If `Left`, or `Both`, return `Some` with the left value,…",4,[[],["option",4]]],[11,"right","","If `Right`, or `Both`, return `Some` with the right value,…",4,[[],["option",4]]],[11,"both","","If Both, return `Some` tuple containing left and right.",4,[[],["option",4]]],[11,"as_ref","","Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[],["eitherorboth",4]]],[11,"as_mut","","Converts from `&mut EitherOrBoth<A, B>` to…",4,[[],["eitherorboth",4]]],[11,"flip","","Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.",4,[[],["eitherorboth",4]]],[11,"map_left","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[],["eitherorboth",4]]],[11,"map_right","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[],["eitherorboth",4]]],[11,"map_any","","Apply the functions `f` and `g` on the value `a` and `b`…",4,[[],["eitherorboth",4]]],[11,"left_and_then","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[],["eitherorboth",4]]],[11,"right_and_then","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[],["eitherorboth",4]]],[11,"reduce","","Return either value of left, right, or the product of `f`…",4,[[]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],["option",4]]],[11,"reset_peek","itertools::structs","Reset the peeking “cursor”",9,[[]]],[11,"peek","","Works exactly like `.next()` with the only difference that…",9,[[],["option",4]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,[[]]],[11,"into_buffer","","Return a buffer with the produced items that was not…",11,[[],["tuplebuffer",3]]],[11,"into_inner","itertools","Return the inner value.",3,[[]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the…",12,[[],["option",4]]],[8,"Itertools","","An `Iterator` blanket implementation that provides extra…",null,null],[11,"interleave","","Alternate elements from two iterators until both have run…",13,[[],["interleave",3]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",13,[[],["interleaveshortest",3]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",13,[[],["intersperse",3]]],[11,"zip_longest","","Create an iterator which iterates over both this and the…",13,[[],["ziplongest",3]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",13,[[],["zipeq",3]]],[11,"batching","","A “meta iterator adaptor”. Its closure receives a…",13,[[],["batching",3]]],[11,"group_by","","Return an iterable that can group iterator elements.…",13,[[],["groupby",3]]],[11,"chunks","","Return an iterable that can chunk the iterator.",13,[[],["intochunks",3]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows",3]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",13,[[],["tuples",3]]],[11,"tee","","Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",13,[[],["step",3]]],[11,"map_into","","Convert each item of the iterator using the `Into` trait.",13,[[],["mapinto",3]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",13,[[],["mapresults",3]]],[11,"merge","","Return an iterator adaptor that merges the two base…",13,[[],["merge",6]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",13,[[],["mergeby",3]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",13,[[],["mergejoinby",3]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmerge",6]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmergeby",3]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["product",3]]],[11,"multi_cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["multiproduct",3]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",13,[[],["coalesce",3]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",13,[[],["dedup",6]]],[11,"dedup_by","","Remove duplicates from sections of consecutive identical…",13,[[],["dedupby",3]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",13,[[],["unique",3]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",13,[[],["uniqueby",3]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",13,[[],["peekingtakewhile",3]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",13,[[],["takewhileref",3]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",13,[[],["whilesome",3]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",13,[[],["tuplecombinations",3]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",13,[[],["combinations",3]]],[11,"combinations_with_replacement","","Return an iterator that iterates over the `k`-length…",13,[[],["combinationswithreplacement",3]]],[11,"permutations","","Return an iterator adaptor that iterates over all…",13,[[],["permutations",3]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",13,[[],["padusing",3]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",13,[[],["withposition",3]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",13,[[],["positions",3]]],[11,"update","","Return an iterator adaptor that applies a mutating…",13,[[],["update",3]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",13,[[],["option",4]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",13,[[],["option",4]]],[11,"find_position","","Find the position and value of the first element…",13,[[],["option",4]]],[11,"all_equal","","Check whether all elements compare equal.",13,[[]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",13,[[]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",13,[[]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",13,[[]]],[11,"concat","","Combine all an iterator\'s elements into one element by…",13,[[]]],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",13,[[],["vec",3]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",13,[[]]],[11,"join","","Combine all iterator elements into one String, separated…",13,[[],["string",3]]],[11,"format","","Format all iterator elements, separated by `sep`.",13,[[],["format",3]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",13,[[],["formatwith",3]]],[11,"fold_results","","Fold `Result` values from an iterator.",13,[[],["result",4]]],[11,"fold_options","","Fold `Option` values from an iterator.",13,[[],["option",4]]],[11,"fold1","","Accumulator of the elements in the iterator.",13,[[],["option",4]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",13,[[],["option",4]]],[11,"fold_while","","An iterator method that applies a function, producing a…",13,[[],["foldwhile",4]]],[11,"sum1","","Iterate over the entire iterator and add all the elements.",13,[[],["option",4]]],[11,"product1","","Iterate over the entire iterator and multiply all the…",13,[[],["option",4]]],[11,"sorted","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter",3]]],[11,"sorted_by","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter",3]]],[11,"sorted_by_key","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter",3]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",13,[[]]],[11,"into_group_map","","Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["hashmap",3],["vec",3]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",13,[[],["minmaxresult",4]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",13,[[],["minmaxresult",4]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",13,[[],["minmaxresult",4]]],[11,"exactly_one","","If the iterator yields exactly one element, that element…",13,[[],[["exactlyoneerror",3],["result",4]]]],[11,"into_inner","","Return the value in the continue or done.",5,[[]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","itertools::structs","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"into_iter","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"into_iter","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"into_iter","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"into_iter","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"into_iter","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"into_iter","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"into_iter","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"into_iter","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"into_iter","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"next","itertools","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"from","","",0,[[["result",4]],["either",4]]],[11,"next_back","","",0,[[],["option",4]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"extend","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"clone","","",0,[[],["either",4]]],[11,"deref_mut","","",0,[[]]],[11,"partial_cmp","","",0,[[["either",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"peeking_next","itertools::structs","",9,[[],["option",4]]],[11,"peeking_next","","",8,[[],["option",4]]],[11,"peeking_next","","",10,[[],["option",4]]],[11,"drop","","",40,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"into","itertools","",4,[[],[["option",4],["either",4]]]],[11,"next_back","itertools::structs","",19,[[],["option",4]]],[11,"next_back","","",26,[[],["option",4]]],[11,"next_back","","",27,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",45,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",49,[[],["option",4]]],[11,"next_back","","",59,[[],["option",4]]],[11,"next","","",29,[[],["option",4]]],[11,"count","","",29,[[]]],[11,"size_hint","","",29,[[]]],[11,"last","","",29,[[],["option",4]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"all","","",8,[[]]],[11,"fold","","",8,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"fold","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",24,[[],["option",4]]],[11,"size_hint","","",24,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"fold","","",14,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"next","","",23,[[],["option",4]]],[11,"size_hint","","",23,[[]]],[11,"next","","",25,[[],["option",4]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"fold","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"fold","","",20,[[]]],[11,"collect","","",20,[[]]],[11,"next","","",26,[[],["option",4]]],[11,"size_hint","","",26,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"fold","","",27,[[]]],[11,"collect","","",27,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"next","","",31,[[],["option",4]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",41,[[],["option",4]]],[11,"next","","",40,[[],["option",4]]],[11,"next","","",38,[[],["option",4]]],[11,"next","","",37,[[],["option",4]]],[11,"next","","",42,[[],["option",4]]],[11,"size_hint","","",42,[[]]],[11,"fold","","",42,[[]]],[11,"next","","",43,[[],["option",4]]],[11,"size_hint","","",43,[[]]],[11,"next","","",44,[[],["option",4]]],[11,"size_hint","","",44,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"next","","",45,[[],["option",4]]],[11,"size_hint","","",45,[[]]],[11,"next","","",46,[[],["option",4]]],[11,"size_hint","","",46,[[]]],[11,"next","","",47,[[],["option",4]]],[11,"count","","",47,[[]]],[11,"size_hint","","",47,[[]]],[11,"next","","",48,[[],["option",4]]],[11,"size_hint","","",48,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",49,[[],["option",4]]],[11,"size_hint","","",49,[[]]],[11,"next","","",50,[[],["option",4]]],[11,"size_hint","","",50,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",51,[[],["option",4]]],[11,"size_hint","","",51,[[]]],[11,"next","","",52,[[],["option",4]]],[11,"size_hint","","",52,[[]]],[11,"next","","",53,[[],["option",4]]],[11,"size_hint","","",53,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"next","","",54,[[],["option",4]]],[11,"next","","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"count","","",56,[[]]],[11,"next","","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"count","","",55,[[]]],[11,"next","","",57,[[],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"next","","",58,[[],["option",4]]],[11,"size_hint","","",58,[[]]],[11,"next","","",59,[[],["option",4]]],[11,"size_hint","","",59,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"clone","","",29,[[],["multiproduct",3]]],[11,"clone","","",15,[[],["interleave",3]]],[11,"clone","","",16,[[],["interleaveshortest",3]]],[11,"clone","","",8,[[],["putback",3]]],[11,"clone","","",17,[[],["product",3]]],[11,"clone","","",18,[[],["batching",3]]],[11,"clone","","",28,[[],["step",3]]],[11,"clone","","",21,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",23,[[],["whilesome",3]]],[11,"clone","itertools","",4,[[],["eitherorboth",4]]],[11,"clone","itertools::structs","",32,[[]]],[11,"clone","","",31,[[],["combinationswithreplacement",3]]],[11,"clone","","",33,[[],["exactlyoneerror",3]]],[11,"clone","","",34,[[],["format",3]]],[11,"clone","","",42,[[],["intersperse",3]]],[11,"clone","","",43,[[],["kmergeby",3]]],[11,"clone","itertools","",2,[[],["minmaxresult",4]]],[11,"clone","itertools::structs","",9,[[],["multipeek",3]]],[11,"clone","","",45,[[],["padusing",3]]],[11,"clone","","",10,[[],["putbackn",3]]],[11,"clone","","",6,[[],["rciter",3]]],[11,"clone","","",7,[[],["unfold",3]]],[11,"clone","","",51,[[],["iterate",3]]],[11,"clone","","",56,[[],["uniqueby",3]]],[11,"clone","","",55,[[],["unique",3]]],[11,"clone","itertools","",3,[[],["position",4]]],[11,"clone","itertools::structs","",58,[[],["zipeq",3]]],[11,"clone","","",59,[[],["ziplongest",3]]],[11,"clone","","",60,[[],["zip",3]]],[11,"clone","itertools","",5,[[],["foldwhile",4]]],[11,"eq","","",4,[[["eitherorboth",4]]]],[11,"ne","","",4,[[["eitherorboth",4]]]],[11,"eq","","",2,[[["minmaxresult",4]]]],[11,"ne","","",2,[[["minmaxresult",4]]]],[11,"eq","","",3,[[["position",4]]]],[11,"ne","","",3,[[["position",4]]]],[11,"eq","","",5,[[["foldwhile",4]]]],[11,"ne","","",5,[[["foldwhile",4]]]],[11,"fmt","itertools::structs","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",4,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",2,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",3,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",5,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"is_left","itertools","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]]],"p":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,"MultiPeek"],[3,"PutBackN"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"DedupBy"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,"MapResults"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Positions"],[3,"Update"],[3,"Step"],[3,"MultiProduct"],[3,"Combinations"],[3,"CombinationsWithReplacement"],[3,"ConsTuples"],[3,"ExactlyOneError"],[3,"Format"],[3,"FormatWith"],[3,"IntoChunks"],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,"Intersperse"],[3,"KMergeBy"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"Permutations"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"Unique"],[3,"UniqueBy"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]},\
"jpeg_decoder":{"doc":"This crate contains a JPEG decoder.","i":[[3,"Decoder","jpeg_decoder","JPEG decoder",null,null],[3,"ImageInfo","","Represents metadata of an image.",null,null],[12,"width","","The width of the image, in pixels.",0,null],[12,"height","","The height of the image, in pixels.",0,null],[12,"pixel_format","","The pixel format of the image.",0,null],[4,"PixelFormat","","An enumeration over combinations of color spaces and bit…",null,null],[13,"L8","","Luminance (grayscale), 8 bits",1,null],[13,"RGB24","","RGB, 8 bits per channel",1,null],[13,"CMYK32","","CMYK, 8 bits per channel",1,null],[4,"Error","","Errors that can occur while decoding a JPEG image.",null,null],[13,"Format","","The image is not formatted properly. The string contains…",2,null],[13,"Unsupported","","The image makes use of a JPEG feature not (currently)…",2,null],[13,"Io","","An I/O error occurred while decoding the image.",2,null],[13,"Internal","","An internal error occurred while decoding the image.",2,null],[4,"UnsupportedFeature","","An enumeration over JPEG features (currently) unsupported…",null,null],[13,"Hierarchical","","Hierarchical JPEG.",3,null],[13,"Lossless","","Lossless JPEG.",3,null],[13,"ArithmeticEntropyCoding","","JPEG using arithmetic entropy coding instead of Huffman…",3,null],[13,"SamplePrecision","","Sample precision in bits. 8 bit sample precision is what…",3,null],[13,"ComponentCount","","Number of components in an image. 1, 3 and 4 components…",3,null],[13,"DNL","","An image can specify a zero height in the frame header and…",3,null],[13,"SubsamplingRatio","","Subsampling ratio.",3,null],[13,"NonIntegerSubsamplingRatio","","A subsampling ratio not representable as an integer.",3,null],[11,"new","","Creates a new `Decoder` using the reader `reader`.",4,[[],["decoder",3]]],[11,"info","","Returns metadata about the image.",4,[[],[["option",4],["imageinfo",3]]]],[11,"read_info","","Tries to read metadata from the image without decoding it.",4,[[],[["result",4],["error",4]]]],[11,"scale","","Configure the decoder to scale the image during decoding.",4,[[],[["error",4],["result",4]]]],[11,"decode","","Decodes the image and returns the decoded pixels if…",4,[[],[["error",4],["vec",3],["result",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",2,[[["ioerror",3]],["error",4]]],[11,"clone","","",1,[[],["pixelformat",4]]],[11,"clone","","",0,[[],["imageinfo",3]]],[11,"eq","","",1,[[["pixelformat",4]]]],[11,"eq","","",0,[[["imageinfo",3]]]],[11,"ne","","",0,[[["imageinfo",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"description","","",2,[[]]],[11,"cause","","",2,[[],[["option",4],["stderror",8]]]]],"p":[[3,"ImageInfo"],[4,"PixelFormat"],[4,"Error"],[4,"UnsupportedFeature"],[3,"Decoder"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[4,"c_void","libc","Equivalent to C\'s `void` type when used as a pointer.",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",17,null],[12,"sa_family","","",17,null],[12,"sa_data","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",18,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"passwd","","",null,null],[12,"pw_name","","",19,null],[12,"pw_passwd","","",19,null],[12,"pw_uid","","",19,null],[12,"pw_gid","","",19,null],[12,"pw_change","","",19,null],[12,"pw_class","","",19,null],[12,"pw_gecos","","",19,null],[12,"pw_dir","","",19,null],[12,"pw_shell","","",19,null],[12,"pw_expire","","",19,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",20,null],[12,"ifa_name","","",20,null],[12,"ifa_flags","","",20,null],[12,"ifa_addr","","",20,null],[12,"ifa_netmask","","",20,null],[12,"ifa_dstaddr","","",20,null],[12,"ifa_data","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"msghdr","","",null,null],[12,"msg_name","","",22,null],[12,"msg_namelen","","",22,null],[12,"msg_iov","","",22,null],[12,"msg_iovlen","","",22,null],[12,"msg_control","","",22,null],[12,"msg_controllen","","",22,null],[12,"msg_flags","","",22,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",23,null],[12,"cmsg_level","","",23,null],[12,"cmsg_type","","",23,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",24,null],[12,"if_name","","",24,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",25,null],[12,"sun_family","","",25,null],[12,"sun_path","","",25,null],[3,"utsname","","",null,null],[12,"sysname","","",26,null],[12,"nodename","","",26,null],[12,"release","","",26,null],[12,"version","","",26,null],[12,"machine","","",26,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",27,null],[12,"imr_interface","","",27,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",28,null],[12,"aio_offset","","",28,null],[12,"aio_buf","","",28,null],[12,"aio_nbytes","","",28,null],[12,"aio_reqprio","","",28,null],[12,"aio_sigevent","","",28,null],[12,"aio_lio_opcode","","",28,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",29,null],[12,"gl_offs","","",29,null],[12,"gl_pathv","","",29,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",30,null],[12,"ai_family","","",30,null],[12,"ai_socktype","","",30,null],[12,"ai_protocol","","",30,null],[12,"ai_addrlen","","",30,null],[12,"ai_canonname","","",30,null],[12,"ai_addr","","",30,null],[12,"ai_next","","",30,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",31,null],[12,"denom","","",31,null],[3,"stat","","",null,null],[12,"st_dev","","",32,null],[12,"st_mode","","",32,null],[12,"st_nlink","","",32,null],[12,"st_ino","","",32,null],[12,"st_uid","","",32,null],[12,"st_gid","","",32,null],[12,"st_rdev","","",32,null],[12,"st_atime","","",32,null],[12,"st_atime_nsec","","",32,null],[12,"st_mtime","","",32,null],[12,"st_mtime_nsec","","",32,null],[12,"st_ctime","","",32,null],[12,"st_ctime_nsec","","",32,null],[12,"st_birthtime","","",32,null],[12,"st_birthtime_nsec","","",32,null],[12,"st_size","","",32,null],[12,"st_blocks","","",32,null],[12,"st_blksize","","",32,null],[12,"st_flags","","",32,null],[12,"st_gen","","",32,null],[12,"st_lspare","","",32,null],[12,"st_qspare","","",32,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",33,null],[12,"si_errno","","",33,null],[12,"si_code","","",33,null],[12,"si_pid","","",33,null],[12,"si_uid","","",33,null],[12,"si_status","","",33,null],[12,"si_addr","","",33,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",34,null],[12,"sa_mask","","",34,null],[12,"sa_flags","","",34,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",35,null],[12,"ss_size","","",35,null],[12,"ss_flags","","",35,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",36,null],[12,"fst_posmode","","",36,null],[12,"fst_offset","","",36,null],[12,"fst_length","","",36,null],[12,"fst_bytesalloc","","",36,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",37,null],[12,"ra_count","","",37,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",38,null],[12,"f_frsize","","",38,null],[12,"f_blocks","","",38,null],[12,"f_bfree","","",38,null],[12,"f_bavail","","",38,null],[12,"f_files","","",38,null],[12,"f_ffree","","",38,null],[12,"f_favail","","",38,null],[12,"f_fsid","","",38,null],[12,"f_flag","","",38,null],[12,"f_namemax","","",38,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",39,null],[12,"dli_fbase","","",39,null],[12,"dli_sname","","",39,null],[12,"dli_saddr","","",39,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",40,null],[12,"sin_family","","",40,null],[12,"sin_port","","",40,null],[12,"sin_addr","","",40,null],[12,"sin_zero","","",40,null],[3,"kevent64_s","","",null,null],[12,"ident","","",41,null],[12,"filter","","",41,null],[12,"flags","","",41,null],[12,"fflags","","",41,null],[12,"data","","",41,null],[12,"udata","","",41,null],[12,"ext","","",41,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",42,null],[12,"dqb_bsoftlimit","","",42,null],[12,"dqb_curbytes","","",42,null],[12,"dqb_ihardlimit","","",42,null],[12,"dqb_isoftlimit","","",42,null],[12,"dqb_curinodes","","",42,null],[12,"dqb_btime","","",42,null],[12,"dqb_itime","","",42,null],[12,"dqb_id","","",42,null],[12,"dqb_spare","","",42,null],[3,"if_msghdr","","",null,null],[12,"ifm_msglen","","",43,null],[12,"ifm_version","","",43,null],[12,"ifm_type","","",43,null],[12,"ifm_addrs","","",43,null],[12,"ifm_flags","","",43,null],[12,"ifm_index","","",43,null],[12,"ifm_data","","",43,null],[3,"termios","","",null,null],[12,"c_iflag","","",44,null],[12,"c_oflag","","",44,null],[12,"c_cflag","","",44,null],[12,"c_lflag","","",44,null],[12,"c_cc","","",44,null],[12,"c_ispeed","","",44,null],[12,"c_ospeed","","",44,null],[3,"flock","","",null,null],[12,"l_start","","",45,null],[12,"l_len","","",45,null],[12,"l_pid","","",45,null],[12,"l_type","","",45,null],[12,"l_whence","","",45,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",46,null],[12,"hdr_cnt","","",46,null],[12,"trailers","","",46,null],[12,"trl_cnt","","",46,null],[3,"lconv","","",null,null],[12,"decimal_point","","",47,null],[12,"thousands_sep","","",47,null],[12,"grouping","","",47,null],[12,"int_curr_symbol","","",47,null],[12,"currency_symbol","","",47,null],[12,"mon_decimal_point","","",47,null],[12,"mon_thousands_sep","","",47,null],[12,"mon_grouping","","",47,null],[12,"positive_sign","","",47,null],[12,"negative_sign","","",47,null],[12,"int_frac_digits","","",47,null],[12,"frac_digits","","",47,null],[12,"p_cs_precedes","","",47,null],[12,"p_sep_by_space","","",47,null],[12,"n_cs_precedes","","",47,null],[12,"n_sep_by_space","","",47,null],[12,"p_sign_posn","","",47,null],[12,"n_sign_posn","","",47,null],[12,"int_p_cs_precedes","","",47,null],[12,"int_n_cs_precedes","","",47,null],[12,"int_p_sep_by_space","","",47,null],[12,"int_n_sep_by_space","","",47,null],[12,"int_p_sign_posn","","",47,null],[12,"int_n_sign_posn","","",47,null],[3,"proc_taskinfo","","",null,null],[12,"pti_virtual_size","","",48,null],[12,"pti_resident_size","","",48,null],[12,"pti_total_user","","",48,null],[12,"pti_total_system","","",48,null],[12,"pti_threads_user","","",48,null],[12,"pti_threads_system","","",48,null],[12,"pti_policy","","",48,null],[12,"pti_faults","","",48,null],[12,"pti_pageins","","",48,null],[12,"pti_cow_faults","","",48,null],[12,"pti_messages_sent","","",48,null],[12,"pti_messages_received","","",48,null],[12,"pti_syscalls_mach","","",48,null],[12,"pti_syscalls_unix","","",48,null],[12,"pti_csw","","",48,null],[12,"pti_threadnum","","",48,null],[12,"pti_numrunning","","",48,null],[12,"pti_priority","","",48,null],[3,"proc_bsdinfo","","",null,null],[12,"pbi_flags","","",49,null],[12,"pbi_status","","",49,null],[12,"pbi_xstatus","","",49,null],[12,"pbi_pid","","",49,null],[12,"pbi_ppid","","",49,null],[12,"pbi_uid","","",49,null],[12,"pbi_gid","","",49,null],[12,"pbi_ruid","","",49,null],[12,"pbi_rgid","","",49,null],[12,"pbi_svuid","","",49,null],[12,"pbi_svgid","","",49,null],[12,"rfu_1","","",49,null],[12,"pbi_comm","","",49,null],[12,"pbi_name","","",49,null],[12,"pbi_nfiles","","",49,null],[12,"pbi_pgid","","",49,null],[12,"pbi_pjobc","","",49,null],[12,"e_tdev","","",49,null],[12,"e_tpgid","","",49,null],[12,"pbi_nice","","",49,null],[12,"pbi_start_tvsec","","",49,null],[12,"pbi_start_tvusec","","",49,null],[3,"proc_taskallinfo","","",null,null],[12,"pbsd","","",50,null],[12,"ptinfo","","",50,null],[3,"xsw_usage","","",null,null],[12,"xsu_total","","",51,null],[12,"xsu_avail","","",51,null],[12,"xsu_used","","",51,null],[12,"xsu_pagesize","","",51,null],[12,"xsu_encrypted","","",51,null],[3,"xucred","","",null,null],[12,"cr_version","","",52,null],[12,"cr_uid","","",52,null],[12,"cr_ngroups","","",52,null],[12,"cr_groups","","",52,null],[3,"mach_header","","",null,null],[12,"magic","","",53,null],[12,"cputype","","",53,null],[12,"cpusubtype","","",53,null],[12,"filetype","","",53,null],[12,"ncmds","","",53,null],[12,"sizeofcmds","","",53,null],[12,"flags","","",53,null],[3,"mach_header_64","","",null,null],[12,"magic","","",54,null],[12,"cputype","","",54,null],[12,"cpusubtype","","",54,null],[12,"filetype","","",54,null],[12,"ncmds","","",54,null],[12,"sizeofcmds","","",54,null],[12,"flags","","",54,null],[12,"reserved","","",54,null],[3,"segment_command","","",null,null],[12,"cmd","","",55,null],[12,"cmdsize","","",55,null],[12,"segname","","",55,null],[12,"vmaddr","","",55,null],[12,"vmsize","","",55,null],[12,"fileoff","","",55,null],[12,"filesize","","",55,null],[12,"maxprot","","",55,null],[12,"initprot","","",55,null],[12,"nsects","","",55,null],[12,"flags","","",55,null],[3,"segment_command_64","","",null,null],[12,"cmd","","",56,null],[12,"cmdsize","","",56,null],[12,"segname","","",56,null],[12,"vmaddr","","",56,null],[12,"vmsize","","",56,null],[12,"fileoff","","",56,null],[12,"filesize","","",56,null],[12,"maxprot","","",56,null],[12,"initprot","","",56,null],[12,"nsects","","",56,null],[12,"flags","","",56,null],[3,"load_command","","",null,null],[12,"cmd","","",57,null],[12,"cmdsize","","",57,null],[3,"sockaddr_dl","","",null,null],[12,"sdl_len","","",58,null],[12,"sdl_family","","",58,null],[12,"sdl_index","","",58,null],[12,"sdl_type","","",58,null],[12,"sdl_nlen","","",58,null],[12,"sdl_alen","","",58,null],[12,"sdl_slen","","",58,null],[12,"sdl_data","","",58,null],[3,"sockaddr_inarp","","",null,null],[12,"sin_len","","",59,null],[12,"sin_family","","",59,null],[12,"sin_port","","",59,null],[12,"sin_addr","","",59,null],[12,"sin_srcaddr","","",59,null],[12,"sin_tos","","",59,null],[12,"sin_other","","",59,null],[3,"sockaddr_ctl","","",null,null],[12,"sc_len","","",60,null],[12,"sc_family","","",60,null],[12,"ss_sysaddr","","",60,null],[12,"sc_id","","",60,null],[12,"sc_unit","","",60,null],[12,"sc_reserved","","",60,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",61,null],[12,"ipi_spec_dst","","",61,null],[12,"ipi_addr","","",61,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",62,null],[12,"ipi6_ifindex","","",62,null],[3,"ipc_perm","","",null,null],[12,"uid","","",63,null],[12,"gid","","",63,null],[12,"cuid","","",63,null],[12,"cgid","","",63,null],[12,"mode","","",63,null],[12,"_seq","","",63,null],[12,"_key","","",63,null],[3,"sembuf","","",null,null],[12,"sem_num","","",64,null],[12,"sem_op","","",64,null],[12,"sem_flg","","",64,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",65,null],[12,"ar_pro","","",65,null],[12,"ar_hln","","",65,null],[12,"ar_pln","","",65,null],[12,"ar_op","","",65,null],[3,"in_addr","","",null,null],[12,"s_addr","","",66,null],[3,"kevent","","",null,null],[12,"ident","","",67,null],[12,"filter","","",67,null],[12,"flags","","",67,null],[12,"fflags","","",67,null],[12,"data","","",67,null],[12,"udata","","",67,null],[3,"semid_ds","","",null,null],[12,"sem_perm","","",68,null],[12,"sem_base","","",68,null],[12,"sem_nsems","","",68,null],[12,"sem_otime","","",68,null],[12,"sem_pad1","","",68,null],[12,"sem_ctime","","",68,null],[12,"sem_pad2","","",68,null],[12,"sem_pad3","","",68,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",69,null],[12,"shm_segsz","","",69,null],[12,"shm_lpid","","",69,null],[12,"shm_cpid","","",69,null],[12,"shm_nattch","","",69,null],[12,"shm_atime","","",69,null],[12,"shm_dtime","","",69,null],[12,"shm_ctime","","",69,null],[12,"shm_internal","","",69,null],[3,"proc_threadinfo","","",null,null],[12,"pth_user_time","","",70,null],[12,"pth_system_time","","",70,null],[12,"pth_cpu_usage","","",70,null],[12,"pth_policy","","",70,null],[12,"pth_run_state","","",70,null],[12,"pth_flags","","",70,null],[12,"pth_sleep_time","","",70,null],[12,"pth_curpri","","",70,null],[12,"pth_priority","","",70,null],[12,"pth_maxpriority","","",70,null],[12,"pth_name","","",70,null],[3,"statfs","","",null,null],[12,"f_bsize","","",71,null],[12,"f_iosize","","",71,null],[12,"f_blocks","","",71,null],[12,"f_bfree","","",71,null],[12,"f_bavail","","",71,null],[12,"f_files","","",71,null],[12,"f_ffree","","",71,null],[12,"f_fsid","","",71,null],[12,"f_owner","","",71,null],[12,"f_type","","",71,null],[12,"f_flags","","",71,null],[12,"f_fssubtype","","",71,null],[12,"f_fstypename","","",71,null],[12,"f_mntonname","","",71,null],[12,"f_mntfromname","","",71,null],[12,"f_reserved","","",71,null],[3,"dirent","","",null,null],[12,"d_ino","","",72,null],[12,"d_seekoff","","",72,null],[12,"d_reclen","","",72,null],[12,"d_namlen","","",72,null],[12,"d_type","","",72,null],[12,"d_name","","",72,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",73,null],[12,"ss_family","","",73,null],[3,"utmpx","","",null,null],[12,"ut_user","","",74,null],[12,"ut_id","","",74,null],[12,"ut_line","","",74,null],[12,"ut_pid","","",74,null],[12,"ut_type","","",74,null],[12,"ut_tv","","",74,null],[12,"ut_host","","",74,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",75,null],[12,"sigev_signo","","",75,null],[12,"sigev_value","","",75,null],[12,"sigev_notify_attributes","","",75,null],[3,"timeval32","","",null,null],[12,"tv_sec","","",76,null],[12,"tv_usec","","",76,null],[3,"if_data","","",null,null],[12,"ifi_type","","",77,null],[12,"ifi_typelen","","",77,null],[12,"ifi_physical","","",77,null],[12,"ifi_addrlen","","",77,null],[12,"ifi_hdrlen","","",77,null],[12,"ifi_recvquota","","",77,null],[12,"ifi_xmitquota","","",77,null],[12,"ifi_unused1","","",77,null],[12,"ifi_mtu","","",77,null],[12,"ifi_metric","","",77,null],[12,"ifi_baudrate","","",77,null],[12,"ifi_ipackets","","",77,null],[12,"ifi_ierrors","","",77,null],[12,"ifi_opackets","","",77,null],[12,"ifi_oerrors","","",77,null],[12,"ifi_collisions","","",77,null],[12,"ifi_ibytes","","",77,null],[12,"ifi_obytes","","",77,null],[12,"ifi_imcasts","","",77,null],[12,"ifi_omcasts","","",77,null],[12,"ifi_iqdrops","","",77,null],[12,"ifi_noproto","","",77,null],[12,"ifi_recvtiming","","",77,null],[12,"ifi_xmittiming","","",77,null],[12,"ifi_lastchange","","",77,null],[12,"ifi_unused2","","",77,null],[12,"ifi_hwassist","","",77,null],[12,"ifi_reserved1","","",77,null],[12,"ifi_reserved2","","",77,null],[3,"bpf_hdr","","",null,null],[12,"bh_tstamp","","",78,null],[12,"bh_caplen","","",78,null],[12,"bh_datalen","","",78,null],[12,"bh_hdrlen","","",78,null],[3,"pthread_attr_t","","",null,null],[3,"max_align_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",79,null],[19,"semun","","",null,null],[12,"val","","",80,null],[12,"buf","","",80,null],[12,"array","","",80,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"_WSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"getpeereid","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"sync","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"acct","","",null,null],[5,"setgrent","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"chflags","","",null,null],[5,"fchflags","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"lio_listio","","",null,null],[5,"dirfd","","",null,null],[5,"lutimes","","",null,null],[5,"gettimeofday","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"semget","","",null,null],[5,"semctl","","",null,null],[5,"semop","","",null,null],[5,"shm_open","","",null,null],[5,"ftok","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"shmget","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"getxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"renamex_np","","",null,null],[5,"renameatx_np","","",null,null],[5,"fremovexattr","","",null,null],[5,"getgrouplist","","",null,null],[5,"initgroups","","",null,null],[5,"waitid","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"settimeofday","","",null,null],[5,"_dyld_image_count","","",null,null],[5,"_dyld_get_image_header","","",null,null],[5,"_dyld_get_image_vmaddr_slide","","",null,null],[5,"_dyld_get_image_name","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"uname","","",null,null],[5,"exchangedata","","",null,null],[11,"si_addr","","",33,[[]]],[11,"si_value","","",33,[[],["sigval",3]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"c_char","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"clockid_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"idtype_t","","",null,null],[6,"integer_t","","",null,null],[6,"cpu_type_t","","",null,null],[6,"cpu_subtype_t","","",null,null],[6,"posix_spawnattr_t","","",null,null],[6,"posix_spawn_file_actions_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"vm_prot_t","","",null,null],[6,"vm_size_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"boolean_t","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONREAD","","",null,null],[17,"FIONBIO","","",null,null],[17,"FIOASYNC","","",null,null],[17,"FIOSETOWN","","",null,null],[17,"FIOGETOWN","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPTOS_ECN_NOTECT","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"NCCS","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_SHLOCK","","",null,null],[17,"O_EXLOCK","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VDSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"VSTATUS","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"OXTABS","","",null,null],[17,"ONOEOT","","",null,null],[17,"CIGNORE","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"ALTWERASE","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"NOKERNINFO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"MDMBUF","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_SELF","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"BIOCGBLEN","","",null,null],[17,"BIOCSBLEN","","",null,null],[17,"BIOCFLUSH","","",null,null],[17,"BIOCPROMISC","","",null,null],[17,"BIOCGDLT","","",null,null],[17,"BIOCGETIF","","",null,null],[17,"BIOCSETIF","","",null,null],[17,"BIOCGSTATS","","",null,null],[17,"BIOCIMMEDIATE","","",null,null],[17,"BIOCVERSION","","",null,null],[17,"BIOCGHDRCMPLT","","",null,null],[17,"BIOCSHDRCMPLT","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"PT_TRACE_ME","","",null,null],[17,"PT_READ_I","","",null,null],[17,"PT_READ_D","","",null,null],[17,"PT_READ_U","","",null,null],[17,"PT_WRITE_I","","",null,null],[17,"PT_WRITE_D","","",null,null],[17,"PT_WRITE_U","","",null,null],[17,"PT_CONTINUE","","",null,null],[17,"PT_KILL","","",null,null],[17,"PT_STEP","","",null,null],[17,"PT_ATTACH","","",null,null],[17,"PT_DETACH","","",null,null],[17,"PT_SIGEXC","","",null,null],[17,"PT_THUPDATE","","",null,null],[17,"PT_ATTACHEXC","","",null,null],[17,"PT_FORCEQUOTA","","",null,null],[17,"PT_DENY_ATTACH","","",null,null],[17,"PT_FIRSTMACH","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"VM_FLAGS_FIXED","","",null,null],[17,"VM_FLAGS_ANYWHERE","","",null,null],[17,"VM_FLAGS_PURGABLE","","",null,null],[17,"VM_FLAGS_RANDOM_ADDR","","",null,null],[17,"VM_FLAGS_NO_CACHE","","",null,null],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",null,null],[17,"VM_FLAGS_RESILIENT_MEDIA","","",null,null],[17,"VM_FLAGS_OVERWRITE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_MASK","","",null,null],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",null,null],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",null,null],[17,"VM_FLAGS_ALIAS_MASK","","",null,null],[17,"VM_FLAGS_USER_ALLOCATE","","",null,null],[17,"VM_FLAGS_USER_MAP","","",null,null],[17,"VM_FLAGS_USER_REMAP","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",null,null],[17,"SUPERPAGE_NONE","","",null,null],[17,"SUPERPAGE_SIZE_ANY","","",null,null],[17,"VM_FLAGS_SUPERPAGE_NONE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",null,null],[17,"SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_MEMORY_MALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_SMALL","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE","","",null,null],[17,"VM_MEMORY_MALLOC_HUGE","","",null,null],[17,"VM_MEMORY_SBRK","","",null,null],[17,"VM_MEMORY_REALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_TINY","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",null,null],[17,"VM_MEMORY_ANALYSIS_TOOL","","",null,null],[17,"VM_MEMORY_MALLOC_NANO","","",null,null],[17,"VM_MEMORY_MACH_MSG","","",null,null],[17,"VM_MEMORY_IOKIT","","",null,null],[17,"VM_MEMORY_STACK","","",null,null],[17,"VM_MEMORY_GUARD","","",null,null],[17,"VM_MEMORY_SHARED_PMAP","","",null,null],[17,"VM_MEMORY_DYLIB","","",null,null],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",null,null],[17,"VM_MEMORY_UNSHARED_PMAP","","",null,null],[17,"VM_MEMORY_APPKIT","","",null,null],[17,"VM_MEMORY_FOUNDATION","","",null,null],[17,"VM_MEMORY_COREGRAPHICS","","",null,null],[17,"VM_MEMORY_CORESERVICES","","",null,null],[17,"VM_MEMORY_CARBON","","",null,null],[17,"VM_MEMORY_JAVA","","",null,null],[17,"VM_MEMORY_COREDATA","","",null,null],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",null,null],[17,"VM_MEMORY_ATS","","",null,null],[17,"VM_MEMORY_LAYERKIT","","",null,null],[17,"VM_MEMORY_CGIMAGE","","",null,null],[17,"VM_MEMORY_TCMALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",null,null],[17,"VM_MEMORY_DYLD","","",null,null],[17,"VM_MEMORY_DYLD_MALLOC","","",null,null],[17,"VM_MEMORY_SQLITE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",null,null],[17,"VM_MEMORY_GLSL","","",null,null],[17,"VM_MEMORY_OPENCL","","",null,null],[17,"VM_MEMORY_COREIMAGE","","",null,null],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",null,null],[17,"VM_MEMORY_IMAGEIO","","",null,null],[17,"VM_MEMORY_COREPROFILE","","",null,null],[17,"VM_MEMORY_ASSETSD","","",null,null],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",null,null],[17,"VM_MEMORY_LIBDISPATCH","","",null,null],[17,"VM_MEMORY_ACCELERATE","","",null,null],[17,"VM_MEMORY_COREUI","","",null,null],[17,"VM_MEMORY_COREUIFILE","","",null,null],[17,"VM_MEMORY_GENEALOGY","","",null,null],[17,"VM_MEMORY_RAWCAMERA","","",null,null],[17,"VM_MEMORY_CORPSEINFO","","",null,null],[17,"VM_MEMORY_ASL","","",null,null],[17,"VM_MEMORY_SWIFT_RUNTIME","","",null,null],[17,"VM_MEMORY_SWIFT_METADATA","","",null,null],[17,"VM_MEMORY_DHMM","","",null,null],[17,"VM_MEMORY_SCENEKIT","","",null,null],[17,"VM_MEMORY_SKYWALK","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"BIOCGRSIG","","",null,null],[17,"BIOCSRSIG","","",null,null],[17,"BIOCSDLT","","",null,null],[17,"BIOCGSEESENT","","",null,null],[17,"BIOCSSEESENT","","",null,null],[17,"BIOCGDLTLIST","","",null,null],[17,"FIODTYPE","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"B7200","","",null,null],[17,"B14400","","",null,null],[17,"B28800","","",null,null],[17,"B57600","","",null,null],[17,"B76800","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_GGP","","gateway2 (deprecated)",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_ST","","Stream protocol II.",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PIGP","","private interior gateway",null,null],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",null,null],[17,"IPPROTO_NVPII","","network voice protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_ARGUS","","Argus",null,null],[17,"IPPROTO_EMCON","","EMCON",null,null],[17,"IPPROTO_XNET","","Cross Net Debugger",null,null],[17,"IPPROTO_CHAOS","","Chaos",null,null],[17,"IPPROTO_MUX","","Multiplexing",null,null],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",null,null],[17,"IPPROTO_HMP","","Host Monitoring",null,null],[17,"IPPROTO_PRM","","Packet Radio Measurement",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TRUNK1","","Trunk-1",null,null],[17,"IPPROTO_TRUNK2","","Trunk-2",null,null],[17,"IPPROTO_LEAF1","","Leaf-1",null,null],[17,"IPPROTO_LEAF2","","Leaf-2",null,null],[17,"IPPROTO_RDP","","Reliable Data",null,null],[17,"IPPROTO_IRTP","","Reliable Transaction",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_BLT","","Bulk Data Transfer",null,null],[17,"IPPROTO_NSP","","Network Services",null,null],[17,"IPPROTO_INP","","Merit Internodal",null,null],[17,"IPPROTO_SEP","","Sequential Exchange",null,null],[17,"IPPROTO_3PC","","Third Party Connect",null,null],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",null,null],[17,"IPPROTO_XTP","","XTP",null,null],[17,"IPPROTO_DDP","","Datagram Delivery",null,null],[17,"IPPROTO_CMTP","","Control Message Transport",null,null],[17,"IPPROTO_TPXX","","TP++ Transport",null,null],[17,"IPPROTO_IL","","IL transport protocol",null,null],[17,"IPPROTO_SDRP","","Source Demand Routing",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_IDRP","","InterDomain Routing",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_MHRP","","Mobile Host Routing",null,null],[17,"IPPROTO_BHA","","BHA",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",null,null],[17,"IPPROTO_SWIPE","","IP with encryption",null,null],[17,"IPPROTO_NHRP","","Next Hop Resolution",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_AHIP","","any host internal protocol",null,null],[17,"IPPROTO_CFTP","","CFTP",null,null],[17,"IPPROTO_HELLO","","\\\"hello\\\" routing protocol",null,null],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",null,null],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",null,null],[17,"IPPROTO_RVD","","Remote Virtual Disk",null,null],[17,"IPPROTO_IPPC","","Pluribus Packet Core",null,null],[17,"IPPROTO_ADFS","","Any distributed FS",null,null],[17,"IPPROTO_SATMON","","Satnet Monitoring",null,null],[17,"IPPROTO_VISA","","VISA Protocol",null,null],[17,"IPPROTO_IPCV","","Packet Core Utility",null,null],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",null,null],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",null,null],[17,"IPPROTO_WSN","","Wang Span Network",null,null],[17,"IPPROTO_PVP","","Packet Video Protocol",null,null],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",null,null],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",null,null],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",null,null],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",null,null],[17,"IPPROTO_EON","","ISO cnlp",null,null],[17,"IPPROTO_VMTP","","VMTP",null,null],[17,"IPPROTO_SVMTP","","Secure VMTP",null,null],[17,"IPPROTO_VINES","","Banyon VINES",null,null],[17,"IPPROTO_TTP","","TTP",null,null],[17,"IPPROTO_IGP","","NSFNET-IGP",null,null],[17,"IPPROTO_DGP","","dissimilar gateway prot.",null,null],[17,"IPPROTO_TCF","","TCF",null,null],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",null,null],[17,"IPPROTO_OSPFIGP","","OSPFIGP",null,null],[17,"IPPROTO_SRPC","","Strite RPC protocol",null,null],[17,"IPPROTO_LARP","","Locus Address Resoloution",null,null],[17,"IPPROTO_MTP","","Multicast Transport",null,null],[17,"IPPROTO_AX25","","AX.25 Frames",null,null],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",null,null],[17,"IPPROTO_MICP","","Mobile Int.ing control",null,null],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",null,null],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_APES","","any private encr. scheme",null,null],[17,"IPPROTO_GMTP","","GMTP",null,null],[17,"IPPROTO_PIM","","Protocol Independent Mcast",null,null],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",null,null],[17,"IPPROTO_PGM","","PGM",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \\\"all job for this…",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_IMPLINK","","",null,null],[17,"AF_PUP","","",null,null],[17,"AF_CHAOS","","",null,null],[17,"AF_NS","","",null,null],[17,"AF_ISO","","",null,null],[17,"AF_OSI","","",null,null],[17,"AF_ECMA","","",null,null],[17,"AF_DATAKIT","","",null,null],[17,"AF_CCITT","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_DLI","","",null,null],[17,"AF_LAT","","",null,null],[17,"AF_HYLINK","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_LINK","","",null,null],[17,"pseudo_AF_XTP","","",null,null],[17,"AF_COIP","","",null,null],[17,"AF_CNT","","",null,null],[17,"pseudo_AF_RTIP","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_SIP","","",null,null],[17,"pseudo_AF_PIP","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_E164","","",null,null],[17,"pseudo_AF_KEY","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NATM","","",null,null],[17,"AF_SYSTEM","","",null,null],[17,"AF_NETBIOS","","",null,null],[17,"AF_PPP","","",null,null],[17,"pseudo_AF_HDRCMPLT","","",null,null],[17,"AF_SYS_CONTROL","","",null,null],[17,"SYSPROTO_EVENT","","",null,null],[17,"SYSPROTO_CONTROL","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_IMPLINK","","",null,null],[17,"PF_PUP","","",null,null],[17,"PF_CHAOS","","",null,null],[17,"PF_NS","","",null,null],[17,"PF_ISO","","",null,null],[17,"PF_OSI","","",null,null],[17,"PF_ECMA","","",null,null],[17,"PF_DATAKIT","","",null,null],[17,"PF_CCITT","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_DLI","","",null,null],[17,"PF_LAT","","",null,null],[17,"PF_HYLINK","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_LINK","","",null,null],[17,"PF_XTP","","",null,null],[17,"PF_COIP","","",null,null],[17,"PF_CNT","","",null,null],[17,"PF_SIP","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_RTIP","","",null,null],[17,"PF_PIP","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_NATM","","",null,null],[17,"PF_SYSTEM","","",null,null],[17,"PF_NETBIOS","","",null,null],[17,"PF_PPP","","",null,null],[17,"NET_RT_DUMP","","",null,null],[17,"NET_RT_FLAGS","","",null,null],[17,"NET_RT_IFLIST","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"SOCK_MAXADDRLEN","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_RECVDSTADDR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_RECVIF","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"TCP_NOPUSH","","",null,null],[17,"TCP_NOOPT","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_LOCAL","","",null,null],[17,"LOCAL_PEERCRED","","",null,null],[17,"LOCAL_PEERPID","","",null,null],[17,"LOCAL_PEEREPID","","",null,null],[17,"LOCAL_PEERUUID","","",null,null],[17,"LOCAL_PEEREUUID","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TIMESTAMP_MONOTONIC","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_LABEL","","",null,null],[17,"SO_PEERLABEL","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_REUSESHAREUID","","",null,null],[17,"SO_NOTIFYCONFLICT","","",null,null],[17,"SO_RANDOMPORT","","",null,null],[17,"SO_NP_EXTENSIONS","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOF","","",null,null],[17,"MSG_FLUSH","","",null,null],[17,"MSG_HOLD","","",null,null],[17,"MSG_SEND","","",null,null],[17,"MSG_HAVEMORE","","",null,null],[17,"MSG_RCVMORE","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SCM_CREDS","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_OACTIVE","","",null,null],[17,"IFF_SIMPLEX","","",null,null],[17,"IFF_LINK0","","",null,null],[17,"IFF_LINK1","","",null,null],[17,"IFF_LINK2","","",null,null],[17,"IFF_ALTPHYS","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"NLDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"NI_MAXSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NUMERICSCOPE","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RENAME_SWAP","","",null,null],[17,"RENAME_EXCL","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"AI_MASK","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_V4MAPPED_CFG","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_DEFAULT","","",null,null],[17,"AI_UNUSABLE","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"WEXITED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"XATTR_NOFOLLOW","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"XATTR_NOSECURITY","","",null,null],[17,"XATTR_NODEFAULT","","",null,null],[17,"XATTR_SHOWCOMPRESSION","","",null,null],[17,"NET_RT_IFLIST2","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_DONE","","",null,null],[17,"RTF_DELCLONE","","",null,null],[17,"RTF_CLONING","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_LLINFO","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_BLACKHOLE","","",null,null],[17,"RTF_NOIFREF","","",null,null],[17,"RTF_PROTO2","","",null,null],[17,"RTF_PROTO1","","",null,null],[17,"RTF_PRCLONING","","",null,null],[17,"RTF_WASCLONED","","",null,null],[17,"RTF_PROTO3","","",null,null],[17,"RTF_PINNED","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_IFSCOPE","","",null,null],[17,"RTF_CONDEMNED","","",null,null],[17,"RTF_IFREF","","",null,null],[17,"RTF_PROXY","","",null,null],[17,"RTF_ROUTER","","",null,null],[17,"RTM_VERSION","","",null,null],[17,"RTM_ADD","","",null,null],[17,"RTM_DELETE","","",null,null],[17,"RTM_CHANGE","","",null,null],[17,"RTM_GET","","",null,null],[17,"RTM_LOSING","","",null,null],[17,"RTM_REDIRECT","","",null,null],[17,"RTM_MISS","","",null,null],[17,"RTM_LOCK","","",null,null],[17,"RTM_OLDADD","","",null,null],[17,"RTM_OLDDEL","","",null,null],[17,"RTM_RESOLVE","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_IFINFO","","",null,null],[17,"RTM_NEWMADDR","","",null,null],[17,"RTM_DELMADDR","","",null,null],[17,"RTM_IFINFO2","","",null,null],[17,"RTM_NEWMADDR2","","",null,null],[17,"RTM_GET2","","",null,null],[17,"RTV_MTU","","",null,null],[17,"RTV_HOPCOUNT","","",null,null],[17,"RTV_EXPIRE","","",null,null],[17,"RTV_RPIPE","","",null,null],[17,"RTV_SPIPE","","",null,null],[17,"RTV_SSTHRESH","","",null,null],[17,"RTV_RTT","","",null,null],[17,"RTV_RTTVAR","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_NETMASK","","",null,null],[17,"RTA_GENMASK","","",null,null],[17,"RTA_IFP","","",null,null],[17,"RTA_IFA","","",null,null],[17,"RTA_AUTHOR","","",null,null],[17,"RTA_BRD","","",null,null],[17,"RTAX_DST","","",null,null],[17,"RTAX_GATEWAY","","",null,null],[17,"RTAX_NETMASK","","",null,null],[17,"RTAX_GENMASK","","",null,null],[17,"RTAX_IFP","","",null,null],[17,"RTAX_IFA","","",null,null],[17,"RTAX_AUTHOR","","",null,null],[17,"RTAX_BRD","","",null,null],[17,"RTAX_MAX","","",null,null],[17,"KERN_PROCARGS2","","",null,null],[17,"PROC_PIDTASKALLINFO","","",null,null],[17,"PROC_PIDTASKINFO","","",null,null],[17,"PROC_PIDTHREADINFO","","",null,null],[17,"MAXCOMLEN","","",null,null],[17,"MAXTHREADNAMESIZE","","",null,null],[17,"XUCRED_VERSION","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"MH_MAGIC","","",null,null],[17,"MH_MAGIC_64","","",null,null],[17,"UTUN_OPT_FLAGS","","",null,null],[17,"UTUN_OPT_IFNAME","","",null,null],[17,"DLT_NULL","","",null,null],[17,"DLT_EN10MB","","",null,null],[17,"DLT_EN3MB","","",null,null],[17,"DLT_AX25","","",null,null],[17,"DLT_PRONET","","",null,null],[17,"DLT_CHAOS","","",null,null],[17,"DLT_IEEE802","","",null,null],[17,"DLT_ARCNET","","",null,null],[17,"DLT_SLIP","","",null,null],[17,"DLT_PPP","","",null,null],[17,"DLT_FDDI","","",null,null],[17,"DLT_ATM_RFC1483","","",null,null],[17,"DLT_RAW","","",null,null],[17,"DLT_LOOP","","",null,null],[17,"BPF_ALIGNMENT","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETEXEC","","",null,null],[17,"POSIX_SPAWN_START_SUSPENDED","","",null,null],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_R","","",null,null],[17,"IPC_W","","",null,null],[17,"IPC_M","","",null,null],[17,"SEM_UNDO","","",null,null],[17,"GETNCNT","","",null,null],[17,"GETPID","","",null,null],[17,"GETVAL","","",null,null],[17,"GETALL","","",null,null],[17,"GETZCNT","","",null,null],[17,"SETVAL","","",null,null],[17,"SETALL","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHMLBA","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"UF_SETTABLE","","",null,null],[17,"UF_NODUMP","","",null,null],[17,"UF_IMMUTABLE","","",null,null],[17,"UF_APPEND","","",null,null],[17,"UF_OPAQUE","","",null,null],[17,"UF_COMPRESSED","","",null,null],[17,"UF_TRACKED","","",null,null],[17,"SF_SETTABLE","","",null,null],[17,"SF_ARCHIVED","","",null,null],[17,"SF_IMMUTABLE","","",null,null],[17,"SF_APPEND","","",null,null],[17,"UF_HIDDEN","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null],[17,"BIOCSETF","","",null,null],[17,"BIOCSRTIMEOUT","","",null,null],[17,"BIOCGRTIMEOUT","","",null,null],[17,"BIOCSETFNR","","",null,null],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",92,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",93,[[],["file",4]]],[11,"clone","","",94,[[],["fpos_t",4]]],[11,"clone","","",17,[[],["sockaddr",3]]],[11,"clone","","",18,[[],["sockaddr_in6",3]]],[11,"clone","","",19,[[],["passwd",3]]],[11,"clone","","",20,[[],["ifaddrs",3]]],[11,"clone","","",82,[[],["fd_set",3]]],[11,"clone","","",21,[[],["tm",3]]],[11,"clone","","",22,[[],["msghdr",3]]],[11,"clone","","",23,[[],["cmsghdr",3]]],[11,"clone","","",83,[[],["fsid_t",3]]],[11,"clone","","",24,[[],["if_nameindex",3]]],[11,"clone","","",25,[[],["sockaddr_un",3]]],[11,"clone","","",26,[[],["utsname",3]]],[11,"clone","","",95,[[],["timezone",4]]],[11,"clone","","",27,[[],["ip_mreq",3]]],[11,"clone","","",28,[[],["aiocb",3]]],[11,"clone","","",29,[[],["glob_t",3]]],[11,"clone","","",30,[[],["addrinfo",3]]],[11,"clone","","",31,[[],["mach_timebase_info",3]]],[11,"clone","","",32,[[],["stat",3]]],[11,"clone","","",84,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",85,[[],["pthread_condattr_t",3]]],[11,"clone","","",86,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",33,[[],["siginfo_t",3]]],[11,"clone","","",34,[[],["sigaction",3]]],[11,"clone","","",35,[[],["stack_t",3]]],[11,"clone","","",36,[[],["fstore_t",3]]],[11,"clone","","",37,[[],["radvisory",3]]],[11,"clone","","",38,[[],["statvfs",3]]],[11,"clone","","",39,[[],["dl_info",3]]],[11,"clone","","",40,[[],["sockaddr_in",3]]],[11,"clone","","",41,[[],["kevent64_s",3]]],[11,"clone","","",42,[[],["dqblk",3]]],[11,"clone","","",43,[[],["if_msghdr",3]]],[11,"clone","","",44,[[],["termios",3]]],[11,"clone","","",45,[[],["flock",3]]],[11,"clone","","",46,[[],["sf_hdtr",3]]],[11,"clone","","",47,[[],["lconv",3]]],[11,"clone","","",48,[[],["proc_taskinfo",3]]],[11,"clone","","",49,[[],["proc_bsdinfo",3]]],[11,"clone","","",50,[[],["proc_taskallinfo",3]]],[11,"clone","","",51,[[],["xsw_usage",3]]],[11,"clone","","",52,[[],["xucred",3]]],[11,"clone","","",53,[[],["mach_header",3]]],[11,"clone","","",54,[[],["mach_header_64",3]]],[11,"clone","","",55,[[],["segment_command",3]]],[11,"clone","","",56,[[],["segment_command_64",3]]],[11,"clone","","",57,[[],["load_command",3]]],[11,"clone","","",58,[[],["sockaddr_dl",3]]],[11,"clone","","",59,[[],["sockaddr_inarp",3]]],[11,"clone","","",60,[[],["sockaddr_ctl",3]]],[11,"clone","","",61,[[],["in_pktinfo",3]]],[11,"clone","","",62,[[],["in6_pktinfo",3]]],[11,"clone","","",63,[[],["ipc_perm",3]]],[11,"clone","","",64,[[],["sembuf",3]]],[11,"clone","","",65,[[],["arphdr",3]]],[11,"clone","","",66,[[],["in_addr",3]]],[11,"clone","","",67,[[],["kevent",3]]],[11,"clone","","",68,[[],["semid_ds",3]]],[11,"clone","","",69,[[],["shmid_ds",3]]],[11,"clone","","",70,[[],["proc_threadinfo",3]]],[11,"clone","","",71,[[],["statfs",3]]],[11,"clone","","",72,[[],["dirent",3]]],[11,"clone","","",87,[[],["pthread_rwlock_t",3]]],[11,"clone","","",88,[[],["pthread_mutex_t",3]]],[11,"clone","","",89,[[],["pthread_cond_t",3]]],[11,"clone","","",73,[[],["sockaddr_storage",3]]],[11,"clone","","",74,[[],["utmpx",3]]],[11,"clone","","",75,[[],["sigevent",3]]],[11,"clone","","",80,[[],["semun",19]]],[11,"clone","","",76,[[],["timeval32",3]]],[11,"clone","","",77,[[],["if_data",3]]],[11,"clone","","",78,[[],["bpf_hdr",3]]],[11,"clone","","",90,[[],["pthread_attr_t",3]]],[11,"clone","","",91,[[],["max_align_t",3]]],[11,"clone","","",79,[[],["in6_addr",3]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"sockaddr_un"],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"in6_addr"],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \\\"payload\\\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",null,null],[3,"ParseLevelError","","The type returned by `from_str` when the string doesn\'t…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",null,[[["box",3],["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger","","Sets the global logger to a `&\'static Log`.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of `set_logger`.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["metadata",3]]]],[10,"log","","Logs the `Record`.",2,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",2,[[]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[],["levelfilter",4]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[],[["level",4],["option",4]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder",3]]],[11,"args","","The message body.",3,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",3,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",3,[[],["level",4]]],[11,"target","","The name of the target of the directive.",3,[[]]],[11,"module_path","","The module path of the message.",3,[[],["option",4]]],[11,"module_path_static","","The module path of the message, if it is a `\'static` string.",3,[[],["option",4]]],[11,"file","","The source file containing the message.",3,[[],["option",4]]],[11,"file_static","","The module path of the message, if it is a `\'static` string.",3,[[],["option",4]]],[11,"line","","The line containing the message.",3,[[],["option",4]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder",3]]],[11,"args","","Set `args`.",4,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set `Metadata::level`.",4,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set `Metadata::target`",4,[[],["recordbuilder",3]]],[11,"module_path","","Set `module_path`",4,[[["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set `module_path` to a `\'static` string",4,[[["option",4]],["recordbuilder",3]]],[11,"file","","Set `file`",4,[[["option",4]],["recordbuilder",3]]],[11,"file_static","","Set `file` to a `\'static` string.",4,[[["option",4]],["recordbuilder",3]]],[11,"line","","Set `line`",4,[[["option",4]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a `Record`",4,[[],["record",3]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",5,[[],["level",4]]],[11,"target","","The name of the target of the directive.",5,[[]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder",3]]],[11,"level","","Setter for `level`.",6,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for `target`.",6,[[],["metadatabuilder",3]]],[11,"build","","Returns a `Metadata` object.",6,[[],["metadata",3]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",3,[[],["record",3]]],[11,"clone","","",5,[[],["metadata",3]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",5,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",6,[[["metadatabuilder",3]],["ordering",4]]],[11,"eq","","",0,[[["level",4]]]],[11,"eq","","",0,[[["levelfilter",4]]]],[11,"eq","","",1,[[["levelfilter",4]]]],[11,"eq","","",1,[[["level",4]]]],[11,"eq","","",5,[[["metadata",3]]]],[11,"ne","","",5,[[["metadata",3]]]],[11,"eq","","",6,[[["metadatabuilder",3]]]],[11,"ne","","",6,[[["metadatabuilder",3]]]],[11,"eq","","",8,[[["parselevelerror",3]]]],[11,"ne","","",8,[[["parselevelerror",3]]]],[11,"partial_cmp","","",0,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["level",4]]]],[11,"le","","",0,[[["level",4]]]],[11,"gt","","",0,[[["level",4]]]],[11,"ge","","",0,[[["level",4]]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["levelfilter",4]]]],[11,"le","","",0,[[["levelfilter",4]]]],[11,"gt","","",0,[[["levelfilter",4]]]],[11,"ge","","",0,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["levelfilter",4]]]],[11,"le","","",1,[[["levelfilter",4]]]],[11,"gt","","",1,[[["levelfilter",4]]]],[11,"ge","","",1,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["level",4]]]],[11,"le","","",1,[[["level",4]]]],[11,"gt","","",1,[[["level",4]]]],[11,"ge","","",1,[[["level",4]]]],[11,"partial_cmp","","",5,[[["metadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["metadata",3]]]],[11,"le","","",5,[[["metadata",3]]]],[11,"gt","","",5,[[["metadata",3]]]],[11,"ge","","",5,[[["metadata",3]]]],[11,"partial_cmp","","",6,[[["metadatabuilder",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["metadatabuilder",3]]]],[11,"le","","",6,[[["metadatabuilder",3]]]],[11,"gt","","",6,[[["metadatabuilder",3]]]],[11,"ge","","",6,[[["metadatabuilder",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"from_str","","",0,[[],[["level",4],["result",4]]]],[11,"from_str","","",1,[[],[["result",4],["levelfilter",4]]]],[11,"description","","",7,[[]]],[11,"description","","",8,[[]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"lzw":{"doc":"LZW decoder and encoderThis crates provides a `LzwEncoder`…","i":[[3,"Decoder","lzw","Decoder for a LZW compressed stream (this algorithm is…",null,null],[3,"DecoderEarlyChange","","Decoder for a LZW compressed stream using an “early…",null,null],[3,"Encoder","","LZW encoder using the algorithm of GIF files.",null,null],[3,"LsbReader","","Reads bits from a byte stream, LSB first.",null,null],[3,"LsbWriter","","Writes bits to a byte stream, LSB first.",null,null],[3,"MsbReader","","Reads bits from a byte stream, MSB first.",null,null],[3,"MsbWriter","","Writes bits to a byte stream, MSB first.",null,null],[4,"Bits","","Containes either the consumed bytes and reconstructed bits…",null,null],[13,"Some","","Consumed bytes, reconstructed bits",0,null],[13,"None","","Consumed bytes",0,null],[5,"encode","","Convenience function that reads and compresses all bytes…",null,[[],["result",6]]],[11,"new","","Creates a new LZW decoder. ",1,[[],["decoder",3]]],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",1,[[],["result",6]]],[11,"new","","Creates a new LZW decoder. ",2,[[],["decoderearlychange",3]]],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",2,[[],["result",6]]],[11,"new","","Creates a new LZW encoder.",3,[[],[["result",6],["encoder",3]]]],[11,"encode_bytes","","Compresses `bytes` and writes the result into the writer.",3,[[],["result",6]]],[11,"new","","Creates a new bit reader",4,[[],["lsbreader",3]]],[11,"new","","Creates a new bit reader",5,[[],["msbreader",3]]],[11,"new","","Creates a new bit reader",6,[[],["lsbwriter",3]]],[11,"new","","Creates a new bit reader",7,[[],["msbwriter",3]]],[8,"BitReader","","A bit reader.",null,null],[10,"read_bits","","Returns the next `n` bits.",8,[[],["bits",4]]],[8,"BitWriter","","A bit writer.",null,null],[10,"write_bits","","Writes the next `n` bits.",9,[[],["result",6]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"read_bits","","",4,[[],["bits",4]]],[11,"read_bits","","",5,[[],["bits",4]]],[11,"write_bits","","",6,[[],["result",6]]],[11,"write_bits","","",7,[[],["result",6]]],[11,"drop","","",3,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"write","","",6,[[],["result",6]]],[11,"flush","","",6,[[],["result",6]]],[11,"write","","",7,[[],["result",6]]],[11,"flush","","",7,[[],["result",6]]]],"p":[[4,"Bits"],[3,"Decoder"],[3,"DecoderEarlyChange"],[3,"Encoder"],[3,"LsbReader"],[3,"MsbReader"],[3,"LsbWriter"],[3,"MsbWriter"],[8,"BitReader"],[8,"BitWriter"]]},\
"matrixmultiply":{"doc":"General matrix multiplication for f32, f64 matrices.","i":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",null,[[]]],[5,"dgemm","","General matrix multiplication (f64)",null,[[]]]],"p":[]},\
"maybe_uninit":{"doc":"","i":[[19,"MaybeUninit","maybe_uninit","A wrapper type to construct uninitialized instances of `T`.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["maybeuninit",19]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"new","","Creates a new `MaybeUninit<T>` initialized with the given…",0,[[],["maybeuninit",19]]],[11,"uninit","","Creates a new `MaybeUninit<T>` in an uninitialized state.",0,[[],["maybeuninit",19]]],[11,"uninit_array","","Create a new array of `MaybeUninit<T>` items, in an…",0,[[]]],[11,"zeroed","","Creates a new `MaybeUninit<T>` in an uninitialized state,…",0,[[],["maybeuninit",19]]],[11,"write","","Sets the value of the `MaybeUninit<T>`. This overwrites…",0,[[]]],[11,"as_ptr","","Gets a pointer to the contained value. Reading from this…",0,[[]]],[11,"as_mut_ptr","","Gets a mutable pointer to the contained value. Reading…",0,[[]]],[11,"assume_init","","Extracts the value from the `MaybeUninit<T>` container.…",0,[[]]],[11,"assume_init_read","","Reads the value from the `MaybeUninit<T>` container. The…",0,[[]]],[11,"assume_init_drop","","Drops the contained value in place.",0,[[]]],[11,"assume_init_ref","","Gets a shared reference to the contained value.",0,[[]]],[11,"assume_init_mut","","Gets a mutable (unique) reference to the contained value.",0,[[]]],[11,"slice_assume_init_ref","","Assuming all the elements are initialized, get a slice to…",0,[[]]],[11,"slice_assume_init_mut","","Assuming all the elements are initialized, get a mutable…",0,[[]]],[11,"slice_as_ptr","","Gets a pointer to the first element of the array.",0,[[]]],[11,"slice_as_mut_ptr","","Gets a mutable pointer to the first element of the array.",0,[[]]]],"p":[[19,"MaybeUninit"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",null,null],[14,"span_of","","Produces a range instance representing the sub-slice…",null,null]],"p":[]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib…","i":[[3,"StreamResult","miniz_oxide","A structure containg the result of a call to the inflate…",null,null],[12,"bytes_consumed","","The number of bytes consumed from the input slice.",0,null],[12,"bytes_written","","The number of bytes written to the output slice.",0,null],[12,"status","","The return status of the call.",0,null],[4,"MZFlush","","A list of flush types.",null,null],[13,"None","","Don\'t force any flushing. Used when more input data is…",1,null],[13,"Partial","","Zlib partial flush. Currently treated as `Sync`.",1,null],[13,"Sync","","Finish compressing the currently buffered data, and output…",1,null],[13,"Full","","Same as `Sync`, but resets the compression dictionary so…",1,null],[13,"Finish","","Attempt to flush the remaining data and end the stream.",1,null],[13,"Block","","Not implemented.",1,null],[4,"MZStatus","","A list of miniz successful status codes.",null,null],[13,"Ok","","",2,null],[13,"StreamEnd","","",2,null],[13,"NeedDict","","",2,null],[4,"MZError","","A list of miniz failed status codes.",null,null],[13,"ErrNo","","",3,null],[13,"Stream","","",3,null],[13,"Data","","",3,null],[13,"Mem","","",3,null],[13,"Buf","","",3,null],[13,"Version","","",3,null],[13,"Param","","",3,null],[4,"DataFormat","","How compressed data is wrapped.",null,null],[13,"Zlib","","Wrapped using the zlib format.",4,null],[13,"Raw","","Raw DEFLATE.",4,null],[0,"deflate","","This module contains functionality for compression.",null,null],[4,"CompressionLevel","miniz_oxide::deflate","How much processing the compressor should do to compress…",null,null],[13,"NoCompression","","Don\'t do any compression, only output uncompressed blocks.",5,null],[13,"BestSpeed","","Fast compression. Uses a special compression routine that…",5,null],[13,"BestCompression","","Slow/high compression. Do a lot of checks to try to find…",5,null],[13,"UberCompression","","Even more checks, can be very slow.",5,null],[13,"DefaultLevel","","Default compromise between speed and compression.",5,null],[13,"DefaultCompression","","Use the default compression level.",5,null],[5,"compress_to_vec","","Compress the input data to a vector, using the specified…",null,[[],["vec",3]]],[5,"compress_to_vec_zlib","","Compress the input data to a vector, using the specified…",null,[[],["vec",3]]],[0,"core","","Streaming compression functionality.",null,null],[3,"CompressorOxide","miniz_oxide::deflate::core","Main compression struct.",null,null],[3,"CallbackFunc","","Callback function and user used in `compress_to_output`.",null,null],[12,"put_buf_func","","",6,null],[4,"CompressionStrategy","","Strategy setting for compression.",null,null],[13,"Default","","Don\'t use any of the special strategies.",7,null],[13,"Filtered","","Only use matches that are at least 5 bytes long.",7,null],[13,"HuffmanOnly","","Don\'t look for matches, only huffman encode the literals.",7,null],[13,"RLE","","Only look for matches with a distance of 1, i.e do…",7,null],[13,"Fixed","","Only use static/fixed blocks. (Blocks using the default…",7,null],[4,"TDEFLFlush","","A list of deflate flush types.",null,null],[13,"None","","Compress as much as there is space for, and then return…",8,null],[13,"Sync","","Try to flush the current data and output an empty raw block.",8,null],[13,"Full","","Same as sync, but reset the dictionary so that the…",8,null],[13,"Finish","","Try to flush everything and end the stream.",8,null],[4,"TDEFLStatus","","Return status codes.",null,null],[13,"BadParam","","",9,null],[13,"PutBufFailed","","",9,null],[13,"Okay","","",9,null],[13,"Done","","",9,null],[5,"compress","","Main compression function. Tries to compress as much as…",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"compress_to_output","","Main compression function. Callbacks output.",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"create_comp_flags_from_zip_params","","Create a set of compression flags using parameters used by…",null,[[]]],[0,"deflate_flags","","",null,null],[17,"TDEFL_WRITE_ZLIB_HEADER","miniz_oxide::deflate::core::deflate_flags","Whether to use a zlib wrapper.",null,null],[17,"TDEFL_COMPUTE_ADLER32","","Should we compute the adler32 checksum.",null,null],[17,"TDEFL_GREEDY_PARSING_FLAG","","Should we use greedy parsing (as opposed to lazy parsing…",null,null],[17,"TDEFL_NONDETERMINISTIC_PARSING_FLAG","","Used in miniz to skip zero-initializing hash and dict. We…",null,null],[17,"TDEFL_RLE_MATCHES","","Only look for matches with a distance of 0.",null,null],[17,"TDEFL_FILTER_MATCHES","","Only use matches that are at least 6 bytes long.",null,null],[17,"TDEFL_FORCE_ALL_STATIC_BLOCKS","","Force the compressor to only output static blocks. (Blocks…",null,null],[17,"TDEFL_FORCE_ALL_RAW_BLOCKS","","Force the compressor to only output raw/uncompressed blocks.",null,null],[11,"new","miniz_oxide::deflate::core","",8,[[],[["mzerror",4],["result",4]]]],[11,"new","","Create a new `CompressorOxide` with the given flags.",10,[[]]],[11,"adler32","","Get the adler32 checksum of the currently encoded data.",10,[[]]],[11,"prev_return_status","","Get the return status of the previous `compress` call with…",10,[[],["tdeflstatus",4]]],[11,"flags","","Get the raw compressor flags.",10,[[]]],[11,"data_format","","Returns whether the compressor is wrapping the data in a…",10,[[],["dataformat",4]]],[11,"reset","","Reset the state of the compressor, keeping the same…",10,[[]]],[11,"set_compression_level","","Set the compression level of the compressor.",10,[[["compressionlevel",4]]]],[11,"set_compression_level_raw","","Set the compression level of the compressor using an…",10,[[]]],[11,"set_format_and_level","","Update the compression settings of the compressor.",10,[[["dataformat",4]]]],[0,"stream","miniz_oxide::deflate","Extra streaming compression functionality.",null,null],[5,"deflate","miniz_oxide::deflate::stream","Try to compress from input to output with the given…",null,[[["compressoroxide",3],["mzflush",4]],["streamresult",3]]],[0,"inflate","miniz_oxide","This module contains functionality for decompression.",null,null],[4,"TINFLStatus","miniz_oxide::inflate","Return status codes.",null,null],[13,"FailedCannotMakeProgress","","More input data was expected, but the caller indicated…",11,null],[13,"BadParam","","One or more of the input parameters were invalid.",11,null],[13,"Adler32Mismatch","","The decompression went fine, but the adler32 checksum did…",11,null],[13,"Failed","","Failed to decompress due to invalid data.",11,null],[13,"Done","","Finished decomression without issues.",11,null],[13,"NeedsMoreInput","","The decompressor needs more input data to continue…",11,null],[13,"HasMoreOutput","","There is still pending data that didn\'t fit in the output…",11,null],[5,"decompress_to_vec","","Decompress the deflate-encoded data in `input` to a vector.",null,[[],[["result",4],["vec",3],["tinflstatus",4]]]],[5,"decompress_to_vec_zlib","","Decompress the deflate-encoded data (with a zlib wrapper)…",null,[[],[["result",4],["vec",3],["tinflstatus",4]]]],[0,"core","","Streaming decompression functionality.",null,null],[3,"DecompressorOxide","miniz_oxide::inflate::core","Main decompression struct.",null,null],[5,"decompress","","Main decompression function. Keeps decompressing data from…",null,[[["decompressoroxide",3],["cursor",3]]]],[0,"inflate_flags","","",null,null],[17,"TINFL_FLAG_PARSE_ZLIB_HEADER","miniz_oxide::inflate::core::inflate_flags","Should we try to parse a zlib header?",null,null],[17,"TINFL_FLAG_HAS_MORE_INPUT","","There is more input that hasn\'t been given to the…",null,null],[17,"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","","The output buffer should not wrap around.",null,null],[17,"TINFL_FLAG_COMPUTE_ADLER32","","Should we calculate the adler32 checksum of the output data?",null,null],[17,"TINFL_LZ_DICT_SIZE","miniz_oxide::inflate::core","",null,null],[11,"new","","Create a new tinfl_decompressor with all fields set to 0.",12,[[],["decompressoroxide",3]]],[11,"init","","Set the current state to `Start`.",12,[[]]],[11,"adler32","","Returns the adler32 checksum of the currently decompressed…",12,[[],["option",4]]],[0,"stream","miniz_oxide::inflate","Extra streaming decompression functionality.",null,null],[3,"InflateState","miniz_oxide::inflate::stream","A struct that compbines a decompressor with extra data for…",null,null],[5,"inflate","","Try to decompress from `input` to `output` with the given…",null,[[["inflatestate",3],["mzflush",4]],["streamresult",3]]],[11,"new","","Create a new state.",13,[[["dataformat",4]],["inflatestate",3]]],[11,"new_boxed","","Create a new state on the heap.",13,[[["dataformat",4]],[["box",3],["inflatestate",3]]]],[11,"decompressor","","Access the innner decompressor.",13,[[],["decompressoroxide",3]]],[11,"last_status","","Return the status of the last call to `inflate` with this…",13,[[],["tinflstatus",4]]],[11,"new_boxed_with_window_bits","","Create a new state using miniz/zlib style window bits…",13,[[],[["box",3],["inflatestate",3]]]],[11,"reset","","Reset the decompressor without re-allocating memory, using…",13,[[["dataformat",4]]]],[11,"from_i32","miniz_oxide::inflate","",11,[[],[["tinflstatus",4],["option",4]]]],[6,"MZResult","miniz_oxide","`Result` alias for all miniz status codes both successful…",null,null],[11,"new","","Create an MZFlush value from an integer value.",1,[[],[["mzerror",4],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","miniz_oxide::deflate","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","miniz_oxide::deflate::core","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate::core","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate::stream","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","miniz_oxide::deflate::core","",8,[[["mzflush",4]]]],[11,"from","miniz_oxide","",14,[[["streamresult",3]]]],[11,"from","","",14,[[["streamresult",3]]]],[11,"clone","miniz_oxide::deflate::core","",7,[[],["compressionstrategy",4]]],[11,"clone","","",8,[[],["tdeflflush",4]]],[11,"clone","","",9,[[],["tdeflstatus",4]]],[11,"clone","miniz_oxide::deflate","",5,[[],["compressionlevel",4]]],[11,"clone","miniz_oxide::inflate","",11,[[],["tinflstatus",4]]],[11,"clone","miniz_oxide","",1,[[],["mzflush",4]]],[11,"clone","","",2,[[],["mzstatus",4]]],[11,"clone","","",3,[[],["mzerror",4]]],[11,"clone","","",4,[[],["dataformat",4]]],[11,"clone","","",0,[[],["streamresult",3]]],[11,"default","miniz_oxide::deflate::core","Initialize the compressor with a level of 4, zlib wrapper…",10,[[]]],[11,"default","miniz_oxide::inflate::core","Create a new tinfl_decompressor with all fields set to 0.",12,[[]]],[11,"default","miniz_oxide::inflate::stream","",13,[[]]],[11,"eq","miniz_oxide::deflate::core","",7,[[["compressionstrategy",4]]]],[11,"eq","","",8,[[["tdeflflush",4]]]],[11,"eq","","",9,[[["tdeflstatus",4]]]],[11,"eq","miniz_oxide::deflate","",5,[[["compressionlevel",4]]]],[11,"eq","miniz_oxide::inflate","",11,[[["tinflstatus",4]]]],[11,"eq","miniz_oxide","",1,[[["mzflush",4]]]],[11,"eq","","",2,[[["mzstatus",4]]]],[11,"eq","","",3,[[["mzerror",4]]]],[11,"eq","","",4,[[["dataformat",4]]]],[11,"eq","","",0,[[["streamresult",3]]]],[11,"ne","","",0,[[["streamresult",3]]]],[11,"fmt","miniz_oxide::deflate::core","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::deflate","",5,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::inflate","",11,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","miniz_oxide::deflate::core","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","miniz_oxide::deflate","",5,[[]]],[11,"hash","miniz_oxide::inflate","",11,[[]]],[11,"hash","miniz_oxide","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]]],"p":[[3,"StreamResult"],[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[4,"CompressionLevel"],[3,"CallbackFunc"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[3,"CompressorOxide"],[4,"TINFLStatus"],[3,"DecompressorOxide"],[3,"InflateState"],[6,"MZResult"]]},\
"mowl":{"doc":"Minimal logger with color support","i":[[3,"Logger","mowl","The logging structure",null,null],[5,"init_with_level","","Initializes the global logger with a specific…",null,[[["levelfilter",4]],[["error",3],["result",4]]]],[5,"init_with_level_and_without_colors","","Initializes the global logger with a specific…",null,[[["levelfilter",4]],[["error",3],["result",4]]]],[5,"init","","Initializes the global logger with `max_log_level` set to…",null,[[],[["error",3],["result",4]]]],[11,"disable_colors","","Disable coloring output",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"enabled","","",0,[[["metadata",3]]]],[11,"log","","",0,[[["record",3]]]],[11,"flush","","",0,[[]]]],"p":[[3,"Logger"]]},\
"nano_leb128":{"doc":"nano-leb128Little endian base 128 variable-length code…","i":[[3,"SLEB128","nano_leb128","A value that can be (de)serialized using signed LEB128…",null,null],[3,"ULEB128","","A value that can be (de)serialized using unsigned LEB128…",null,null],[4,"LEB128DecodeError","","Errors that can occur when decoding LEB128 compressed…",null,null],[13,"BufferOverflow","","More bytes required than are available to complete the…",0,null],[13,"IntegerOverflow","","The compressed value represents a larger number than can…",0,null],[4,"LEB128EncodeError","","Errors that can occur when encoding values using LEB128…",null,null],[13,"BufferOverflow","","More bytes required than are available to complete the…",1,null],[11,"read_from","","Attempts to read a signed LEB128 compressed value from a…",2,[[],[["result",4],["leb128decodeerror",4]]]],[11,"write_into","","Attempts to write a value into a buffer using signed…",2,[[],[["result",4],["leb128encodeerror",4]]]],[11,"read_from","","Attempts to read an unsigned LEB128 compressed value from…",3,[[],[["result",4],["leb128decodeerror",4]]]],[11,"write_into","","Attempts to write a value into a buffer using unsigned…",3,[[],[["result",4],["leb128encodeerror",4]]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"from","","",3,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[["sleb128",3]]]],[11,"ne","","",2,[[["sleb128",3]]]],[11,"eq","","",3,[[["uleb128",3]]]],[11,"ne","","",3,[[["uleb128",3]]]],[11,"eq","","",0,[[["leb128decodeerror",4]]]],[11,"eq","","",1,[[["leb128encodeerror",4]]]],[11,"clone","","",2,[[],["sleb128",3]]],[11,"clone","","",3,[[],["uleb128",3]]],[11,"clone","","",0,[[],["leb128decodeerror",4]]],[11,"clone","","",1,[[],["leb128encodeerror",4]]]],"p":[[4,"LEB128DecodeError"],[4,"LEB128EncodeError"],[3,"SLEB128"],[3,"ULEB128"]]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","i":[[3,"BigInt","num","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"Complex","","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[]]],[11,"div_ceil","","Ceiled integer division.",1,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[]]],[10,"is_even","","Returns `true` if the number is even.",1,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[]]],[10,"infinity","","Returns the infinite value.",2,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[]]],[10,"neg_zero","","Returns `-0.0`.",2,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[]]],[10,"trunc","","Return the integer part of a number.",2,[[]]],[10,"fract","","Returns the fractional part of a number.",2,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[]]],[10,"powi","","Raise a number to an integer power.",2,[[]]],[10,"powf","","Raise a number to a floating point power.",2,[[]]],[10,"sqrt","","Take the square root of a number.",2,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[]]],[10,"exp2","","Returns `2^(self)`.",2,[[]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[]]],[11,"to_degrees","","Converts radians to degrees.",2,[[]]],[11,"to_radians","","Converts degrees to radians.",2,[[]]],[10,"max","","Returns the maximum of the two numbers.",2,[[]]],[10,"min","","Returns the minimum of the two numbers.",2,[[]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[]]],[10,"cbrt","","Take the cubic root of a number.",2,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[]]],[10,"sinh","","Hyperbolic sine function.",2,[[]]],[10,"cosh","","Hyperbolic cosine function.",2,[[]]],[10,"tanh","","Hyperbolic tangent function.",2,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[5,"cast","num","Cast from one machine scalar to another.",null,[[],["option",4]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"pow","","",null,null],[8,"Pow","num::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"Num","","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",13,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",13,[[],["result",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",15,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",15,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",15,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",15,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",15,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",15,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[]]],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[]]],[10,"signum","","Returns the sign of the number.",17,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[],["option",4]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",18,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[]]],[0,"bigint","","",null,null],[3,"ParseBigIntError","num::bigint","",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",19,[[],[["biguint",3],["option",4]]]],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",20,null],[13,"NoSign","","",20,null],[13,"Plus","","",20,null],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`. This…",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",21,[[],[["bigint",3],["option",4]]]],[0,"complex","num","",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[3,"ParseComplexError","","",null,null],[0,"integer","num","",null,null],[8,"Integer","num::integer","",null,null],[10,"div_floor","","Floored integer division.",1,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[]]],[11,"div_ceil","","Ceiled integer division.",1,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[]]],[10,"is_even","","Returns `true` if the number is even.",1,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",22,null],[12,"x","","",22,null],[12,"y","","",22,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[]]],[5,"div_floor","","Floored integer division",null,[[]]],[5,"mod_floor","","Floored integer modulus",null,[[]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[]]],[5,"div_ceil","","Ceiled integer division",null,[[]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"binomial","","Calculate the binomial coefficient.",null,[[]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[]]],[8,"Roots","","Provides methods to compute an integer\'s square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",23,[[]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",23,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",23,[[]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[]]],[0,"iter","num","",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[0,"traits","num","",null,null],[0,"bounds","num::traits","",null,null],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[]]],[0,"cast","num::traits","",null,null],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[0,"float","num::traits","",null,null],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",24,[[]]],[10,"neg_infinity","","Returns negative infinity.",24,[[]]],[10,"nan","","Returns NaN.",24,[[]]],[10,"neg_zero","","Returns `-0.0`.",24,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",24,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",24,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",24,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",24,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",24,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",24,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",24,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",24,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",24,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",24,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",24,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",24,[[]]],[11,"trunc","","Return the integer part of a number.",24,[[]]],[11,"fract","","Returns the fractional part of a number.",24,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",24,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",24,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",24,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",24,[[]]],[11,"min","","Returns the minimum of the two numbers.",24,[[]]],[11,"max","","Returns the maximum of the two numbers.",24,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",24,[[]]],[11,"powi","","Raise a number to an integer power.",24,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",24,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",24,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",24,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[]]],[10,"infinity","","Returns the infinite value.",2,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[]]],[10,"neg_zero","","Returns `-0.0`.",2,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[]]],[10,"trunc","","Return the integer part of a number.",2,[[]]],[10,"fract","","Returns the fractional part of a number.",2,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[]]],[10,"powi","","Raise a number to an integer power.",2,[[]]],[10,"powf","","Raise a number to a floating point power.",2,[[]]],[10,"sqrt","","Take the square root of a number.",2,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[]]],[10,"exp2","","Returns `2^(self)`.",2,[[]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[]]],[11,"to_degrees","","Converts radians to degrees.",2,[[]]],[11,"to_radians","","Converts degrees to radians.",2,[[]]],[10,"max","","Returns the maximum of the two numbers.",2,[[]]],[10,"min","","Returns the minimum of the two numbers.",2,[[]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[]]],[10,"cbrt","","Take the cubic root of a number.",2,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[]]],[10,"sinh","","Hyperbolic sine function.",2,[[]]],[10,"cosh","","Hyperbolic cosine function.",2,[[]]],[10,"tanh","","Hyperbolic tangent function.",2,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",25,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",25,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",25,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",25,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",25,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",25,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",25,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",25,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",25,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",25,[[]]],[10,"LN_10","","Return `ln(10.0)`.",25,[[]]],[10,"LN_2","","Return `ln(2.0)`.",25,[[]]],[10,"LOG10_E","","Return `log10(e)`.",25,[[]]],[10,"LOG2_E","","Return `log2(e)`.",25,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",25,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",25,[[]]],[11,"TAU","","Return the full circle constant `τ`.",25,[[]]],[0,"identities","num::traits","",null,null],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",18,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"int","num::traits","",null,null],[8,"PrimInt","num::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",15,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",15,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",15,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",15,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",15,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",15,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[]]],[0,"ops","num::traits","",null,null],[0,"checked","num::traits::ops","",null,null],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",26,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",27,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",28,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",29,[[],["option",4]]],[0,"inv","num::traits::ops","",null,null],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"inv","","Returns the multiplicative inverse of `self`.",30,[[]]],[0,"mul_add","num::traits::ops","",null,null],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",31,null],[10,"mul_add","","Performs the fused multiply-add operation.",31,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",32,[[]]],[0,"saturating","num::traits::ops","",null,null],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[]]],[0,"wrapping","num::traits::ops","",null,null],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",33,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",34,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",35,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",36,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",37,[[]]],[0,"pow","num::traits","",null,null],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[0,"real","num::traits","",null,null],[8,"Real","num::traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",38,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",38,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",38,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",38,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",38,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",38,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",38,[[]]],[10,"trunc","","Return the integer part of a number.",38,[[]]],[10,"fract","","Returns the fractional part of a number.",38,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",38,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",38,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",38,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",38,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",38,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",38,[[]]],[10,"powi","","Raise a number to an integer power.",38,[[]]],[10,"powf","","Raise a number to a real number power.",38,[[]]],[10,"sqrt","","Take the square root of a number.",38,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",38,[[]]],[10,"exp2","","Returns `2^(self)`.",38,[[]]],[10,"ln","","Returns the natural logarithm of the number.",38,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",38,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",38,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",38,[[]]],[10,"to_degrees","","Converts radians to degrees.",38,[[]]],[10,"to_radians","","Converts degrees to radians.",38,[[]]],[10,"max","","Returns the maximum of the two numbers.",38,[[]]],[10,"min","","Returns the minimum of the two numbers.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"cbrt","","Take the cubic root of a number.",38,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",38,[[]]],[10,"sin","","Computes the sine of a number (in radians).",38,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",38,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",38,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",38,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",38,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",38,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",38,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",38,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",38,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",38,[[]]],[10,"sinh","","Hyperbolic sine function.",38,[[]]],[10,"cosh","","Hyperbolic cosine function.",38,[[]]],[10,"tanh","","Hyperbolic tangent function.",38,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",38,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",38,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",38,[[]]],[0,"sign","num::traits","",null,null],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[]]],[10,"signum","","Returns the sign of the number.",17,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num::traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",13,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",13,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",39,null],[13,"Invalid","","",39,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",40,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[]]],[10,"infinity","","Returns the infinite value.",2,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[]]],[10,"neg_zero","","Returns `-0.0`.",2,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[]]],[10,"trunc","","Return the integer part of a number.",2,[[]]],[10,"fract","","Returns the fractional part of a number.",2,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[]]],[10,"powi","","Raise a number to an integer power.",2,[[]]],[10,"powf","","Raise a number to a floating point power.",2,[[]]],[10,"sqrt","","Take the square root of a number.",2,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[]]],[10,"exp2","","Returns `2^(self)`.",2,[[]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[]]],[11,"to_degrees","","Converts radians to degrees.",2,[[]]],[11,"to_radians","","Converts degrees to radians.",2,[[]]],[10,"max","","Returns the maximum of the two numbers.",2,[[]]],[10,"min","","Returns the minimum of the two numbers.",2,[[]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[]]],[10,"cbrt","","Take the cubic root of a number.",2,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[]]],[10,"sinh","","Hyperbolic sine function.",2,[[]]],[10,"cosh","","Hyperbolic cosine function.",2,[[]]],[10,"tanh","","Hyperbolic tangent function.",2,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",25,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",25,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",25,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",25,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",25,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",25,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",25,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",25,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",25,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",25,[[]]],[10,"LN_10","","Return `ln(10.0)`.",25,[[]]],[10,"LN_2","","Return `ln(2.0)`.",25,[[]]],[10,"LOG10_E","","Return `log10(e)`.",25,[[]]],[10,"LOG2_E","","Return `log2(e)`.",25,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",25,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",25,[[]]],[11,"TAU","","Return the full circle constant `τ`.",25,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[],["option",4]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",18,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",15,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",15,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",15,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",15,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",15,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",15,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",27,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",26,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",28,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",29,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"inv","","Returns the multiplicative inverse of `self`.",30,[[]]],[8,"MulAdd","","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",31,null],[10,"mul_add","","Performs the fused multiply-add operation.",31,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",32,[[]]],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",33,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",35,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",36,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",37,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",34,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[]]],[10,"signum","","Returns the sign of the number.",17,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"rational","num","",null,null],[3,"Ratio","num::rational","Represents the ratio between two numbers.",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[3,"ParseRatioError","","",null,null],[11,"from","num::bigint","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_string","","",41,[[],["string",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_string","","",42,[[],["string",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"from","num::complex","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","num::bigint","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_string","","",43,[[],["string",3]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","num::complex","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"to_string","","",44,[[],["string",3]]],[11,"from","num::integer","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"into_iter","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","num::iter","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"into_iter","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"into_iter","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"into_iter","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"into_iter","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"from","num::traits","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_string","","",40,[[],["string",3]]],[11,"from","num::rational","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_string","","",50,[[],["string",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_string","","",51,[[],["string",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"eq","num::bigint","",20,[[["sign",4]]]],[11,"eq","","",41,[[["bigint",3]]]],[11,"eq","","",42,[[["biguint",3]]]],[11,"eq","","",43,[[["parsebiginterror",3]]]],[11,"ne","","",43,[[["parsebiginterror",3]]]],[11,"bitxor","","",42,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",41,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",41,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",42,[[["biguint",3]],["biguint",3]]],[11,"not","","",41,[[],["bigint",3]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",43,[[],["parsebiginterror",3]]],[11,"clone","","",41,[[],["bigint",3]]],[11,"clone","","",42,[[],["biguint",3]]],[11,"clone","","",20,[[],["sign",4]]],[11,"from_str_radix","","Creates and initializes a BigInt.",41,[[],[["bigint",3],["result",4],["parsebiginterror",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",42,[[],[["biguint",3],["parsebiginterror",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"shl","","",41,[[],["bigint",3]]],[11,"shl","","",42,[[],["biguint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[["bigint",3]],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",20,[[["sign",4]],["sign",4]]],[11,"mul","","",41,[[["bigint",3]],["bigint",3]]],[11,"mul","","",42,[[["biguint",3]],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",42,[[["biguint",3]],["biguint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",42,[[],["biguint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"mul","","",41,[[],["bigint",3]]],[11,"bitand_assign","","",42,[[["biguint",3]]]],[11,"bitand_assign","","",41,[[["bigint",3]]]],[11,"bitand_assign","","",41,[[["bigint",3]]]],[11,"bitand_assign","","",42,[[["biguint",3]]]],[11,"rem_assign","","",42,[[]]],[11,"rem_assign","","",41,[[["bigint",3]]]],[11,"rem_assign","","",42,[[]]],[11,"rem_assign","","",42,[[["biguint",3]]]],[11,"rem_assign","","",42,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",42,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",42,[[["biguint",3]]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",41,[[["bigint",3]]]],[11,"rem_assign","","",42,[[]]],[11,"rem_assign","","",42,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",41,[[]]],[11,"rem_assign","","",41,[[]]],[11,"shr_assign","","",41,[[]]],[11,"shr_assign","","",42,[[]]],[11,"from_str","","",42,[[],[["biguint",3],["parsebiginterror",3],["result",4]]]],[11,"from_str","","",41,[[],[["bigint",3],["result",4],["parsebiginterror",3]]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",41,[[["bigint",3]],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[["bigint",3]],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",42,[[["biguint",3]],["biguint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",42,[[["biguint",3]],["biguint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"add","","",42,[[],["biguint",3]]],[11,"add","","",41,[[],["bigint",3]]],[11,"cmp","","",42,[[["biguint",3]],["ordering",4]]],[11,"cmp","","",41,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",20,[[["sign",4]],["ordering",4]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",42,[[]]],[11,"add_assign","","",42,[[]]],[11,"add_assign","","",42,[[]]],[11,"add_assign","","",41,[[["bigint",3]]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",42,[[]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",42,[[["biguint",3]]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",41,[[]]],[11,"add_assign","","",41,[[["bigint",3]]]],[11,"add_assign","","",42,[[]]],[11,"add_assign","","",42,[[]]],[11,"add_assign","","",42,[[["biguint",3]]]],[11,"checked_add","","",42,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_add","","",41,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"to_bigint","","",41,[[],[["bigint",3],["option",4]]]],[11,"to_bigint","","",42,[[],[["bigint",3],["option",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sum","","",42,[[],["biguint",3]]],[11,"sum","","",41,[[],["bigint",3]]],[11,"bitand","","",42,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",42,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",41,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",41,[[["bigint",3]],["bigint",3]]],[11,"shr","","",42,[[],["biguint",3]]],[11,"shr","","",41,[[],["bigint",3]]],[11,"bitxor_assign","","",42,[[["biguint",3]]]],[11,"bitxor_assign","","",41,[[["bigint",3]]]],[11,"bitxor_assign","","",41,[[["bigint",3]]]],[11,"bitxor_assign","","",42,[[["biguint",3]]]],[11,"checked_sub","","",41,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_sub","","",42,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"bitor_assign","","",41,[[["bigint",3]]]],[11,"bitor_assign","","",41,[[["bigint",3]]]],[11,"bitor_assign","","",42,[[["biguint",3]]]],[11,"bitor_assign","","",42,[[["biguint",3]]]],[11,"checked_mul","","",42,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_mul","","",41,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",42,[[["biguint",3]]]],[11,"sub_assign","","",42,[[]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",42,[[]]],[11,"sub_assign","","",42,[[["biguint",3]]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",42,[[]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",42,[[]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",42,[[]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",41,[[["bigint",3]]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",41,[[["bigint",3]]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",41,[[]]],[11,"sub_assign","","",42,[[]]],[11,"bitor","","",41,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",41,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",42,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",42,[[["biguint",3]],["biguint",3]]],[11,"hash","","",20,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",41,[[]]],[11,"div_rem","","",42,[[["biguint",3]]]],[11,"div_floor","","",42,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",42,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",42,[[["biguint",3]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",42,[[["biguint",3]],["biguint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",42,[[["biguint",3]],["biguint",3]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",42,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",42,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",42,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",42,[[]]],[11,"div_rem","","",41,[[["bigint",3]]]],[11,"div_floor","","",41,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",41,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",41,[[["bigint",3]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",41,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",41,[[["bigint",3]],["bigint",3]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",41,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",41,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",41,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",41,[[]]],[11,"one","","",42,[[],["biguint",3]]],[11,"set_one","","",42,[[]]],[11,"is_one","","",42,[[]]],[11,"one","","",41,[[],["bigint",3]]],[11,"set_one","","",41,[[]]],[11,"is_one","","",41,[[]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",42,[[["biguint",3]],["biguint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",41,[[["bigint",3]],["bigint",3]]],[11,"sub","","",42,[[["biguint",3]],["biguint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"sub","","",41,[[["bigint",3]],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",41,[[],["bigint",3]]],[11,"sub","","",42,[[],["biguint",3]]],[11,"nth_root","","",42,[[],["biguint",3]]],[11,"sqrt","","",42,[[],["biguint",3]]],[11,"cbrt","","",42,[[],["biguint",3]]],[11,"nth_root","","",41,[[],["bigint",3]]],[11,"sqrt","","",41,[[],["bigint",3]]],[11,"cbrt","","",41,[[],["bigint",3]]],[11,"zero","","",42,[[],["biguint",3]]],[11,"set_zero","","",42,[[]]],[11,"is_zero","","",42,[[]]],[11,"zero","","",41,[[],["bigint",3]]],[11,"set_zero","","",41,[[]]],[11,"is_zero","","",41,[[]]],[11,"to_biguint","","",41,[[],[["biguint",3],["option",4]]]],[11,"to_biguint","","",42,[[],[["biguint",3],["option",4]]]],[11,"from","","",42,[[],["biguint",3]]],[11,"from","","",42,[[],["biguint",3]]],[11,"from","","",42,[[],["biguint",3]]],[11,"from","","",42,[[],["biguint",3]]],[11,"from","","",41,[[["biguint",3]],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",42,[[],["biguint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",42,[[],["biguint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"from","","",41,[[],["bigint",3]]],[11,"product","","",41,[[],["bigint",3]]],[11,"product","","",42,[[],["biguint",3]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",43,[[]]],[11,"partial_cmp","","",20,[[["sign",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",42,[[["biguint",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",41,[[["bigint",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"shl_assign","","",42,[[]]],[11,"shl_assign","","",41,[[]]],[11,"checked_div","","",42,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_div","","",41,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"div_assign","","",41,[[["bigint",3]]]],[11,"div_assign","","",42,[[]]],[11,"div_assign","","",41,[[["bigint",3]]]],[11,"div_assign","","",42,[[["biguint",3]]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",42,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",42,[[["biguint",3]]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",42,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",42,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",41,[[]]],[11,"div_assign","","",42,[[]]],[11,"div_assign","","",42,[[]]],[11,"from_i64","","",42,[[],[["biguint",3],["option",4]]]],[11,"from_i128","","",42,[[],[["biguint",3],["option",4]]]],[11,"from_u64","","",42,[[],[["biguint",3],["option",4]]]],[11,"from_u128","","",42,[[],[["biguint",3],["option",4]]]],[11,"from_f64","","",42,[[],[["biguint",3],["option",4]]]],[11,"from_i64","","",41,[[],[["bigint",3],["option",4]]]],[11,"from_i128","","",41,[[],[["bigint",3],["option",4]]]],[11,"from_u64","","",41,[[],[["bigint",3],["option",4]]]],[11,"from_u128","","",41,[[],[["bigint",3],["option",4]]]],[11,"from_f64","","",41,[[],[["bigint",3],["option",4]]]],[11,"abs","","",41,[[],["bigint",3]]],[11,"abs_sub","","",41,[[["bigint",3]],["bigint",3]]],[11,"signum","","",41,[[],["bigint",3]]],[11,"is_positive","","",41,[[]]],[11,"is_negative","","",41,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",42,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",41,[[["bigint",3]]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",42,[[]]],[11,"mul_assign","","",42,[[["biguint",3]]]],[11,"mul_assign","","",41,[[["bigint",3]]]],[11,"mul_assign","","",42,[[]]],[11,"mul_assign","","",42,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",41,[[]]],[11,"mul_assign","","",42,[[["biguint",3]]]],[11,"mul_assign","","",42,[[]]],[11,"mul_assign","","",42,[[]]],[11,"default","","",42,[[],["biguint",3]]],[11,"default","","",41,[[],["bigint",3]]],[11,"div","","",42,[[["biguint",3]],["biguint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",42,[[["biguint",3]],["biguint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",41,[[["bigint",3]],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",41,[[["bigint",3]],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",42,[[],["biguint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"div","","",41,[[],["bigint",3]]],[11,"to_i64","","",41,[[],["option",4]]],[11,"to_i128","","",41,[[],["option",4]]],[11,"to_u64","","",41,[[],["option",4]]],[11,"to_u128","","",41,[[],["option",4]]],[11,"to_f32","","",41,[[],["option",4]]],[11,"to_f64","","",41,[[],["option",4]]],[11,"to_i64","","",42,[[],["option",4]]],[11,"to_i128","","",42,[[],["option",4]]],[11,"to_u64","","",42,[[],["option",4]]],[11,"to_u128","","",42,[[],["option",4]]],[11,"to_f32","","",42,[[],["option",4]]],[11,"to_f64","","",42,[[],["option",4]]],[11,"neg","","",42,[[],["biguint",3]]],[11,"neg","","Negate Sign value.",20,[[],["sign",4]]],[11,"neg","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",42,[[["biguint",3]],["biguint",3]]],[11,"rem","","",41,[[["bigint",3]],["bigint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[["bigint",3]],["bigint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",42,[[["biguint",3]],["biguint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",41,[[],["bigint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"rem","","",42,[[],["biguint",3]]],[11,"next","num::integer","",45,[[],["option",4]]],[11,"clone","","",22,[[],["extendedgcd",3]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",22,[[["extendedgcd",3]]]],[11,"ne","","",22,[[["extendedgcd",3]]]],[11,"fmt","num::traits","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","num::complex","",0,[[],["complex",3]]],[11,"from","","",0,[[],["complex",3]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],[["complex",3],["result",4]]]],[11,"to_usize","","",0,[[],["option",4]]],[11,"to_isize","","",0,[[],["option",4]]],[11,"to_u8","","",0,[[],["option",4]]],[11,"to_u16","","",0,[[],["option",4]]],[11,"to_u32","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_i8","","",0,[[],["option",4]]],[11,"to_i16","","",0,[[],["option",4]]],[11,"to_i32","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_f32","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"zero","","",0,[[],["complex",3]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",0,[[],[["option",4],["complex",3]]]],[11,"from_usize","","",0,[[],[["option",4],["complex",3]]]],[11,"from_isize","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u8","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u16","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u32","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u64","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i8","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i16","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i32","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i64","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u128","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i128","","",0,[[],[["option",4],["complex",3]]]],[11,"from_f32","","",0,[[],[["option",4],["complex",3]]]],[11,"from_f64","","",0,[[],[["option",4],["complex",3]]]],[11,"hash","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[["complex",3]]]],[11,"pow","","",0,[[["complex",3]]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["complex",3]]]],[11,"sub_assign","","",0,[[["complex",3]]]],[11,"sub_assign","","",0,[[]]],[11,"inv","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"rem","","",0,[[["complex",3]]]],[11,"description","","",44,[[]]],[11,"neg","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sum","","",0,[[],["complex",3]]],[11,"sum","","",0,[[],["complex",3]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"default","","",0,[[],["complex",3]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["complex",3]]]],[11,"mul_assign","","",0,[[["complex",3]]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[["complex",3]]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["complex",3]]]],[11,"add_assign","","",0,[[["complex",3]]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["complex",3]]]],[11,"add_assign","","",0,[[]]],[11,"one","","",0,[[],["complex",3]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"as_","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],[["complex",3],["result",4]]]],[11,"clone","","",0,[[],["complex",3]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"product","","",0,[[],["complex",3]]],[11,"product","","",0,[[],["complex",3]]],[11,"mul_add","","",0,[[["complex",3]],["complex",3]]],[11,"rem_assign","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[]]],[11,"eq","","",44,[[["parsecomplexerror",3]]]],[11,"ne","","",44,[[["parsecomplexerror",3]]]],[11,"eq","","",0,[[["complex",3]]]],[11,"ne","","",0,[[["complex",3]]]],[11,"next","num::iter","",49,[[],["option",4]]],[11,"next","","",47,[[],["option",4]]],[11,"size_hint","","",47,[[]]],[11,"next","","",46,[[],["option",4]]],[11,"size_hint","","",46,[[]]],[11,"next","","",48,[[],["option",4]]],[11,"next_back","","",46,[[],["option",4]]],[11,"next_back","","",47,[[],["option",4]]],[11,"clone","","",46,[[],["range",3]]],[11,"clone","","",48,[[],["rangestep",3]]],[11,"clone","","",47,[[],["rangeinclusive",3]]],[11,"clone","","",49,[[],["rangestepinclusive",3]]],[11,"eq","num::rational","",51,[[["parseratioerror",3]]]],[11,"ne","","",51,[[["parseratioerror",3]]]],[11,"eq","","",50,[[["ratio",3]]]],[11,"from","","",50,[[],["ratio",3]]],[11,"from","","",50,[[],["ratio",3]]],[11,"checked_mul","","",50,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"from_i64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",50,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",50,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",50,[[],[["option",4],["ratio",3]]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"pow","","",50,[[],["ratio",3]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",50,[[],[["ratio",3],["result",4],["parseratioerror",3]]]],[11,"inv","","",50,[[],["ratio",3]]],[11,"sub","","",50,[[],["ratio",3]]],[11,"sub","","",50,[[["ratio",3]],["ratio",3]]],[11,"sub","","",50,[[["ratio",3]],["ratio",3]]],[11,"sub","","",50,[[],["ratio",3]]],[11,"hash","","",50,[[]]],[11,"into","","",50,[[]]],[11,"sub_assign","","",50,[[["ratio",3]]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",50,[[["ratio",3]]]],[11,"rem","","",50,[[],["ratio",3]]],[11,"rem","","",50,[[["ratio",3]],["ratio",3]]],[11,"rem","","",50,[[["ratio",3]],["ratio",3]]],[11,"rem","","",50,[[],["ratio",3]]],[11,"checked_div","","",50,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"neg","","",50,[[],["ratio",3]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"div","","",50,[[],["ratio",3]]],[11,"div","","",50,[[["ratio",3]],["ratio",3]]],[11,"div","","",50,[[["ratio",3]],["ratio",3]]],[11,"div","","",50,[[],["ratio",3]]],[11,"one","","",50,[[],["ratio",3]]],[11,"is_one","","",50,[[]]],[11,"set_one","","",50,[[]]],[11,"cmp","","",50,[[["ratio",3]],["ordering",4]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",50,[[],[["ratio",3],["result",4],["parseratioerror",3]]]],[11,"sum","","",50,[[],["ratio",3]]],[11,"sum","","",50,[[],["ratio",3]]],[11,"add","","",50,[[["ratio",3]],["ratio",3]]],[11,"add","","",50,[[],["ratio",3]]],[11,"add","","",50,[[["ratio",3]],["ratio",3]]],[11,"add","","",50,[[],["ratio",3]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"mul_assign","","",50,[[["ratio",3]]]],[11,"mul_assign","","",50,[[["ratio",3]]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",50,[[]]],[11,"div_assign","","",50,[[["ratio",3]]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",50,[[["ratio",3]]]],[11,"checked_add","","",50,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"checked_sub","","",50,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",50,[[["ratio",3]]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",50,[[["ratio",3]]]],[11,"zero","","",50,[[],["ratio",3]]],[11,"is_zero","","",50,[[]]],[11,"set_zero","","",50,[[]]],[11,"mul","","",50,[[["ratio",3]],["ratio",3]]],[11,"mul","","",50,[[],["ratio",3]]],[11,"mul","","",50,[[],["ratio",3]]],[11,"mul","","",50,[[["ratio",3]],["ratio",3]]],[11,"clone","","",51,[[],["parseratioerror",3]]],[11,"clone","","",50,[[],["ratio",3]]],[11,"partial_cmp","","",50,[[["ratio",3]],[["ordering",4],["option",4]]]],[11,"product","","",50,[[],["ratio",3]]],[11,"product","","",50,[[],["ratio",3]]],[11,"description","","",51,[[]]],[11,"abs","","",50,[[],["ratio",3]]],[11,"abs_sub","","",50,[[["ratio",3]],["ratio",3]]],[11,"signum","","",50,[[],["ratio",3]]],[11,"is_positive","","",50,[[]]],[11,"is_negative","","",50,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",50,[[["ratio",3]]]],[11,"rem_assign","","",50,[[["ratio",3]]]],[11,"rem_assign","","",50,[[]]],[11,"new","num::bigint","Creates and initializes a BigInt.",41,[[["sign",4],["vec",3]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",41,[[["biguint",3],["sign",4]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",41,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",41,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",41,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",41,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",41,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",41,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",41,[[],[["bigint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",41,[[["sign",4]],[["bigint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",41,[[["sign",4]],[["bigint",3],["option",4]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",41,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",41,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",41,[[]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",41,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",41,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",41,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",41,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",41,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",41,[[],["sign",4]]],[11,"bits","","Determines the fewest bits necessary to express the…",41,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",41,[[],[["biguint",3],["option",4]]]],[11,"checked_add","","",41,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_sub","","",41,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_mul","","",41,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_div","","",41,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",41,[[["bigint",3]],["bigint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",41,[[],["bigint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",41,[[],["bigint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",41,[[],["bigint",3]]],[11,"new","","Creates and initializes a `BigUint`.",42,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",42,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",42,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",42,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",42,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",42,[[],[["biguint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",42,[[],[["biguint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",42,[[],[["biguint",3],["option",4]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",42,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",42,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",42,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",42,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",42,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",42,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",42,[[]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",42,[[["biguint",3]],["biguint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",42,[[],["biguint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",42,[[],["biguint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",42,[[],["biguint",3]]],[11,"new","num::complex","Create a new Complex",0,[[],["complex",3]]],[11,"i","","Returns imaginary unit",0,[[],["complex",3]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn\'t…",0,[[]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[],["complex",3]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[],["complex",3]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[],["complex",3]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[],["complex",3]]],[11,"inv","","Returns `1/self`",0,[[],["complex",3]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[],["complex",3]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the Manhattan…",0,[[]]],[11,"norm","","Calculate |self|",0,[[]]],[11,"arg","","Calculate the principal Arg of self.",0,[[]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[],["complex",3]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[],["complex",3]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[],["complex",3]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[],["complex",3]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[],["complex",3]]],[11,"powf","","Raises `self` to a floating point power.",0,[[],["complex",3]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[],["complex",3]]],[11,"powc","","Raises `self` to a complex power.",0,[[["complex",3]],["complex",3]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[],["complex",3]]],[11,"sin","","Computes the sine of `self`.",0,[[],["complex",3]]],[11,"cos","","Computes the cosine of `self`.",0,[[],["complex",3]]],[11,"tan","","Computes the tangent of `self`.",0,[[],["complex",3]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[],["complex",3]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[],["complex",3]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[],["complex",3]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[],["complex",3]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[],["complex",3]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[],["complex",3]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[],["complex",3]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[],["complex",3]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[],["complex",3]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[],["complex",3]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex",3]],["complex",3]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients…",45,[[],["iterbinomial",3]]],[11,"new_raw","num::rational","Creates a `Ratio` without checking for `denom == 0` or…",50,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",50,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",50,[[]]],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",50,[[],["ratio",3]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",50,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",50,[[]]],[11,"is_integer","","Returns true if the rational number is an integer…",50,[[]]],[11,"reduced","","Returns a reduced copy of self.",50,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",50,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",50,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",50,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",50,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",50,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division…",50,[[],["ratio",3]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",50,[[],["ratio",3]]],[11,"from_float","","Converts a float into a rational number.",50,[[],[["option",4],["ratio",3]]]],[11,"approximate_float","","",50,[[],[["ratio",3],["option",4]]]]],"p":[[3,"Complex"],[8,"Integer"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"],[8,"Bounded"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedSub"],[8,"Num"],[8,"One"],[8,"PrimInt"],[8,"Saturating"],[8,"Signed"],[8,"Zero"],[8,"ToBigUint"],[4,"Sign"],[8,"ToBigInt"],[3,"ExtendedGcd"],[8,"Roots"],[8,"FloatCore"],[8,"FloatConst"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Real"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"BigInt"],[3,"BigUint"],[3,"ParseBigIntError"],[3,"ParseComplexError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_bigint":{"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,"ParseBigIntError","num_bigint","",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[11,"new","","Creates and initializes a BigInt.",1,[[["sign",4],["vec",3]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",1,[[["sign",4],["biguint",3]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",1,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",1,[[],[["option",4],["bigint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",1,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",1,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",1,[[]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",1,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",1,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",1,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",1,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",1,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",1,[[],["sign",4]]],[11,"bits","","Determines the fewest bits necessary to express the…",1,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",1,[[],[["option",4],["biguint",3]]]],[11,"checked_add","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",1,[[]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",1,[[]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",1,[[]]],[11,"new","","Creates and initializes a `BigUint`.",2,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",2,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",2,[[],[["option",4],["biguint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[],[["option",4],["biguint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[],[["option",4],["biguint",3]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",2,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",2,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",2,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",2,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",2,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",2,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",2,[[]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",2,[[]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",2,[[]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",2,[[]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",2,[[]]],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",3,[[],[["option",4],["biguint",3]]]],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`. This…",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",4,[[],[["option",4],["bigint",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_bigint","","",1,[[],[["option",4],["bigint",3]]]],[11,"to_bigint","","",2,[[],[["option",4],["bigint",3]]]],[11,"to_biguint","","",1,[[],[["option",4],["biguint",3]]]],[11,"to_biguint","","",2,[[],[["option",4],["biguint",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["biguint",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"clone","","",0,[[],["sign",4]]],[11,"clone","","",1,[[],["bigint",3]]],[11,"clone","","",2,[[],["biguint",3]]],[11,"clone","","",5,[[],["parsebiginterror",3]]],[11,"default","","",1,[[],["bigint",3]]],[11,"default","","",2,[[],["biguint",3]]],[11,"cmp","","",0,[[["sign",4]],["ordering",4]]],[11,"cmp","","",1,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",2,[[["biguint",3]],["ordering",4]]],[11,"eq","","",0,[[["sign",4]]]],[11,"eq","","",1,[[["bigint",3]]]],[11,"eq","","",2,[[["biguint",3]]]],[11,"eq","","",5,[[["parsebiginterror",3]]]],[11,"ne","","",5,[[["parsebiginterror",3]]]],[11,"partial_cmp","","",0,[[["sign",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["bigint",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",2,[[["biguint",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",1,[[["bigint",3]],["bigint",3]]],[11,"div","","",1,[[["bigint",3]],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",2,[[["biguint",3]],["biguint",3]]],[11,"div","","",2,[[["biguint",3]],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"rem","","",1,[[["bigint",3]],["bigint",3]]],[11,"rem","","",1,[[["bigint",3]],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",2,[[["biguint",3]],["biguint",3]]],[11,"rem","","",2,[[["biguint",3]],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",2,[[["biguint",3]],["biguint",3]]],[11,"sub","","",2,[[["biguint",3]],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"add","","",1,[[["bigint",3]],["bigint",3]]],[11,"add","","",1,[[["bigint",3]],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",2,[[["biguint",3]],["biguint",3]]],[11,"add","","",2,[[["biguint",3]],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"mul","","",0,[[["sign",4]],["sign",4]]],[11,"mul","","",1,[[["bigint",3]],["bigint",3]]],[11,"mul","","",1,[[["bigint",3]],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",2,[[["biguint",3]],["biguint",3]]],[11,"mul","","",2,[[["biguint",3]],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"neg","","Negate Sign value.",0,[[],["sign",4]]],[11,"neg","","",1,[[],["bigint",3]]],[11,"neg","","",2,[[],["biguint",3]]],[11,"add_assign","","",1,[[["bigint",3]]]],[11,"add_assign","","",1,[[["bigint",3]]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",2,[[["biguint",3]]]],[11,"add_assign","","",2,[[["biguint",3]]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"sub_assign","","",1,[[["bigint",3]]]],[11,"sub_assign","","",1,[[["bigint",3]]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",2,[[["biguint",3]]]],[11,"sub_assign","","",2,[[["biguint",3]]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"mul_assign","","",1,[[["bigint",3]]]],[11,"mul_assign","","",1,[[["bigint",3]]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",2,[[["biguint",3]]]],[11,"mul_assign","","",2,[[["biguint",3]]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"div_assign","","",1,[[["bigint",3]]]],[11,"div_assign","","",1,[[["bigint",3]]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",2,[[["biguint",3]]]],[11,"div_assign","","",2,[[["biguint",3]]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"rem_assign","","",1,[[["bigint",3]]]],[11,"rem_assign","","",1,[[["bigint",3]]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",2,[[["biguint",3]]]],[11,"rem_assign","","",2,[[["biguint",3]]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"not","","",1,[[],["bigint",3]]],[11,"bitand","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",2,[[["biguint",3]],["biguint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"bitand_assign","","",1,[[["bigint",3]]]],[11,"bitand_assign","","",1,[[["bigint",3]]]],[11,"bitand_assign","","",2,[[["biguint",3]]]],[11,"bitand_assign","","",2,[[["biguint",3]]]],[11,"bitor_assign","","",1,[[["bigint",3]]]],[11,"bitor_assign","","",1,[[["bigint",3]]]],[11,"bitor_assign","","",2,[[["biguint",3]]]],[11,"bitor_assign","","",2,[[["biguint",3]]]],[11,"bitxor_assign","","",1,[[["bigint",3]]]],[11,"bitxor_assign","","",1,[[["bigint",3]]]],[11,"bitxor_assign","","",2,[[["biguint",3]]]],[11,"bitxor_assign","","",2,[[["biguint",3]]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",2,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"from_str","","",1,[[],[["result",4],["parsebiginterror",3],["bigint",3]]]],[11,"from_str","","",2,[[],[["parsebiginterror",3],["result",4],["biguint",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"sum","","",1,[[]]],[11,"sum","","",2,[[]]],[11,"product","","",1,[[]]],[11,"product","","",2,[[]]],[11,"description","","",5,[[]]],[11,"nth_root","","",1,[[]]],[11,"sqrt","","",1,[[]]],[11,"cbrt","","",1,[[]]],[11,"nth_root","","",2,[[]]],[11,"sqrt","","",2,[[]]],[11,"cbrt","","",2,[[]]],[11,"div_rem","","",1,[[["bigint",3]]]],[11,"div_floor","","",1,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",1,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",1,[[["bigint",3]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",1,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",1,[[["bigint",3]],["bigint",3]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",1,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",1,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",1,[[]]],[11,"div_rem","","",2,[[["biguint",3]]]],[11,"div_floor","","",2,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",2,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",2,[[["biguint",3]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",2,[[]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",2,[[["biguint",3]],["biguint",3]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,[[]]],[11,"to_i64","","",1,[[],["option",4]]],[11,"to_i128","","",1,[[],["option",4]]],[11,"to_u64","","",1,[[],["option",4]]],[11,"to_u128","","",1,[[],["option",4]]],[11,"to_f32","","",1,[[],["option",4]]],[11,"to_f64","","",1,[[],["option",4]]],[11,"to_i64","","",2,[[],["option",4]]],[11,"to_i128","","",2,[[],["option",4]]],[11,"to_u64","","",2,[[],["option",4]]],[11,"to_u128","","",2,[[],["option",4]]],[11,"to_f32","","",2,[[],["option",4]]],[11,"to_f64","","",2,[[],["option",4]]],[11,"from_i64","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_i128","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_u64","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_u128","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_f64","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_i64","","",2,[[],[["option",4],["biguint",3]]]],[11,"from_i128","","",2,[[],[["option",4],["biguint",3]]]],[11,"from_u64","","",2,[[],[["option",4],["biguint",3]]]],[11,"from_u128","","",2,[[],[["option",4],["biguint",3]]]],[11,"from_f64","","",2,[[],[["option",4],["biguint",3]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",1,[[],[["result",4],["parsebiginterror",3],["bigint",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,[[],[["parsebiginterror",3],["result",4],["biguint",3]]]],[11,"zero","","",1,[[],["bigint",3]]],[11,"set_zero","","",1,[[]]],[11,"is_zero","","",1,[[]]],[11,"zero","","",2,[[],["biguint",3]]],[11,"set_zero","","",2,[[]]],[11,"is_zero","","",2,[[]]],[11,"one","","",1,[[],["bigint",3]]],[11,"set_one","","",1,[[]]],[11,"is_one","","",1,[[]]],[11,"one","","",2,[[],["biguint",3]]],[11,"set_one","","",2,[[]]],[11,"is_one","","",2,[[]]],[11,"checked_add","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_add","","",2,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"checked_sub","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",2,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"checked_mul","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",2,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"checked_div","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",2,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"abs","","",1,[[],["bigint",3]]],[11,"abs_sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"signum","","",1,[[],["bigint",3]]],[11,"is_positive","","",1,[[]]],[11,"is_negative","","",1,[[]]]],"p":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,"ToBigUint"],[8,"ToBigInt"],[3,"ParseBigIntError"]]},\
"num_complex":{"doc":"Complex numbers.","i":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"new","","Create a new Complex",0,[[]]],[11,"i","","Returns imaginary unit",0,[[]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn\'t…",0,[[]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[]]],[11,"inv","","Returns `1/self`",0,[[]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the Manhattan…",0,[[]]],[11,"norm","","Calculate |self|",0,[[]]],[11,"arg","","Calculate the principal Arg of self.",0,[[]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[]]],[11,"powf","","Raises `self` to a floating point power.",0,[[]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[]]],[11,"powc","","Raises `self` to a complex power.",0,[[]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[]]],[11,"sin","","Computes the sine of `self`.",0,[[]]],[11,"cos","","Computes the cosine of `self`.",0,[[]]],[11,"tan","","Computes the tangent of `self`.",0,[[]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[],["complex",3]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex",3]],["complex",3]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"eq","","",0,[[["complex",3]]]],[11,"ne","","",0,[[["complex",3]]]],[11,"eq","","",1,[[["parsecomplexerror",3]]]],[11,"ne","","",1,[[["parsecomplexerror",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"neg","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],["result",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"clone","","",0,[[],["complex",3]]],[11,"default","","",0,[[],["complex",3]]],[11,"description","","",1,[[]]],[11,"to_usize","","",0,[[],["option",4]]],[11,"to_isize","","",0,[[],["option",4]]],[11,"to_u8","","",0,[[],["option",4]]],[11,"to_u16","","",0,[[],["option",4]]],[11,"to_u32","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_i8","","",0,[[],["option",4]]],[11,"to_i16","","",0,[[],["option",4]]],[11,"to_i32","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_f32","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"from_usize","","",0,[[],["option",4]]],[11,"from_isize","","",0,[[],["option",4]]],[11,"from_u8","","",0,[[],["option",4]]],[11,"from_u16","","",0,[[],["option",4]]],[11,"from_u32","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_i8","","",0,[[],["option",4]]],[11,"from_i16","","",0,[[],["option",4]]],[11,"from_i32","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from","","",0,[[["toprimitive",8]],["option",4]]],[11,"as_","","",0,[[]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],["result",4]]],[11,"zero","","",0,[[]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"one","","",0,[[]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"inv","","",0,[[]]],[11,"mul_add","","",0,[[["complex",3]],["complex",3]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[["complex",3]]]],[11,"pow","","",0,[[["complex",3]]]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[]]]],"p":[]},\
"num_derive":{"doc":"Procedural macros to derive numeric traits in Rust.","i":[[24,"FromPrimitive","num_derive","Derives `num_traits::FromPrimitive` for simple enums and…",null,null],[24,"ToPrimitive","","Derives `num_traits::ToPrimitive` for simple enums and…",null,null],[24,"NumOps","","Derives `num_traits::NumOps` for newtypes. The inner type…",null,null],[24,"NumCast","","Derives `num_traits::NumCast` for newtypes. The inner type…",null,null],[24,"Zero","","Derives `num_traits::Zero` for newtypes. The inner type…",null,null],[24,"One","","Derives `num_traits::One` for newtypes. The inner type…",null,null],[24,"Num","","Derives `num_traits::Num` for newtypes. The inner type…",null,null],[24,"Float","","Derives `num_traits::Float` for newtypes. The inner type…",null,null]],"p":[]},\
"num_integer":{"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots",8]],["roots",8]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer",8]]]],[5,"div_floor","","Floored integer division",null,[[["integer",8]],["integer",8]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer",8]],["integer",8]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer",8]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer",8]],["integer",8]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer",8]],["integer",8]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer",8]],["integer",8]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer",8]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["clone",8],["integer",8]],[["clone",8],["integer",8]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["clone",8],["integer",8]]]],[8,"Roots","","Provides methods to compute an integer\'s square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[]]],[11,"div_ceil","","Ceiled integer division.",2,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",2,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",2,[[]]],[10,"is_even","","Returns `true` if the number is even.",2,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",2,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",2,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",2,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[]]],[11,"new","","For a given n, iterate over all binomial coefficients…",3,[[],["iterbinomial",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["extendedgcd",3]]]],[11,"ne","","",0,[[["extendedgcd",3]]]],[11,"next","","",3,[[],["option",4]]],[11,"clone","","",0,[[],["extendedgcd",3]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",null,null],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"into_iter","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"into_iter","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"into_iter","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"clone","","",0,[[],["range",3]]],[11,"clone","","",1,[[],["rangeinclusive",3]]],[11,"clone","","",2,[[],["rangestep",3]]],[11,"clone","","",3,[[],["rangestepinclusive",3]]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]},\
"num_rational":{"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",0,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[]]],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,[[],["ratio",3]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[]]],[11,"is_integer","","Returns true if the rational number is an integer…",0,[[]]],[11,"reduced","","Returns a reduced copy of self.",0,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",0,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",0,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",0,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",0,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",0,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division…",0,[[],["ratio",3]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[],["ratio",3]]],[11,"from_float","","Converts a float into a rational number.",0,[[["floatcore",8]],[["option",4],["bigrational",6]]]],[11,"approximate_float","","",0,[[["floatcore",8],["numcast",8]],[["option",4],["ratio",3]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_string","","",1,[[],["string",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",0,[[],["ratio",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[["parseratioerror",3]]]],[11,"ne","","",1,[[["parseratioerror",3]]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["ordering",4],["option",4]]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"neg","","",0,[[],["ratio",3]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[],[["parseratioerror",3],["result",4],["ratio",3]]]],[11,"into","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"clone","","",0,[[],["ratio",3]]],[11,"clone","","",1,[[],["parseratioerror",3]]],[11,"checked_add","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_div","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_mul","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_sub","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[],[["parseratioerror",3],["result",4],["ratio",3]]]],[11,"one","","",0,[[],["ratio",3]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"abs","","",0,[[],["ratio",3]]],[11,"abs_sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"signum","","",0,[[],["ratio",3]]],[11,"is_positive","","",0,[[]]],[11,"is_negative","","",0,[[]]],[11,"zero","","",0,[[],["ratio",3]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"inv","","",0,[[],["ratio",3]]],[11,"description","","",1,[[]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast",8]],[["option",4],["numcast",8]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[]]],[10,"neg_infinity","","Returns negative infinity.",7,[[]]],[10,"nan","","Returns NaN.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[11,"trunc","","Return the integer part of a number.",7,[[]]],[11,"fract","","Returns the fractional part of a number.",7,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[]]],[11,"min","","Returns the minimum of the two numbers.",7,[[]]],[11,"max","","Returns the maximum of the two numbers.",7,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[]]],[11,"powi","","Raise a number to an integer power.",7,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[]]],[10,"infinity","","Returns the infinite value.",8,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[]]],[10,"neg_zero","","Returns `-0.0`.",8,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[]]],[10,"trunc","","Return the integer part of a number.",8,[[]]],[10,"fract","","Returns the fractional part of a number.",8,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[]]],[10,"powi","","Raise a number to an integer power.",8,[[]]],[10,"powf","","Raise a number to a floating point power.",8,[[]]],[10,"sqrt","","Take the square root of a number.",8,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[]]],[10,"exp2","","Returns `2^(self)`.",8,[[]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[]]],[11,"to_degrees","","Converts radians to degrees.",8,[[]]],[11,"to_radians","","Converts degrees to radians.",8,[[]]],[10,"max","","Returns the maximum of the two numbers.",8,[[]]],[10,"min","","Returns the minimum of the two numbers.",8,[[]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[]]],[10,"cbrt","","Take the cubic root of a number.",8,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[]]],[10,"sinh","","Hyperbolic sine function.",8,[[]]],[10,"cosh","","Hyperbolic cosine function.",8,[[]]],[10,"tanh","","Hyperbolic tangent function.",8,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one",8]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",10,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",18,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",29,[[]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["clone",8],["one",8],["mul",8]],[["clone",8],["one",8],["mul",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["clone",8],["checkedmul",8],["one",8]],[["clone",8],["option",4],["checkedmul",8],["one",8]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"pow","","Returns `self` to the power `rhs`.",30,[[]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",31,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",31,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",31,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",31,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",31,[[]]],[10,"trunc","","Return the integer part of a number.",31,[[]]],[10,"fract","","Returns the fractional part of a number.",31,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",31,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",31,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",31,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",31,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[]]],[10,"powi","","Raise a number to an integer power.",31,[[]]],[10,"powf","","Raise a number to a real number power.",31,[[]]],[10,"sqrt","","Take the square root of a number.",31,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[]]],[10,"exp2","","Returns `2^(self)`.",31,[[]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",31,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[]]],[10,"to_degrees","","Converts radians to degrees.",31,[[]]],[10,"to_radians","","Converts degrees to radians.",31,[[]]],[10,"max","","Returns the maximum of the two numbers.",31,[[]]],[10,"min","","Returns the minimum of the two numbers.",31,[[]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[]]],[10,"cbrt","","Take the cubic root of a number.",31,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",31,[[]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",31,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",31,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",31,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",31,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",31,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",31,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",31,[[]]],[10,"sinh","","Hyperbolic sine function.",31,[[]]],[10,"cosh","","Hyperbolic cosine function.",31,[[]]],[10,"tanh","","Hyperbolic tangent function.",31,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",32,[[]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[]]],[10,"signum","","Returns the sign of the number.",32,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",33,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]},\
"ordered_float":{"doc":"Wrappers for total order on Floats.","i":[[3,"OrderedFloat","ordered_float","A wrapper around Floats providing an implementation of Ord…",null,null],[12,"0","","",0,null],[3,"NotNan","","A wrapper around Floats providing an implementation of Ord…",null,null],[3,"FloatIsNan","","An error indicating an attempt to construct NotNan from a…",null,null],[4,"ParseNotNanError","","An error indicating a parse error from a string for…",null,null],[13,"ParseFloatError","","A plain parse error from the underlying float type.",1,null],[13,"IsNaN","","The parsed float value resulted in a NaN.",1,null],[6,"NotNaN","","A wrapper around Floats providing an implementation of Ord…",null,null],[6,"FloatIsNaN","","An error indicating an attempt to construct NotNan from a…",null,null],[11,"into_inner","","Get the value out.",0,[[]]],[11,"new","","Create a NotNan value.",2,[[],[["floatisnan",3],["result",4]]]],[11,"unchecked_new","","Create a NotNan value from a value that is guaranteed to…",2,[[]]],[11,"into_inner","","Get the value out.",2,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"deref","","",0,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"div","","",2,[[]]],[11,"div","","",2,[[]]],[11,"rem","","",2,[[]]],[11,"rem","","",2,[[]]],[11,"sub","","",2,[[]]],[11,"sub","","",2,[[]]],[11,"eq","","",0,[[["orderedfloat",3]]]],[11,"eq","","",2,[[["notnan",3]]]],[11,"ne","","",2,[[["notnan",3]]]],[11,"eq","","",3,[[["floatisnan",3]]]],[11,"eq","","",1,[[["parsenotnanerror",4]]]],[11,"ne","","",1,[[["parsenotnanerror",4]]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"cmp","","",2,[[["notnan",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["notnan",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["notnan",3]]]],[11,"le","","",2,[[["notnan",3]]]],[11,"gt","","",2,[[["notnan",3]]]],[11,"ge","","",2,[[["notnan",3]]]],[11,"add","","",2,[[]]],[11,"add","","",2,[[]]],[11,"mul","","",2,[[]]],[11,"mul","","",2,[[]]],[11,"neg","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",2,[[]]],[11,"from_str","","Convert a &str to `OrderedFloat`. Returns an error if the…",0,[[],["result",4]]],[11,"from_str","","Convert a &str to `NotNan`. Returns an error if the string…",2,[[],["result",4]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",2,[[]]],[11,"as_mut","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"clone","","",0,[[],["orderedfloat",3]]],[11,"clone","","",2,[[],["notnan",3]]],[11,"clone","","",3,[[],["floatisnan",3]]],[11,"clone","","",1,[[],["parsenotnanerror",4]]],[11,"default","","",0,[[],["orderedfloat",3]]],[11,"default","","",2,[[],["notnan",3]]],[11,"min_value","","",0,[[]]],[11,"max_value","","",0,[[]]],[11,"min_value","","",2,[[]]],[11,"max_value","","",2,[[]]],[11,"to_i64","","",2,[[],["option",4]]],[11,"to_u64","","",2,[[],["option",4]]],[11,"to_isize","","",2,[[],["option",4]]],[11,"to_i8","","",2,[[],["option",4]]],[11,"to_i16","","",2,[[],["option",4]]],[11,"to_i32","","",2,[[],["option",4]]],[11,"to_usize","","",2,[[],["option",4]]],[11,"to_u8","","",2,[[],["option",4]]],[11,"to_u16","","",2,[[],["option",4]]],[11,"to_u32","","",2,[[],["option",4]]],[11,"to_f32","","",2,[[],["option",4]]],[11,"to_f64","","",2,[[],["option",4]]],[11,"from_i64","","",2,[[],["option",4]]],[11,"from_u64","","",2,[[],["option",4]]],[11,"from_isize","","",2,[[],["option",4]]],[11,"from_i8","","",2,[[],["option",4]]],[11,"from_i16","","",2,[[],["option",4]]],[11,"from_i32","","",2,[[],["option",4]]],[11,"from_usize","","",2,[[],["option",4]]],[11,"from_u8","","",2,[[],["option",4]]],[11,"from_u16","","",2,[[],["option",4]]],[11,"from_u32","","",2,[[],["option",4]]],[11,"from_f32","","",2,[[],["option",4]]],[11,"from_f64","","",2,[[],["option",4]]],[11,"from","","",2,[[["toprimitive",8]],["option",4]]],[11,"from_str_radix","","",2,[[],["result",4]]],[11,"zero","","",2,[[]]],[11,"is_zero","","",2,[[]]],[11,"one","","",2,[[]]],[11,"abs","","",2,[[]]],[11,"abs_sub","","",2,[[]]],[11,"signum","","",2,[[]]],[11,"is_positive","","",2,[[]]],[11,"is_negative","","",2,[[]]]],"p":[[3,"OrderedFloat"],[4,"ParseNotNanError"],[3,"NotNan"],[3,"FloatIsNan"]]},\
"png":{"doc":"PNG encoder and decoderThis crate contains a PNG encoder…","i":[[3,"PixelDimensions","png","Pixel dimensions information",null,null],[12,"xppu","","Pixels per unit, X axis",0,null],[12,"yppu","","Pixels per unit, Y axis",0,null],[12,"unit","","Either Meter or Unspecified",0,null],[3,"FrameControl","","Frame control information",null,null],[12,"sequence_number","","Sequence number of the animation chunk, starting from 0",1,null],[12,"width","","Width of the following frame",1,null],[12,"height","","Height of the following frame",1,null],[12,"x_offset","","X position at which to render the following frame",1,null],[12,"y_offset","","Y position at which to render the following frame",1,null],[12,"delay_num","","Frame delay fraction numerator",1,null],[12,"delay_den","","Frame delay fraction denominator",1,null],[12,"dispose_op","","Type of frame area disposal to be done after rendering…",1,null],[12,"blend_op","","Type of frame area rendering for this frame",1,null],[3,"AnimationControl","","Animation control information",null,null],[12,"num_frames","","Number of frames",2,null],[12,"num_plays","","Number of times to loop this APNG. 0 indicates infinite…",2,null],[3,"Info","","PNG info struct",null,null],[12,"width","","",3,null],[12,"height","","",3,null],[12,"bit_depth","","",3,null],[12,"color_type","","",3,null],[12,"interlaced","","",3,null],[12,"trns","","",3,null],[12,"pixel_dims","","",3,null],[12,"palette","","",3,null],[12,"frame_control","","",3,null],[12,"animation_control","","",3,null],[12,"compression","","",3,null],[12,"filter","","",3,null],[3,"Transformations","","Output transformationsOnly `IDENTITY` and…",null,null],[3,"Decoder","","PNG Decoder",null,null],[3,"Reader","","PNG reader (mostly high-level interface)",null,null],[3,"OutputInfo","","Output info",null,null],[12,"width","","",4,null],[12,"height","","",4,null],[12,"color_type","","",4,null],[12,"bit_depth","","",4,null],[12,"line_size","","",4,null],[3,"StreamingDecoder","","PNG StreamingDecoder (low-level interface)",null,null],[3,"Limits","","Limits on the resources the `Decoder` is allowed too use",null,null],[12,"bytes","","maximum number of bytes the decoder is allowed to…",5,null],[3,"Encoder","","PNG Encoder",null,null],[3,"Writer","","PNG writer",null,null],[3,"StreamWriter","","Streaming png writer",null,null],[4,"ColorType","","Describes the layout of samples in a pixel",null,null],[13,"Grayscale","","",6,null],[13,"RGB","","",6,null],[13,"Indexed","","",6,null],[13,"GrayscaleAlpha","","",6,null],[13,"RGBA","","",6,null],[4,"BitDepth","","Bit depth of the png file",null,null],[13,"One","","",7,null],[13,"Two","","",7,null],[13,"Four","","",7,null],[13,"Eight","","",7,null],[13,"Sixteen","","",7,null],[4,"Unit","","Physical unit of the pixel dimensions",null,null],[13,"Unspecified","","",8,null],[13,"Meter","","",8,null],[4,"DisposeOp","","How to reset buffer of an animated png (APNG) at the end…",null,null],[13,"None","","Leave the buffer unchanged.",9,null],[13,"Background","","Clear buffer with the background color.",9,null],[13,"Previous","","Reset the buffer to the state before the current frame.",9,null],[4,"BlendOp","","How pixels are written into the buffer.",null,null],[13,"Source","","Pixels overwrite the value at their position.",10,null],[13,"Over","","The new pixels are blended into the current state based on…",10,null],[4,"Compression","","The type and strength of applied compression.",null,null],[13,"Default","","Default level  ",11,null],[13,"Fast","","Fast minimal compression",11,null],[13,"Best","","Higher compression level",11,null],[13,"Huffman","","",11,null],[13,"Rle","","",11,null],[4,"Decoded","","Result of the decoding process",null,null],[13,"Nothing","","Nothing decoded yet",12,null],[13,"Header","","",12,null],[13,"ChunkBegin","","",12,null],[13,"ChunkComplete","","",12,null],[13,"PixelDimensions","","",12,null],[13,"AnimationControl","","",12,null],[13,"FrameControl","","",12,null],[13,"ImageData","","Decoded raw image data.",12,null],[13,"PartialChunk","","",12,null],[13,"ImageEnd","","",12,null],[4,"DecodingError","","",null,null],[13,"IoError","","",13,null],[13,"Format","","",13,null],[13,"InvalidSignature","","",13,null],[13,"CrcMismatch","","",13,null],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",14,null],[12,"crc_val","","Stored CRC32 value",14,null],[12,"crc_sum","","Calculated CRC32 sum",14,null],[12,"chunk","","",14,null],[13,"Other","png","",13,null],[13,"CorruptFlateStream","","",13,null],[13,"LimitsExceeded","","",13,null],[4,"EncodingError","","",null,null],[13,"IoError","","",15,null],[13,"Format","","",15,null],[4,"FilterType","","The byte level filter applied to scanlines to prepare them…",null,null],[13,"NoFilter","","",16,null],[13,"Sub","","",16,null],[13,"Up","","",16,null],[13,"Avg","","",16,null],[13,"Paeth","","",16,null],[0,"chunk","","Chunk types and functions",null,null],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",null,[[["chunktype",6]]]],[5,"is_private","","Returns true if the chunk is private.",null,[[["chunktype",6]]]],[5,"reserved_set","","Checks whether the reserved bit of the chunk name is set.…",null,[[["chunktype",6]]]],[5,"safe_to_copy","","Returns true if the chunk is safe to copy if unknown.",null,[[["chunktype",6]]]],[6,"ChunkType","","",null,null],[17,"IHDR","","Image header",null,null],[17,"PLTE","","Palette",null,null],[17,"IDAT","","Image data",null,null],[17,"IEND","","Image trailer",null,null],[17,"tRNS","","Transparency",null,null],[17,"bKGD","","Background colour",null,null],[17,"tIME","","Image last-modification time",null,null],[17,"pHYs","","Physical pixel dimensions",null,null],[17,"acTL","","Animation control",null,null],[17,"fcTL","","Frame control",null,null],[17,"fdAT","","Frame data",null,null],[11,"new","png","Creates a new StreamingDecoder",17,[[],["streamingdecoder",3]]],[11,"reset","","Resets the StreamingDecoder",17,[[]]],[11,"update","","Low level StreamingDecoder interface.",17,[[["vec",3]],[["result",4],["decodingerror",4]]]],[11,"buffer_size","","Returns the size needed to hold a decoded frame",4,[[]]],[11,"new","","",18,[[],["decoder",3]]],[11,"new_with_limits","","",18,[[["limits",3]],["decoder",3]]],[11,"set_limits","","Limit resource usage",18,[[["limits",3]]]],[11,"read_info","","Reads all meta data until the first IDAT chunk",18,[[],[["result",4],["decodingerror",4]]]],[11,"set_transformations","","Set the allowed and performed transformations.",18,[[["transformations",3]]]],[11,"info","","",19,[[],["info",3]]],[11,"next_frame","","Decodes the next frame into `buf`",19,[[],[["result",4],["decodingerror",4]]]],[11,"next_row","","Returns the next processed row of the image",19,[[],[["option",4],["decodingerror",4],["result",4]]]],[11,"next_interlaced_row","","Returns the next processed row of the image",19,[[],[["option",4],["result",4],["decodingerror",4]]]],[11,"output_color_type","","Returns the color type and the number of bits per sample…",19,[[]]],[11,"output_buffer_size","","Returns the number of bytes required to hold a…",19,[[]]],[11,"output_line_size","","Returns the number of bytes required to hold a…",19,[[]]],[11,"new","","",20,[[],["encoder",3]]],[11,"write_header","","",20,[[],[["encodingerror",4],["result",4],["writer",3]]]],[11,"set_color","","Set the color of the encoded image.",20,[[["colortype",4]]]],[11,"set_depth","","Set the indicated depth of the image data.",20,[[["bitdepth",4]]]],[11,"set_compression","","Set compression parameters.",20,[[["into",8],["compression",4]]]],[11,"set_filter","","Set the used filter type.",20,[[["filtertype",4]]]],[11,"write_chunk","","",21,[[],[["encodingerror",4],["result",4]]]],[11,"write_image_data","","Writes the image data.",21,[[],[["encodingerror",4],["result",4]]]],[11,"stream_writer","","Create an stream writer.",21,[[],["streamwriter",3]]],[11,"stream_writer_with_size","","Create a stream writer with custom buffer size.",21,[[],["streamwriter",3]]],[11,"finish","","",22,[[],[["encodingerror",4],["result",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",16,[[],[["filtertype",4],["option",4]]]],[11,"samples","","Returns the number of samples used per pixel of `ColorType`",6,[[]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",6,[[],[["colortype",4],["option",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",7,[[],[["bitdepth",4],["option",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",8,[[],[["unit",4],["option",4]]]],[11,"from_u8","","u8 -> Self. Using enum_primitive or transmute is probably…",9,[[],[["option",4],["disposeop",4]]]],[11,"from_u8","","u8 -> Self. Using enum_primitive or transmute is probably…",10,[[],[["option",4],["blendop",4]]]],[11,"set_seq_num","","",1,[[]]],[11,"inc_seq_num","","",1,[[]]],[11,"size","","Size of the image",3,[[]]],[11,"is_animated","","Returns true if the image is an APNG image.",3,[[]]],[11,"animation_control","","Returns the frame control information of the image",3,[[],[["animationcontrol",3],["option",4]]]],[11,"frame_control","","Returns the frame control information of the current frame",3,[[],[["framecontrol",3],["option",4]]]],[11,"bits_per_pixel","","Returns the bits per pixel",3,[[]]],[11,"bytes_per_pixel","","Returns the bytes per pixel",3,[[]]],[11,"raw_bytes","","Returns the number of bytes needed for one deinterlaced…",3,[[]]],[11,"raw_row_length","","Returns the number of bytes needed for one deinterlaced row ",3,[[]]],[11,"raw_row_length_from_width","","Returns the number of bytes needed for one deinterlaced…",3,[[]]],[18,"IDENTITY","","No transformation",23,null],[18,"STRIP_16","","Strip 16-bit samples to 8 bits",23,null],[18,"STRIP_ALPHA","","Discard the alpha channel",23,null],[18,"PACKING","","Expand 1; 2 and 4-bit samples to bytes",23,null],[18,"PACKSWAP","","Change order of packed pixels to LSB first",23,null],[18,"EXPAND","","Expand paletted images to RGB; expand grayscale images of…",23,null],[18,"INVERT_MONO","","Invert monochrome images",23,null],[18,"SHIFT","","Normalize pixels to the sBIT depth",23,null],[18,"BGR","","Flip RGB to BGR; RGBA to BGRA",23,null],[18,"SWAP_ALPHA","","Flip RGBA to ARGB or GA to AG",23,null],[18,"SWAP_ENDIAN","","Byte-swap 16-bit samples",23,null],[18,"INVERT_ALPHA","","Change alpha from opacity to transparency",23,null],[18,"STRIP_FILLER","","",23,null],[18,"STRIP_FILLER_BEFORE","","",23,null],[18,"STRIP_FILLER_AFTER","","",23,null],[18,"GRAY_TO_RGB","","",23,null],[18,"EXPAND_16","","",23,null],[18,"SCALE_16","","",23,null],[11,"empty","","Returns an empty set of flags",23,[[],["transformations",3]]],[11,"all","","Returns the set containing all flags.",23,[[],["transformations",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",23,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",23,[[],[["transformations",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",23,[[],["transformations",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",23,[[],["transformations",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",23,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",23,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",23,[[["transformations",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",23,[[["transformations",3]]]],[11,"insert","","Inserts the specified flags in-place.",23,[[["transformations",3]]]],[11,"remove","","Removes the specified flags in-place.",23,[[["transformations",3]]]],[11,"toggle","","Toggles the specified flags in-place.",23,[[["transformations",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",23,[[["transformations",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"drop","","",21,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",13,[[["error",3]],["decodingerror",4]]],[11,"from","","",13,[[["string",3]],["decodingerror",4]]],[11,"from","","",15,[[["error",3]],["encodingerror",4]]],[11,"from","","",11,[[["compression",4]]]],[11,"extend","","",23,[[["intoiterator",8]]]],[11,"clone","","",5,[[],["limits",3]]],[11,"clone","","",16,[[],["filtertype",4]]],[11,"clone","","",6,[[],["colortype",4]]],[11,"clone","","",7,[[],["bitdepth",4]]],[11,"clone","","",0,[[],["pixeldimensions",3]]],[11,"clone","","",8,[[],["unit",4]]],[11,"clone","","",9,[[],["disposeop",4]]],[11,"clone","","",10,[[],["blendop",4]]],[11,"clone","","",1,[[],["framecontrol",3]]],[11,"clone","","",2,[[],["animationcontrol",3]]],[11,"clone","","",11,[[],["compression",4]]],[11,"clone","","",23,[[],["transformations",3]]],[11,"default","","",5,[[],["limits",3]]],[11,"default","","",1,[[],["framecontrol",3]]],[11,"default","","",3,[[],["info",3]]],[11,"cmp","","",23,[[["transformations",3]],["ordering",4]]],[11,"eq","","",16,[[["filtertype",4]]]],[11,"eq","","",6,[[["colortype",4]]]],[11,"eq","","",7,[[["bitdepth",4]]]],[11,"eq","","",8,[[["unit",4]]]],[11,"eq","","",9,[[["disposeop",4]]]],[11,"eq","","",10,[[["blendop",4]]]],[11,"eq","","",23,[[["transformations",3]]]],[11,"ne","","",23,[[["transformations",3]]]],[11,"partial_cmp","","",23,[[["transformations",3]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["transformations",3]]]],[11,"le","","",23,[[["transformations",3]]]],[11,"gt","","",23,[[["transformations",3]]]],[11,"ge","","",23,[[["transformations",3]]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"sub","","Returns the set difference of the two sets of flags.",23,[[["transformations",3]],["transformations",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",23,[[["transformations",3]]]],[11,"not","","Returns the complement of this set of flags.",23,[[],["transformations",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",23,[[["transformations",3]],["transformations",3]]],[11,"bitor","","Returns the union of the two sets of flags.",23,[[["transformations",3]],["transformations",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",23,[[["transformations",3]],["transformations",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",23,[[["transformations",3]]]],[11,"bitor_assign","","Adds the set of flags.",23,[[["transformations",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",23,[[["transformations",3]]]],[11,"hash","","",23,[[]]],[11,"from_iter","","",23,[[["intoiterator",8]],["transformations",3]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"cause","","",13,[[],[["error",8],["option",4]]]],[11,"cause","","",15,[[],[["error",8],["option",4]]]],[11,"write","","",22,[[],["result",6]]],[11,"flush","","",22,[[],["result",6]]]],"p":[[3,"PixelDimensions"],[3,"FrameControl"],[3,"AnimationControl"],[3,"Info"],[3,"OutputInfo"],[3,"Limits"],[4,"ColorType"],[4,"BitDepth"],[4,"Unit"],[4,"DisposeOp"],[4,"BlendOp"],[4,"Compression"],[4,"Decoded"],[4,"DecodingError"],[13,"CrcMismatch"],[4,"EncodingError"],[4,"FilterType"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,"StreamWriter"],[3,"Transformations"]]},\
"ppv_lite86":{"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[]]],[10,"rotate_each_word_right8","","",4,[[]]],[10,"rotate_each_word_right11","","",4,[[]]],[10,"rotate_each_word_right12","","",4,[[]]],[10,"rotate_each_word_right16","","",4,[[]]],[10,"rotate_each_word_right20","","",4,[[]]],[10,"rotate_each_word_right24","","",4,[[]]],[10,"rotate_each_word_right25","","",4,[[]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[]]],[10,"insert","","",7,[[]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[]]],[10,"insert","","",8,[[]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[]]],[10,"shuffle2301","","",9,[[]]],[10,"shuffle3012","","",9,[[]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[]]],[10,"shuffle_lane_words2301","","",10,[[]]],[10,"shuffle_lane_words3012","","",10,[[]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[]]],[10,"swap2","","",11,[[]]],[10,"swap4","","",11,[[]]],[10,"swap8","","",11,[[]]],[10,"swap16","","",11,[[]]],[10,"swap32","","",11,[[]]],[10,"swap64","","",11,[[]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]],[10,"instance","","",14,[[]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[]]],[10,"unsafe_read_be","","",16,[[]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"instance","","",27,[[]]],[11,"instance","","",28,[[]]],[11,"unpack","","",29,[[["vec128_storage",19]]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[],["yess3",3]]],[11,"clone","","",18,[[],["nos3",3]]],[11,"clone","","",19,[[],["yess4",3]]],[11,"clone","","",20,[[],["nos4",3]]],[11,"clone","","",21,[[],["yesa1",3]]],[11,"clone","","",22,[[],["noa1",3]]],[11,"clone","","",23,[[],["yesa2",3]]],[11,"clone","","",24,[[],["noa2",3]]],[11,"clone","","",25,[[],["yesni",3]]],[11,"clone","","",26,[[],["noni",3]]],[11,"clone","","",27,[[],["ssemachine",3]]],[11,"clone","","",28,[[],["avx2machine",3]]],[11,"clone","","",29,[[],["vec128_storage",19]]],[11,"clone","","",0,[[],["vec256_storage",19]]],[11,"clone","","",1,[[],["vec512_storage",19]]],[11,"default","","",29,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"unpack","ppv_lite86","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\\\"hello\\\"`), byte string (`b\\\"hello\\\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`\'a\'`), string (`\\\"hello\\\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `\'` is `Joint` in `\'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`\'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span",3]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span",3]]],[11,"join","","Create a new span encompassing `self` and `other`.",4,[[["span",3]],[["span",3],["option",4]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[],["span",3]]],[11,"set_span","","Configures the span for only this token.",0,[[["span",3]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[],["delimiter",4]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",5,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",5,[[],["span",3]]],[11,"set_span","","Configures the span for this `Group`\'s delimiters, but not…",5,[[["span",3]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",6,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",7,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span",3]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"string","","String literal.",8,[[],["literal",3]]],[11,"character","","Character literal.",8,[[],["literal",3]]],[11,"byte_string","","Byte string literal.",8,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",8,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["span",3]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",8]],[["span",3],["option",4]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","proc_macro2::token_stream","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","proc_macro2","",4,[[["span",3]],["span",3]]],[11,"from","","",3,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",3,[[["tokentree",4]]]],[11,"from","","",0,[[["group",3]],["tokentree",4]]],[11,"from","","",0,[[["ident",3]],["tokentree",4]]],[11,"from","","",0,[[["punct",3]],["tokentree",4]]],[11,"from","","",0,[[["literal",3]],["tokentree",4]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"into_iter","","",3,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",10,[[],[["option",4],["tokentree",4]]]],[11,"clone","proc_macro2","",3,[[],["tokenstream",3]]],[11,"clone","","",4,[[],["span",3]]],[11,"clone","","",0,[[],["tokentree",4]]],[11,"clone","","",5,[[],["group",3]]],[11,"clone","","",1,[[],["delimiter",4]]],[11,"clone","","",6,[[],["punct",3]]],[11,"clone","","",2,[[],["spacing",4]]],[11,"clone","","",7,[[],["ident",3]]],[11,"clone","","",8,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",10,[[],["intoiter",3]]],[11,"default","proc_macro2","",3,[[]]],[11,"cmp","","",7,[[["ident",3]],["ordering",4]]],[11,"eq","","",1,[[["delimiter",4]]]],[11,"eq","","",2,[[["spacing",4]]]],[11,"eq","","",7,[[["ident",3]]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",7,[[["ident",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"from_str","","",3,[[],[["tokenstream",3],["lexerror",3],["result",4]]]],[11,"from_iter","","",3,[[["intoiterator",8]]]],[11,"from_iter","","",3,[[["intoiterator",8]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]},\
"quote":{"doc":"This crate provides the `quote!` macro for turning Rust…","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["span",3],["option",4]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["span",3],["option",4]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"radium":{"doc":"`radium` provides a series of helper traits providing a…","i":[[0,"marker","radium","Marker traits used by [`Radium`].",null,null],[8,"BitOps","radium::marker","Types supporting maybe-atomic bitwise operations.",null,null],[8,"NumericOps","","Types supporting maybe-atomic arithmetic operations.",null,null],[8,"Radium","radium","A maybe-atomic shared mutable fundamental type `T`.",null,null],[10,"new","","Creates a new value of this type.",0,[[]]],[10,"fence","","If the underlying value is atomic, calls `fence` with the…",0,[[["ordering",4]]]],[10,"get_mut","","Returns a mutable reference to the underlying value.",0,[[]]],[10,"into_inner","","Consumes the wrapper and returns the contained value.",0,[[]]],[10,"load","","Load a value from this object.",0,[[["ordering",4]]]],[10,"store","","Store a value in this object.",0,[[["ordering",4]]]],[10,"swap","","Swap with the value stored in this object.",0,[[["ordering",4]]]],[10,"compare_and_swap","","Stores a value into this object if the currently-stored…",0,[[["ordering",4]]]],[10,"compare_exchange","","Stores a value into this object if the currently-stored…",0,[[["ordering",4]],["result",4]]],[10,"compare_exchange_weak","","Stores a value into this object if the currently-stored…",0,[[["ordering",4]],["result",4]]],[10,"fetch_and","","Performs a bitwise \\\"and\\\" on the currently-stored value and…",0,[[["ordering",4]]]],[10,"fetch_nand","","Performs a bitwise \\\"nand\\\" on the currently-stored value…",0,[[["ordering",4]]]],[10,"fetch_or","","Performs a bitwise \\\"or\\\" on the currently-stored value and…",0,[[["ordering",4]]]],[10,"fetch_xor","","Performs a bitwise \\\"xor\\\" on the currently-stored value and…",0,[[["ordering",4]]]],[10,"fetch_add","","Adds `value` to the currently-stored value, wrapping on…",0,[[["ordering",4]]]],[10,"fetch_sub","","Subtracts `value` from the currently-stored value,…",0,[[["ordering",4]]]]],"p":[[8,"Radium"]]},\
"rand":{"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[]]],[10,"next_u64","","Return the next random `u64`.",0,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[],[["result",4],["error",3]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via `getrandom`.",1,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng",3]]],[5,"random","","Generates a random value using the thread-local random…",null,[[]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",3,[[],[["bernoulli",3],["bernoullierror",4],["result",4]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",3,[[],[["bernoulli",3],["bernoullierror",4],["result",4]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",4,[[],["binomial",3]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",5,[[],["cauchy",3]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",6,[[["into",8],["vec",3]],["dirichlet",3]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",6,[[],["dirichlet",3]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",7,[[],["exp",3]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",8,[[],["gamma",3]]],[11,"new","","Create a new chi-squared distribution with…",9,[[],["chisquared",3]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[],["fisherf",3]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[],["studentt",3]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",12,[[],["beta",3]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",13,[[],["normal",3]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",14,[[],["lognormal",3]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[],["pareto",3]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[],["poisson",3]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",17,[[],["triangular",3]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",18,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",19,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",19,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",19,[[]]],[10,"sample","","Sample a value.",19,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with…",19,[[]]],[8,"SampleBorrow","","Helper trait similar to `Borrow` but implemented only for…",null,null],[10,"borrow","","Immutably borrows from an owned value. See `Borrow::borrow`",20,[[]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",21,[[],["uniform",3]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",21,[[],["uniform",3]]],[11,"new","rand::distributions","Construct a new `UnitCircle` distribution.",22,[[],["unitcircle",3]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",23,[[],["unitspheresurface",3]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",24,[[],["weibull",3]]],[0,"weighted","","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",25,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",25,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",25,null],[13,"TooMany","","Too many weights are provided (length greater than…",25,null],[0,"alias_method","","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",26,null],[18,"ZERO","","Element of `Self` equivalent to 0.",26,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",26,[[],["option",4]]],[11,"sum","","Sums all values in slice `values`.",26,[[]]],[11,"new","","Creates a new [`WeightedIndex`].",27,[[["vec",3]],[["result",4],["weightederror",4]]]],[11,"new","rand::distributions::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[],[["weightederror",4],["result",4],["weightedindex",3]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",28,[[],[["weightederror",4],["result",4]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[],["distiter",3]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements `BlockRngCore`,…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[],["readrng",3]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",31,[[]]],[11,"reseed","","Reseed the internal PRNG.",31,[[],[["result",4],["error",3]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",33,[[]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[],["indexvec",4]]],[11,"len","","Returns the number of indices",34,[[]]],[11,"is_empty","","Returns `true` if the length is 0.",34,[[]]],[11,"index","","Return the value at the given `index`.",34,[[]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],["vec",3]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",34,[[],["indexveciter",4]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",34,[[],["indexvecintoiter",4]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",35,null],[10,"choose","","Returns a reference to one random element of the slice, or…",35,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",35,[[],["option",4]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",35,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to `choose`, but where the likelihood of each…",35,[[],[["weightederror",4],["result",4]]]],[10,"choose_weighted_mut","","Similar to `choose_mut`, but where the likelihood of each…",35,[[],[["result",4],["weightederror",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",35,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",35,[[]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",36,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",36,[[]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",36,[[],["vec",3]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the `Standard`…",37,[[]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[],["sampleuniform",8]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[],["distiter",3]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[]]],[11,"gen_ratio","","Return a bool with a probability of…",37,[[]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,[[]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","rand::distributions","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","rand::distributions::uniform","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","rand::distributions","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","rand::distributions::uniform","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","rand::distributions::weighted","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","rand::distributions::weighted::alias_method","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","rand::rngs","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","rand::rngs::adapter","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","rand::rngs::mock","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","rand::seq","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","rand::seq::index","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"next_u32","rand::rngs","",50,[[]]],[11,"next_u64","","",50,[[]]],[11,"fill_bytes","","",50,[[]]],[11,"try_fill_bytes","","",50,[[],[["result",4],["error",3]]]],[11,"fmt","rand","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand::rngs","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","rand::rngs","",50,[[],["osrng",3]]],[11,"source","rand","",39,[[],[["error",8],["option",4]]]],[11,"from","","",39,[[["nonzerou32",3]],["error",3]]],[11,"from","","",39,[[["error",3]],["error",3]]],[11,"read","","",0,[[],[["result",4],["error",3]]]],[11,"clone","rand::rngs","",50,[[],["osrng",3]]],[11,"new","rand::distributions::uniform","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",48,[[]]],[11,"new_inclusive","","",48,[[]]],[11,"sample","","",48,[[]]],[11,"sample_single","","",48,[[]]],[11,"new","","",48,[[]]],[11,"new_inclusive","","",48,[[]]],[11,"sample","","",48,[[]]],[11,"sample_single","","",48,[[]]],[11,"new","","",49,[[]]],[11,"new_inclusive","","",49,[[]]],[11,"sample","","",49,[[],["duration",3]]],[11,"sample","rand::distributions","",3,[[]]],[11,"sample","","",4,[[]]],[11,"sample","","",5,[[]]],[11,"sample","","",6,[[],["vec",3]]],[11,"sample","","",43,[[]]],[11,"sample","","",7,[[]]],[11,"sample","","",8,[[]]],[11,"sample","","",9,[[]]],[11,"sample","","",10,[[]]],[11,"sample","","",11,[[]]],[11,"sample","","",12,[[]]],[11,"sample","","",44,[[]]],[11,"sample","","",13,[[]]],[11,"sample","","",14,[[]]],[11,"sample","","",15,[[]]],[11,"sample","","",16,[[]]],[11,"sample","","",17,[[]]],[11,"sample","rand::distributions::uniform","",21,[[]]],[11,"sample","rand::distributions","",22,[[]]],[11,"sample","","",23,[[]]],[11,"sample","","",24,[[]]],[11,"sample","rand::distributions::weighted::alias_method","",27,[[]]],[11,"sample","rand::distributions::weighted","",28,[[]]],[11,"sample","rand::distributions","",46,[[]]],[11,"sample","","",41,[[]]],[11,"sample","","",40,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",41,[[]]],[11,"sample","","",40,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[],["nonzerou8",3]]],[11,"sample","","",46,[[],["nonzerou16",3]]],[11,"sample","","",46,[[],["nonzerou32",3]]],[11,"sample","","",46,[[],["nonzerou64",3]]],[11,"sample","","",46,[[],["nonzerou128",3]]],[11,"sample","","",46,[[],["nonzerousize",3]]],[11,"sample","","",46,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[],["option",4]]],[11,"sample","","",46,[[],["wrapping",3]]],[11,"from","rand::distributions::uniform","",21,[[["range",3]],["uniform",3]]],[11,"from","","",21,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","rand::seq::index","",34,[[["vec",3]]]],[11,"from","","",34,[[["vec",3]]]],[11,"len","rand::seq","",54,[[]]],[11,"next","rand::distributions","",45,[[],["option",4]]],[11,"size_hint","","",45,[[]]],[11,"next","rand::seq::index","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"next","","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"next","rand::seq","",54,[[],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"clone","rand::distributions","",3,[[],["bernoulli",3]]],[11,"clone","","",2,[[],["bernoullierror",4]]],[11,"clone","","",4,[[],["binomial",3]]],[11,"clone","","",5,[[],["cauchy",3]]],[11,"clone","","",6,[[],["dirichlet",3]]],[11,"clone","","",43,[[],["exp1",3]]],[11,"clone","","",7,[[],["exp",3]]],[11,"clone","","",8,[[],["gamma",3]]],[11,"clone","","",9,[[],["chisquared",3]]],[11,"clone","","",10,[[],["fisherf",3]]],[11,"clone","","",11,[[],["studentt",3]]],[11,"clone","","",12,[[],["beta",3]]],[11,"clone","","",44,[[],["standardnormal",3]]],[11,"clone","","",13,[[],["normal",3]]],[11,"clone","","",14,[[],["lognormal",3]]],[11,"clone","","",15,[[],["pareto",3]]],[11,"clone","","",16,[[],["poisson",3]]],[11,"clone","","",17,[[],["triangular",3]]],[11,"clone","rand::distributions::uniform","",21,[[],["uniform",3]]],[11,"clone","","",47,[[],["uniformint",3]]],[11,"clone","","",48,[[],["uniformfloat",3]]],[11,"clone","","",49,[[],["uniformduration",3]]],[11,"clone","rand::distributions","",22,[[],["unitcircle",3]]],[11,"clone","","",23,[[],["unitspheresurface",3]]],[11,"clone","","",24,[[],["weibull",3]]],[11,"clone","rand::distributions::weighted::alias_method","",27,[[]]],[11,"clone","rand::distributions::weighted","",28,[[],["weightedindex",3]]],[11,"clone","","",25,[[],["weightederror",4]]],[11,"clone","rand::distributions","",41,[[],["openclosed01",3]]],[11,"clone","","",40,[[],["open01",3]]],[11,"clone","","",46,[[],["standard",3]]],[11,"clone","rand::rngs::adapter","",31,[[],["reseedingrng",3]]],[11,"clone","rand::rngs::mock","",33,[[],["steprng",3]]],[11,"clone","rand::rngs","",51,[[],["stdrng",3]]],[11,"clone","","",52,[[],["threadrng",3]]],[11,"clone","rand::seq::index","",34,[[],["indexvec",4]]],[11,"clone","","",56,[[],["indexvecintoiter",4]]],[11,"default","rand::rngs","",32,[[]]],[11,"default","","",52,[[],["threadrng",3]]],[11,"eq","rand::distributions","",2,[[["bernoullierror",4]]]],[11,"eq","rand::distributions::weighted","",25,[[["weightederror",4]]]],[11,"eq","rand::seq::index","",34,[[["indexvec",4]]]],[11,"fmt","rand::distributions","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::uniform","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted::alias_method","",27,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",32,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::mock","",33,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq::index","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq","",54,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",53,[[["formatter",3]],["result",6]]],[11,"source","","",53,[[],[["error",8],["option",4]]]],[11,"next_u32","","",30,[[]]],[11,"next_u64","","",30,[[]]],[11,"fill_bytes","","",30,[[]]],[11,"try_fill_bytes","","",30,[[],[["result",4],["error",3]]]],[11,"next_u32","","",31,[[]]],[11,"next_u64","","",31,[[]]],[11,"fill_bytes","","",31,[[]]],[11,"try_fill_bytes","","",31,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs","",32,[[]]],[11,"next_u64","","",32,[[]]],[11,"fill_bytes","","",32,[[]]],[11,"try_fill_bytes","","",32,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs::mock","",33,[[]]],[11,"next_u64","","",33,[[]]],[11,"fill_bytes","","",33,[[]]],[11,"try_fill_bytes","","",33,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs","",51,[[]]],[11,"next_u64","","",51,[[]]],[11,"fill_bytes","","",51,[[]]],[11,"try_fill_bytes","","",51,[[],[["result",4],["error",3]]]],[11,"next_u32","","",52,[[]]],[11,"next_u64","","",52,[[]]],[11,"fill_bytes","","",52,[[]]],[11,"try_fill_bytes","","",52,[[],[["result",4],["error",3]]]],[11,"from_seed","","",51,[[]]],[11,"from_rng","","",51,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",39,[[],["error",3]]],[11,"inner","","Reference the inner error (`std` only)",39,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",39,[[],[["error",8],["box",3]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",39,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",39,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",39,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",39,[[],[["nonzerou32",3],["option",4]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[4,"WeightedError"],[8,"Weight"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Exp1"],[3,"StandardNormal"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[]]],[11,"set_stream","","Set the stream number.",0,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_stream","","Set the stream number.",1,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[]]],[11,"set_stream","","Set the stream number.",2,[[]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[["chacha20core",3]]]],[11,"from","","",1,[[["chacha12core",3]]]],[11,"from","","",2,[[["chacha8core",3]]]],[11,"clone","","",4,[[],["chacha20core",3]]],[11,"clone","","",0,[[],["chacha20rng",3]]],[11,"clone","","",3,[[],["chacha12core",3]]],[11,"clone","","",1,[[],["chacha12rng",3]]],[11,"clone","","",5,[[],["chacha8core",3]]],[11,"clone","","",2,[[],["chacha8rng",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"generate","","",4,[[]]],[11,"generate","","",3,[[]]],[11,"generate","","",5,[[]]],[11,"next_u32","","",0,[[]]],[11,"next_u64","","",0,[[]]],[11,"fill_bytes","","",0,[[]]],[11,"try_fill_bytes","","",0,[[],[["result",4],["error",3]]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["result",4],["error",3]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["result",4],["error",3]]]],[11,"from_seed","","",4,[[]]],[11,"from_seed","","",0,[[]]],[11,"from_seed","","",3,[[]]],[11,"from_seed","","",1,[[]]],[11,"from_seed","","",5,[[]]],[11,"from_seed","","",2,[[]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[]]],[11,"inner","","Reference the inner error (`std` only)",0,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["error",8],["box",3]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",0,[[],[["option",4],["nonzerou32",3]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[]]],[10,"next_u64","","Return the next random `u64`.",4,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[],[["error",3],["result",4]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via `getrandom`.",5,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","rand_core::block","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"next_u32","rand_core","",6,[[]]],[11,"next_u64","","",6,[[]]],[11,"fill_bytes","","",6,[[]]],[11,"try_fill_bytes","","",6,[[],[["error",3],["result",4]]]],[11,"from_seed","rand_core::block","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[]]],[11,"from_rng","","",2,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","rand_core","",0,[[["nonzerou32",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]],[11,"clone","rand_core","",6,[[],["osrng",3]]],[11,"default","","",6,[[],["osrng",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"read","","",4,[[],[["error",3],["result",4]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]},\
"rand_distr":{"doc":"Generating random samples from probability distributions.","i":[[8,"Distribution","rand_distr","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",0,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",0,[[],["distiter",3]]],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Bernoulli","","The Bernoulli distribution.",null,null],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand_distr::uniform","Sample values uniformly between two bounds.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",1,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",2,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",2,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",2,[[]]],[10,"sample","","Sample a value.",2,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with…",2,[[]]],[8,"SampleBorrow","","Helper trait similar to `Borrow` but implemented only for…",null,null],[10,"borrow","","Immutably borrows from an owned value. See `Borrow::borrow`",3,[[]]],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[0,"weighted","rand_distr","Weighted index sampling",null,null],[0,"alias_method","rand_distr::weighted","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand_distr::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",4,null],[18,"ZERO","","Element of `Self` equivalent to 0.",4,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",4,[[],["option",4]]],[11,"sum","","Sums all values in slice `values`.",4,[[]]],[3,"WeightedIndex","rand_distr::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",5,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",5,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",5,null],[13,"TooMany","","Too many weights are provided (length greater than…",5,null],[3,"UnitSphere","rand_distr","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"UnitBall","","Samples uniformly from the unit ball (surface and…",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitDisc","","Samples uniformly from the unit disc in two dimensions.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Pert","","The PERT distribution.",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[4,"GammaError","","Error type returned from `Gamma::new`.",null,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",6,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",6,null],[13,"ScaleTooLarge","","`1 / scale == 0`.",6,null],[4,"ChiSquaredError","","Error type returned from `ChiSquared::new` and…",null,null],[13,"DoFTooSmall","","`0.5 * k <= 0` or `nan`.",7,null],[4,"FisherFError","","Error type returned from `FisherF::new`.",null,null],[13,"MTooSmall","","`m <= 0` or `nan`.",8,null],[13,"NTooSmall","","`n <= 0` or `nan`.",8,null],[4,"BetaError","","Error type returned from `Beta::new`.",null,null],[13,"AlphaTooSmall","","`alpha <= 0` or `nan`.",9,null],[13,"BetaTooSmall","","`beta <= 0` or `nan`.",9,null],[4,"NormalError","","Error type returned from `Normal::new` and `LogNormal::new`.",null,null],[13,"StdDevTooSmall","","`std_dev < 0` or `nan`.",10,null],[4,"ExpError","","Error type returned from `Exp::new`.",null,null],[13,"LambdaTooSmall","","`lambda <= 0` or `nan`.",11,null],[4,"ParetoError","","Error type returned from `Pareto::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",12,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",12,null],[4,"PertError","","Error type returned from [`Pert`] constructors.",null,null],[13,"RangeTooSmall","","`max < min` or `min` or `max` is NaN.",13,null],[13,"ModeRange","","`mode < min` or `mode > max` or `mode` is NaN.",13,null],[13,"ShapeTooSmall","","`shape < 0` or `shape` is NaN",13,null],[4,"PoissonError","","Error type returned from `Poisson::new`.",null,null],[13,"ShapeTooSmall","","`lambda <= 0` or `nan`.",14,null],[4,"BinomialError","","Error type returned from `Binomial::new`.",null,null],[13,"ProbabilityTooSmall","","`p < 0` or `nan`.",15,null],[13,"ProbabilityTooLarge","","`p > 1`.",15,null],[4,"CauchyError","","Error type returned from `Cauchy::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",16,null],[4,"DirichletError","","Error type returned from `Dirchlet::new`.",null,null],[13,"AlphaTooShort","","`alpha.len() < 2`.",17,null],[13,"AlphaTooSmall","","`alpha <= 0.0` or `nan`.",17,null],[13,"SizeTooSmall","","`size < 2`.",17,null],[4,"TriangularError","","Error type returned from [`Triangular::new`].",null,null],[13,"RangeTooSmall","","`max < min` or `min` or `max` is NaN.",18,null],[13,"ModeRange","","`mode < min` or `mode > max` or `mode` is NaN.",18,null],[4,"WeibullError","","Error type returned from `Weibull::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",19,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",19,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",20,[[],[["gamma",3],["error",4],["result",4]]]],[11,"new","","Create a new chi-squared distribution with…",21,[[],[["result",4],["chisquared",3],["chisquarederror",4]]]],[11,"new","","Create a new `FisherF` distribution, with the given…",22,[[],[["result",4],["fisherferror",4],["fisherf",3]]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",23,[[],[["result",4],["chisquarederror",4],["studentt",3]]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",24,[[],[["result",4],["beta",3],["betaerror",4]]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",25,[[],[["normal",3],["result",4],["error",4]]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",26,[[],[["result",4],["lognormal",3],["error",4]]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",27,[[],[["error",4],["exp",3],["result",4]]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",28,[[],[["pareto",3],["error",4],["result",4]]]],[11,"new","","Set up the PERT distribution with defined `min`, `max` and…",29,[[],[["pert",3],["perterror",4],["result",4]]]],[11,"new_with_shape","","Set up the PERT distribution with defined `min`, `max`,…",29,[[],[["pert",3],["perterror",4],["result",4]]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",30,[[],[["result",4],["error",4],["poisson",3]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",31,[[],[["binomial",3],["result",4],["error",4]]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",32,[[],[["result",4],["cauchy",3],["error",4]]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",33,[[["into",8],["vec",3]],[["dirichlet",3],["result",4],["error",4]]]],[11,"new_with_size","","Construct a new `Dirichlet` with the given shape parameter…",33,[[],[["dirichlet",3],["result",4],["error",4]]]],[11,"new","","Set up the Triangular distribution with defined `min`,…",34,[[],[["result",4],["triangular",3],["triangularerror",4]]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",35,[[],[["weibull",3],["error",4],["result",4]]]],[8,"Float","","Trait for floating-point scalar types",null,null],[10,"pi","","The constant π",36,[[]]],[10,"from","","Support approximate representation of a f64 value",36,[[]]],[10,"to_u64","","Support converting to an unsigned integer.",36,[[],["option",4]]],[10,"abs","","Take the absolute value of self",36,[[]]],[10,"floor","","Take the largest integer less than or equal to self",36,[[]]],[10,"exp","","Take the exponential of self",36,[[]]],[10,"ln","","Take the natural logarithm of self",36,[[]]],[10,"sqrt","","Take square root of self",36,[[]]],[10,"powf","","Take self to a floating-point power",36,[[]]],[10,"tan","","Take the tangent of self",36,[[]]],[10,"log_gamma","","Take the logarithm of the gamma function of self",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","rand_distr::uniform","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","rand_distr","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","rand_distr::uniform","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","rand_distr::weighted::alias_method","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","rand_distr::weighted","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","rand_distr","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"eq","rand_distr::weighted","",5,[[["weightederror",4]]]],[11,"new","rand_distr::uniform","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",45,[[],["uniformfloat",3]]],[11,"new_inclusive","","",45,[[],["uniformfloat",3]]],[11,"sample","","",45,[[]]],[11,"sample_single","","",45,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",45,[[],["uniformfloat",3]]],[11,"new_inclusive","","",45,[[],["uniformfloat",3]]],[11,"sample","","",45,[[]]],[11,"sample_single","","",45,[[]]],[11,"new","","",46,[[],["uniformduration",3]]],[11,"new_inclusive","","",46,[[],["uniformduration",3]]],[11,"sample","","",46,[[],["duration",3]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"sample","rand_distr","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou32",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","rand_distr::uniform","",40,[[]]],[11,"sample","rand_distr","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","rand_distr::weighted::alias_method","",47,[[]]],[11,"sample","rand_distr","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou16",3]]],[11,"sample","","",41,[[]]],[11,"sample","","",38,[[],["option",4]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","rand_distr::weighted","",48,[[]]],[11,"sample","rand_distr","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou128",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",39,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerousize",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou8",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou64",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",41,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["wrapping",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"clone","rand_distr::uniform","",45,[[],["uniformfloat",3]]],[11,"clone","rand_distr","",38,[[],["standard",3]]],[11,"clone","","",42,[[],["open01",3]]],[11,"clone","rand_distr::uniform","",46,[[],["uniformduration",3]]],[11,"clone","rand_distr","",43,[[],["bernoulli",3]]],[11,"clone","rand_distr::weighted","",5,[[],["weightederror",4]]],[11,"clone","","",48,[[],["weightedindex",3]]],[11,"clone","rand_distr::weighted::alias_method","",47,[[],["weightedindex",3]]],[11,"clone","rand_distr","",41,[[],["openclosed01",3]]],[11,"clone","rand_distr::uniform","",44,[[],["uniformint",3]]],[11,"clone","","",40,[[],["uniform",3]]],[11,"from","","",40,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","","",40,[[["range",3]],["uniform",3]]],[11,"next","rand_distr","",37,[[],["option",4]]],[11,"size_hint","","",37,[[]]],[11,"fmt","rand_distr::weighted","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand_distr","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand_distr::weighted","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand_distr","",38,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand_distr::uniform","",45,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",46,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand_distr","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",37,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand_distr::uniform","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand_distr::weighted::alias_method","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand_distr::uniform","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","rand_distr","",49,[[],["unitsphere",3]]],[11,"clone","","",50,[[],["unitball",3]]],[11,"clone","","",51,[[],["unitcircle",3]]],[11,"clone","","",52,[[],["unitdisc",3]]],[11,"clone","","",20,[[],["gamma",3]]],[11,"clone","","",6,[[],["error",4]]],[11,"clone","","",21,[[],["chisquared",3]]],[11,"clone","","",7,[[],["chisquarederror",4]]],[11,"clone","","",22,[[],["fisherf",3]]],[11,"clone","","",8,[[],["fisherferror",4]]],[11,"clone","","",23,[[],["studentt",3]]],[11,"clone","","",24,[[],["beta",3]]],[11,"clone","","",9,[[],["betaerror",4]]],[11,"clone","","",53,[[],["standardnormal",3]]],[11,"clone","","",25,[[],["normal",3]]],[11,"clone","","",10,[[],["error",4]]],[11,"clone","","",26,[[],["lognormal",3]]],[11,"clone","","",54,[[],["exp1",3]]],[11,"clone","","",27,[[],["exp",3]]],[11,"clone","","",11,[[],["error",4]]],[11,"clone","","",28,[[],["pareto",3]]],[11,"clone","","",12,[[],["error",4]]],[11,"clone","","",29,[[],["pert",3]]],[11,"clone","","",13,[[],["perterror",4]]],[11,"clone","","",30,[[],["poisson",3]]],[11,"clone","","",14,[[],["error",4]]],[11,"clone","","",31,[[],["binomial",3]]],[11,"clone","","",15,[[],["error",4]]],[11,"clone","","",32,[[],["cauchy",3]]],[11,"clone","","",16,[[],["error",4]]],[11,"clone","","",33,[[],["dirichlet",3]]],[11,"clone","","",17,[[],["error",4]]],[11,"clone","","",34,[[],["triangular",3]]],[11,"clone","","",18,[[],["triangularerror",4]]],[11,"clone","","",35,[[],["weibull",3]]],[11,"clone","","",19,[[],["error",4]]],[11,"eq","","",6,[[["error",4]]]],[11,"eq","","",7,[[["chisquarederror",4]]]],[11,"eq","","",8,[[["fisherferror",4]]]],[11,"eq","","",9,[[["betaerror",4]]]],[11,"eq","","",10,[[["error",4]]]],[11,"eq","","",11,[[["error",4]]]],[11,"eq","","",12,[[["error",4]]]],[11,"eq","","",13,[[["perterror",4]]]],[11,"eq","","",14,[[["error",4]]]],[11,"eq","","",15,[[["error",4]]]],[11,"eq","","",16,[[["error",4]]]],[11,"eq","","",17,[[["error",4]]]],[11,"eq","","",18,[[["triangularerror",4]]]],[11,"eq","","",19,[[["error",4]]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"sample","","",49,[[]]],[11,"sample","","",50,[[]]],[11,"sample","","",51,[[]]],[11,"sample","","",52,[[]]],[11,"sample","","",20,[[]]],[11,"sample","","",21,[[]]],[11,"sample","","",22,[[]]],[11,"sample","","",23,[[]]],[11,"sample","","",24,[[]]],[11,"sample","","",53,[[]]],[11,"sample","","",53,[[]]],[11,"sample","","",25,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",54,[[]]],[11,"sample","","",54,[[]]],[11,"sample","","",27,[[]]],[11,"sample","","",28,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",31,[[]]],[11,"sample","","",32,[[]]],[11,"sample","","",33,[[],["vec",3]]],[11,"sample","","",34,[[]]],[11,"sample","","",35,[[]]],[11,"new","rand_distr::uniform","Create a new `Uniform` instance which samples uniformly…",40,[[],["uniform",3]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",40,[[],["uniform",3]]],[11,"new","rand_distr","Construct a new `Bernoulli` with the given probability of…",43,[[],[["bernoulli",3],["result",4],["bernoullierror",4]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",43,[[],[["bernoulli",3],["result",4],["bernoullierror",4]]]],[11,"new","rand_distr::weighted::alias_method","Creates a new [`WeightedIndex`].",47,[[["vec",3]],[["result",4],["weightedindex",3],["weightederror",4]]]],[11,"new","rand_distr::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",48,[[],[["result",4],["weightedindex",3],["weightederror",4]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",48,[[],[["result",4],["weightederror",4]]]]],"p":[[8,"Distribution"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[8,"Weight"],[4,"WeightedError"],[4,"GammaError"],[4,"ChiSquaredError"],[4,"FisherFError"],[4,"BetaError"],[4,"NormalError"],[4,"ExpError"],[4,"ParetoError"],[4,"PertError"],[4,"PoissonError"],[4,"BinomialError"],[4,"CauchyError"],[4,"DirichletError"],[4,"TriangularError"],[4,"WeibullError"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Pert"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Float"],[3,"DistIter"],[3,"Standard"],[3,"Alphanumeric"],[3,"Uniform"],[3,"OpenClosed01"],[3,"Open01"],[3,"Bernoulli"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"WeightedIndex"],[3,"WeightedIndex"],[3,"UnitSphere"],[3,"UnitBall"],[3,"UnitCircle"],[3,"UnitDisc"],[3,"StandardNormal"],[3,"Exp1"]]},\
"rawpointer":{"doc":"","i":[[5,"ptrdistance","rawpointer","Return the number of elements of `T` from `start` to…",null,[[]]],[8,"PointerExt","","Extension methods for raw pointers",null,null],[10,"offset","","",0,[[]]],[11,"pre_inc","","Increment the pointer by 1, and return its new value.",0,[[]]],[11,"post_inc","","Increment the pointer by 1, but return its old value.",0,[[]]],[11,"pre_dec","","Decrement the pointer by 1, and return its new value.",0,[[]]],[11,"post_dec","","Decrement the pointer by 1, but return its old value.",0,[[]]],[11,"inc","","Increment by 1",0,[[]]],[11,"dec","","Decrement by 1",0,[[]]],[11,"stride_offset","","Offset the pointer by `s` multiplied by `index`.",0,[[]]]],"p":[[8,"PointerExt"]]},\
"rayon":{"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,"FnContext","rayon","Provides the calling context to a closure called by…",null,null],[3,"ThreadBuilder","","Thread builder used for customization via…",null,null],[3,"ThreadPool","","Represents a user created thread-pool.",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new `ThreadPool` or to configure the…",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],["option",4]]],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[]]],[5,"scope","","Create a \\\"fork-join\\\" scope `s` and invokes the closure…",null,[[]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"scope_fifo","","Create a \\\"fork-join\\\" scope `s` with FIFO order, and…",null,[[]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[0,"collections","","Parallel iterator types for standard collections",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary…",null,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",null,null],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",null,null],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a…",null,null],[0,"iter","rayon","Traits for writing parallel programs using an…",null,null],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a…",null,null],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one…",null,null],[3,"Chunks","","`Chunks` is an iterator that groups elements of an…",null,null],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count…",null,null],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out…",null,null],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to…",null,null],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens…",null,null],[3,"Flatten","","`Flatten` turns each element to an iterator, then flattens…",null,null],[3,"Fold","","`Fold` is an iterator that applies a function over an…",null,null],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an…",null,null],[3,"TryFold","","`TryFold` is an iterator that applies a function over an…",null,null],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over…",null,null],[3,"Skip","","`Skip` is an iterator that skips over the first `n`…",null,null],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a…",null,null],[3,"Take","","`Take` is an iterator that iterates over the first `n`…",null,null],[3,"Map","","`Map` is an iterator that transforms the elements of an…",null,null],[3,"MapInit","","`MapInit` is an iterator that transforms the elements of…",null,null],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of…",null,null],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a…",null,null],[3,"ZipEq","","An `IndexedParallelIterator` that iterates over two…",null,null],[3,"MultiZip","","`MultiZip` is an iterator that zips up a tuple of parallel…",null,null],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of…",null,null],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly…",null,null],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular…",null,null],[3,"Update","","`Update` is an iterator that mutates the elements of an…",null,null],[3,"Rev","","`Rev` is an iterator that produces elements in reverse…",null,null],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on…",null,null],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on…",null,null],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an…",null,null],[3,"Copied","","`Copied` is an iterator that copies the elements of an…",null,null],[3,"Inspect","","`Inspect` is an iterator that calls a function with a…",null,null],[3,"PanicFuse","","`PanicFuse` is an adaptor that wraps an iterator with a…",null,null],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements…",null,null],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",null,null],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",null,null],[3,"Empty","","Iterator adaptor for the `empty()` function.",null,null],[3,"Once","","Iterator adaptor for the `once()` function.",null,null],[5,"split","","The `split` function takes arbitrary data and a closure…",null,[[],["split",3]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt`…",null,[[["clone",8],["send",8]],[["send",8],["repeat",3],["clone",8]]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of…",null,[[["clone",8],["send",8]],[["repeatn",3],["clone",8],["send",8]]]],[5,"empty","","Creates a parallel iterator that produces nothing.",null,[[],[["empty",3],["send",8]]]],[5,"once","","Creates a parallel iterator that produces an element…",null,[[["send",8]],[["send",8],["once",3]]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.…",null,null],[5,"bridge","rayon::iter::plumbing","This helper function is used to \\\"connect\\\" a parallel…",null,[[]]],[5,"bridge_producer_consumer","","This helper function is used to \\\"connect\\\" a producer and a…",null,[[]]],[5,"bridge_unindexed","","A variant of `bridge_producer_consumer` where the producer…",null,[[]]],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure,…",null,null],[16,"Output","","The type of value returned by this callback. Analogous to…",1,null],[10,"callback","","Invokes the callback with the given producer as argument.…",1,[[]]],[8,"Producer","","A `Producer` is effectively a \\\"splittable `IntoIterator`\\\".…",null,null],[16,"Item","","The type of item that will be produced by this producer…",2,null],[16,"IntoIter","","The type of iterator we will become.",2,null],[10,"into_iter","","Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len","","The minimum number of items that we will process…",2,[[]]],[11,"max_len","","The maximum number of items that we will process…",2,[[]]],[10,"split_at","","Split into two producers; one produces items `0..index`,…",2,[[]]],[11,"fold_with","","Iterate the producer, feeding each element to `folder`,…",2,[[]]],[8,"Consumer","","A consumer is effectively a generalized \\\"fold\\\" operation,…",null,null],[16,"Folder","","The type of folder that this consumer can be converted into.",3,null],[16,"Reducer","","The type of reducer that is produced if this consumer is…",3,null],[16,"Result","","The type of result that this consumer will ultimately…",3,null],[10,"split_at","","Divide the consumer into two consumers, one processing…",3,[[]]],[10,"into_folder","","Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full","","Hint whether this `Consumer` would like to stop processing…",3,[[]]],[8,"Folder","","The `Folder` trait encapsulates the standard fold…",null,null],[16,"Result","","The type of result that will ultimately be produced by the…",4,null],[10,"consume","","Consume next item and return new sequential state.",4,[[]]],[11,"consume_iter","","Consume items from the iterator until full, and return new…",4,[[]]],[10,"complete","","Finish consuming items, produce final result.",4,[[]]],[10,"full","","Hint whether this `Folder` would like to stop processing…",4,[[]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a…",null,null],[10,"reduce","","Reduce two final results into one; this is executed after…",5,[[]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers…",null,null],[10,"split_off_left","","Splits off a \\\"left\\\" consumer and returns it. The `self`…",6,[[]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results…",6,[[]]],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact…",null,null],[16,"Item","","The type of item returned by this producer.",7,null],[10,"split","","Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with","","Iterate the producer, feeding each element to `folder`,…",7,[[]]],[11,"take","rayon::iter","Take only `n` repeats of the element, similar to the…",8,[[],["repeatn",3]]],[11,"zip","","Iterate tuples repeating the element with items from…",8,[[],[["repeatn",3],["zip",3]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge",3]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a…",null,null],[16,"Iter","","The parallel iterator type that will be created.",10,null],[16,"Item","","The type of item that the parallel iterator will produce.",10,null],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,[[]]],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a…",null,null],[16,"Iter","","The type of the parallel iterator that will be returned.",11,null],[16,"Item","","The type of item that the parallel iterator will produce.…",11,null],[10,"par_iter","","Converts `self` into a parallel iterator.",11,[[]]],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to…",null,null],[16,"Iter","","The type of iterator that will be created.",12,null],[16,"Item","","The type of item that will be produced; this is typically…",12,null],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,[[]]],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. For…",13,null],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",13,[[]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",13,[[]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item…",13,[[]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",13,[[]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",13,[[]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init`…",13,[[]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",13,[[],["map",3]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",13,[[],["mapwith",3]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each…",13,[[],["mapinit",3]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",13,[[],["cloned",3]]],[11,"copied","","Creates an iterator which copies all of its elements. This…",13,[[],["copied",3]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",13,[[],["inspect",3]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[],["update",3]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",13,[[],["filter",3]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",13,[[],["filtermap",3]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",13,[[],["flatmap",3]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten",3]]],[11,"reduce","","Reduces the items in the iterator into one item using…",13,[[]]],[11,"reduce_with","","Reduces the items in the iterator into one item using…",13,[[],["option",4]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",13,[[]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",13,[[],["option",4]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",13,[[],["fold",3]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",13,[[],["foldwith",3]]],[11,"try_fold","","Perform a fallible parallel fold.",13,[[],["tryfold",3]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init`…",13,[[],["tryfoldwith",3]]],[11,"sum","","Sums up the items in the iterator.",13,[[]]],[11,"product","","Multiplies all the items in the iterator.",13,[[]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",13,[[],["option",4]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",13,[[],["option",4]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",13,[[],["option",4]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",13,[[],["option",4]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",13,[[],["option",4]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",13,[[],["option",4]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[],["chain",3]]],[11,"find_any","","Searches for some item in the parallel iterator that…",13,[[],["option",4]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",13,[[],["option",4]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",13,[[],["option",4]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel…",13,[[],["option",4]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel…",13,[[],["option",4]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel…",13,[[],["option",4]]],[11,"any","","Searches for some item in the parallel iterator that…",13,[[]]],[11,"all","","Tests that every item in the parallel iterator matches the…",13,[[]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",13,[[],["whilesome",3]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse",3]]],[11,"collect","","Create a fresh collection containing all the element…",13,[[]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",13,[[]]],[11,"intersperse","","Intersperses clones of an element between items of this…",13,[[],["intersperse",3]]],[10,"drive_unindexed","","Internal method used to define the behavior of this…",13,[[]]],[11,"opt_len","","Internal method used to define the behavior of this…",13,[[],["option",4]]],[8,"IndexedParallelIterator","","An iterator that supports \\\"random access\\\" to its data,…",null,null],[11,"collect_into_vec","","Collects the results of the iterator into the specified…",14,[[["vec",3]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified…",14,[[["vec",3],["vec",3]]]],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[],["zip",3]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have…",14,[[],["zipeq",3]]],[11,"interleave","","Interleave elements of this iterator and the other given…",14,[[],["interleave",3]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given…",14,[[],["interleaveshortest",3]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",14,[[],["chunks",3]]],[11,"cmp","","Lexicographically compares the elements of this…",14,[[],["ordering",4]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",14,[[],[["ordering",4],["option",4]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"le","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"enumerate","","Yields an index along with each item.",14,[[],["enumerate",3]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[],["skip",3]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[],["take",3]]],[11,"position_any","","Searches for some item in the parallel iterator that…",14,[[],["option",4]]],[11,"position_first","","Searches for the sequentially first item in the parallel…",14,[[],["option",4]]],[11,"position_last","","Searches for the sequentially last item in the parallel…",14,[[],["option",4]]],[11,"rev","","Produces a new iterator with the elements of this iterator…",14,[[],["rev",3]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in…",14,[[],["minlen",3]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in…",14,[[],["maxlen",3]]],[10,"len","","Produces an exact count of how many items this iterator…",14,[[]]],[10,"drive","","Internal method used to define the behavior of this…",14,[[["consumer",8]]]],[10,"with_producer","","Internal method used to define the behavior of this…",14,[[["producercallback",8]]]],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a…",null,null],[10,"from_par_iter","","Creates an instance of the collection from the parallel…",15,[[]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items…",null,null],[10,"par_extend","","Extends an instance of the collection with the elements…",16,[[]]],[0,"option","rayon","Parallel iterator types for options",null,null],[3,"IntoIter","rayon::option","A parallel iterator over the value in `Some` variant of an…",null,null],[3,"Iter","","A parallel iterator over a reference to the `Some` variant…",null,null],[3,"IterMut","","A parallel iterator over a mutable reference to the `Some`…",null,null],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",null,null],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge",3]]],[0,"range","rayon","Parallel iterator types for ranges, the type for values…",null,null],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all…",null,null],[0,"range_inclusive","rayon","Parallel iterator types for inclusive ranges, the type for…",null,null],[3,"Iter","rayon::range_inclusive","Parallel iterator over an inclusive range, implemented for…",null,null],[0,"result","rayon","Parallel iterator types for results",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[0,"slice","rayon","Parallel iterator types for slices",null,null],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of…",null,null],[3,"Windows","","Parallel iterator over immutable overlapping windows of a…",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a…",null,null],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a…",null,null],[8,"ParallelSlice","","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest…",17,[[]]],[11,"par_split","","Returns a parallel iterator over subslices separated by…",17,[[],["split",3]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of…",17,[[],["windows",3]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size`…",17,[[],["chunks",3]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement…",18,[[]]],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices…",18,[[],["splitmut",3]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size`…",18,[[],["chunksmut",3]]],[11,"par_sort","","Sorts the slice in parallel.",18,[[]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",18,[[]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",18,[[]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the…",18,[[]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function,…",18,[[]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction…",18,[[]]],[0,"str","rayon","Parallel iterator types for strings",null,null],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",null,null],[3,"CharIndices","","Parallel iterator over the characters of a string, with…",null,null],[3,"Bytes","","Parallel iterator over the bytes of a string",null,null],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a…",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[3,"Matches","","Parallel iterator over substrings that match a pattern",null,null],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern,…",null,null],[8,"ParallelString","","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement…",19,[[]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",19,[[],["chars",3]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a…",19,[[],["charindices",3]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",19,[[],["bytes",3]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",19,[[],["encodeutf16",3]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",19,[[["pattern",8]],[["split",3],["pattern",8]]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by…",19,[[["pattern",8]],[["splitterminator",3],["pattern",8]]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string,…",19,[[],["lines",3]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a…",19,[[],["splitwhitespace",3]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a…",19,[[["pattern",8]],[["matches",3],["pattern",8]]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a…",19,[[["pattern",8]],[["matchindices",3],["pattern",8]]]],[0,"vec","rayon","Parallel iterator types for vectors (`Vec<T>`)",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[11,"from","rayon","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::binary_heap","",27,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_par_iter","","",28,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::btree_map","",29,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_par_iter","","",30,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_par_iter","","",31,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::btree_set","",32,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_par_iter","","",33,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::hash_map","",34,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_par_iter","","",35,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_par_iter","","",36,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::hash_set","",37,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_par_iter","","",38,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::linked_list","",39,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_par_iter","","",40,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_par_iter","","",41,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::vec_deque","",42,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_par_iter","","",43,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_par_iter","","",44,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_par_iter","rayon::iter","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_par_iter","","",45,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_par_iter","","",46,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_par_iter","","",47,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_par_iter","","",48,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_par_iter","","",49,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_par_iter","","",50,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_par_iter","","",51,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_par_iter","","",52,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_par_iter","","",53,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_par_iter","","",54,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_par_iter","","",55,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_par_iter","","",56,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_par_iter","","",57,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_par_iter","","",58,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_par_iter","","",59,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_par_iter","","",60,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_par_iter","","",61,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_par_iter","","",62,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_par_iter","","",63,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_par_iter","","",64,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_par_iter","","",65,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_par_iter","","",66,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_par_iter","","",67,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_par_iter","","",68,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_par_iter","","",69,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_par_iter","","",70,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_par_iter","","",71,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_par_iter","","",72,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_par_iter","","",73,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_par_iter","","",74,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_par_iter","","",75,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_par_iter","","",76,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_par_iter","","",77,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_par_iter","","",8,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_par_iter","","",78,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_par_iter","","",79,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_par_iter","","",80,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_par_iter","rayon::option","",81,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_par_iter","","",82,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_par_iter","","",83,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_par_iter","rayon::range","",84,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_par_iter","rayon::range_inclusive","",85,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_par_iter","rayon::result","",86,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_par_iter","","",87,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_par_iter","","",88,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_par_iter","rayon::slice","",89,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_par_iter","","",90,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_par_iter","","",91,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_par_iter","","",92,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_par_iter","","",93,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"into_par_iter","","",94,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_par_iter","","",95,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_par_iter","rayon::str","",96,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"into_par_iter","","",97,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_par_iter","","",98,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_par_iter","","",99,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"into_par_iter","","",100,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_par_iter","","",101,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"into_par_iter","","",102,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_par_iter","","",103,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"into_par_iter","","",104,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"into_par_iter","","",105,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"into_par_iter","rayon::vec","",106,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"next","rayon::iter","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"from","","",0,[[["result",4]],["either",4]]],[11,"next_back","","",0,[[],["option",4]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"extend","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"clone","","",0,[[],["either",4]]],[11,"deref_mut","","",0,[[]]],[11,"partial_cmp","","",0,[[["either",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"fmt","rayon","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"description","","",23,[[]]],[11,"drop","","",22,[[]]],[11,"fmt","","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",24,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",21,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",24,[[],[["defaultspawn",3],["threadpoolbuilder",3]]]],[11,"drive_unindexed","rayon::collections::binary_heap","",27,[[]]],[11,"opt_len","","",27,[[],["option",4]]],[11,"drive_unindexed","","",28,[[]]],[11,"opt_len","","",28,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::btree_map","",29,[[]]],[11,"opt_len","","",29,[[],["option",4]]],[11,"drive_unindexed","","",30,[[]]],[11,"opt_len","","",30,[[],["option",4]]],[11,"drive_unindexed","","",31,[[]]],[11,"opt_len","","",31,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::btree_set","",32,[[]]],[11,"opt_len","","",32,[[],["option",4]]],[11,"drive_unindexed","","",33,[[]]],[11,"opt_len","","",33,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::hash_map","",34,[[]]],[11,"opt_len","","",34,[[],["option",4]]],[11,"drive_unindexed","","",35,[[]]],[11,"opt_len","","",35,[[],["option",4]]],[11,"drive_unindexed","","",36,[[]]],[11,"opt_len","","",36,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::hash_set","",37,[[]]],[11,"opt_len","","",37,[[],["option",4]]],[11,"drive_unindexed","","",38,[[]]],[11,"opt_len","","",38,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::linked_list","",39,[[]]],[11,"opt_len","","",39,[[],["option",4]]],[11,"drive_unindexed","","",40,[[]]],[11,"opt_len","","",40,[[],["option",4]]],[11,"drive_unindexed","","",41,[[]]],[11,"opt_len","","",41,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::vec_deque","",42,[[]]],[11,"opt_len","","",42,[[],["option",4]]],[11,"drive_unindexed","","",43,[[]]],[11,"opt_len","","",43,[[],["option",4]]],[11,"drive_unindexed","","",44,[[]]],[11,"opt_len","","",44,[[],["option",4]]],[11,"drive_unindexed","rayon::iter","",45,[[]]],[11,"drive_unindexed","","",46,[[]]],[11,"opt_len","","",46,[[],["option",4]]],[11,"drive_unindexed","","",47,[[]]],[11,"opt_len","","",47,[[],["option",4]]],[11,"drive_unindexed","","",48,[[]]],[11,"opt_len","","",48,[[],["option",4]]],[11,"drive_unindexed","","",49,[[]]],[11,"drive_unindexed","","",50,[[]]],[11,"drive_unindexed","","",51,[[]]],[11,"drive_unindexed","","",52,[[]]],[11,"drive_unindexed","","",53,[[]]],[11,"drive_unindexed","","",54,[[]]],[11,"drive_unindexed","","",55,[[]]],[11,"drive_unindexed","","",56,[[]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],["option",4]]],[11,"drive_unindexed","","",58,[[]]],[11,"drive_unindexed","","",59,[[]]],[11,"opt_len","","",59,[[],["option",4]]],[11,"drive_unindexed","","",60,[[]]],[11,"opt_len","","",60,[[],["option",4]]],[11,"drive_unindexed","","",62,[[]]],[11,"opt_len","","",62,[[],["option",4]]],[11,"drive_unindexed","","",61,[[]]],[11,"opt_len","","",61,[[],["option",4]]],[11,"drive_unindexed","","",63,[[]]],[11,"opt_len","","",63,[[],["option",4]]],[11,"drive_unindexed","","",64,[[]]],[11,"opt_len","","",64,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],["option",4]]],[11,"drive_unindexed","","",66,[[]]],[11,"opt_len","","",66,[[],["option",4]]],[11,"drive_unindexed","","",67,[[]]],[11,"opt_len","","",67,[[],["option",4]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],["option",4]]],[11,"drive_unindexed","","",69,[[]]],[11,"opt_len","","",69,[[],["option",4]]],[11,"drive_unindexed","","",70,[[]]],[11,"opt_len","","",70,[[],["option",4]]],[11,"drive_unindexed","","",72,[[]]],[11,"opt_len","","",72,[[],["option",4]]],[11,"drive_unindexed","","",71,[[]]],[11,"opt_len","","",71,[[],["option",4]]],[11,"drive_unindexed","","",73,[[]]],[11,"opt_len","","",73,[[],["option",4]]],[11,"drive_unindexed","","",74,[[]]],[11,"opt_len","","",74,[[],["option",4]]],[11,"drive_unindexed","","",75,[[]]],[11,"opt_len","","",75,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",77,[[]]],[11,"drive_unindexed","","",8,[[]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],["option",4]]],[11,"drive_unindexed","","",79,[[]]],[11,"opt_len","","",79,[[],["option",4]]],[11,"drive_unindexed","","",80,[[]]],[11,"opt_len","","",80,[[],["option",4]]],[11,"drive_unindexed","rayon::option","",81,[[]]],[11,"opt_len","","",81,[[],["option",4]]],[11,"drive_unindexed","","",82,[[]]],[11,"opt_len","","",82,[[],["option",4]]],[11,"drive_unindexed","","",83,[[]]],[11,"opt_len","","",83,[[],["option",4]]],[11,"drive_unindexed","rayon::range","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],["option",4]]],[11,"drive_unindexed","rayon::range_inclusive","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","rayon::result","",86,[[]]],[11,"opt_len","","",86,[[],["option",4]]],[11,"drive_unindexed","","",87,[[]]],[11,"opt_len","","",87,[[],["option",4]]],[11,"drive_unindexed","","",88,[[]]],[11,"opt_len","","",88,[[],["option",4]]],[11,"drive_unindexed","rayon::slice","",89,[[]]],[11,"opt_len","","",89,[[],["option",4]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],["option",4]]],[11,"drive_unindexed","","",91,[[]]],[11,"opt_len","","",91,[[],["option",4]]],[11,"drive_unindexed","","",92,[[]]],[11,"opt_len","","",92,[[],["option",4]]],[11,"drive_unindexed","","",93,[[]]],[11,"opt_len","","",93,[[],["option",4]]],[11,"drive_unindexed","","",94,[[]]],[11,"drive_unindexed","","",95,[[]]],[11,"drive_unindexed","rayon::str","",96,[[]]],[11,"drive_unindexed","","",97,[[]]],[11,"drive_unindexed","","",98,[[]]],[11,"drive_unindexed","","",99,[[]]],[11,"drive_unindexed","","",100,[[]]],[11,"drive_unindexed","","",101,[[]]],[11,"drive_unindexed","","",102,[[]]],[11,"drive_unindexed","","",103,[[]]],[11,"drive_unindexed","","",104,[[]]],[11,"drive_unindexed","","",105,[[]]],[11,"drive_unindexed","rayon::vec","",106,[[]]],[11,"opt_len","","",106,[[],["option",4]]],[11,"drive_unindexed","rayon::iter","",0,[[]]],[11,"opt_len","","",0,[[],["option",4]]],[11,"drive","rayon::collections::binary_heap","",27,[[]]],[11,"len","","",27,[[]]],[11,"with_producer","","",27,[[]]],[11,"drive","","",28,[[]]],[11,"len","","",28,[[]]],[11,"with_producer","","",28,[[]]],[11,"drive","rayon::collections::vec_deque","",42,[[]]],[11,"len","","",42,[[]]],[11,"with_producer","","",42,[[]]],[11,"drive","","",43,[[]]],[11,"len","","",43,[[]]],[11,"with_producer","","",43,[[]]],[11,"drive","","",44,[[]]],[11,"len","","",44,[[]]],[11,"with_producer","","",44,[[]]],[11,"drive","rayon::iter","",46,[[]]],[11,"len","","",46,[[]]],[11,"with_producer","","",46,[[]]],[11,"drive","","",47,[[]]],[11,"len","","",47,[[]]],[11,"with_producer","","",47,[[]]],[11,"drive","","",48,[[["consumer",8]]]],[11,"len","","",48,[[]]],[11,"with_producer","","",48,[[]]],[11,"len","","",57,[[]]],[11,"drive","","",57,[[["consumer",8]]]],[11,"with_producer","","",57,[[]]],[11,"len","","",59,[[]]],[11,"drive","","",59,[[["consumer",8]]]],[11,"with_producer","","",59,[[]]],[11,"drive","","",60,[[]]],[11,"len","","",60,[[]]],[11,"with_producer","","",60,[[]]],[11,"drive","","",62,[[]]],[11,"len","","",62,[[]]],[11,"with_producer","","",62,[[]]],[11,"drive","","",61,[[]]],[11,"len","","",61,[[]]],[11,"with_producer","","",61,[[]]],[11,"drive","","",63,[[]]],[11,"len","","",63,[[]]],[11,"with_producer","","",63,[[]]],[11,"drive","","",64,[[]]],[11,"len","","",64,[[]]],[11,"with_producer","","",64,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",66,[[]]],[11,"len","","",66,[[]]],[11,"with_producer","","",66,[[]]],[11,"drive","","",67,[[]]],[11,"len","","",67,[[]]],[11,"with_producer","","",67,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",69,[[]]],[11,"len","","",69,[[]]],[11,"with_producer","","",69,[[]]],[11,"drive","","",70,[[["consumer",8]]]],[11,"len","","",70,[[]]],[11,"with_producer","","",70,[[]]],[11,"drive","","",72,[[["consumer",8]]]],[11,"len","","",72,[[]]],[11,"with_producer","","",72,[[]]],[11,"drive","","",71,[[["consumer",8]]]],[11,"len","","",71,[[]]],[11,"with_producer","","",71,[[]]],[11,"drive","","",73,[[]]],[11,"len","","",73,[[]]],[11,"with_producer","","",73,[[]]],[11,"drive","","",74,[[]]],[11,"len","","",74,[[]]],[11,"with_producer","","",74,[[]]],[11,"drive","","",75,[[]]],[11,"len","","",75,[[]]],[11,"with_producer","","",75,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",78,[[]]],[11,"with_producer","","",78,[[]]],[11,"len","","",78,[[]]],[11,"drive","","",79,[[]]],[11,"len","","",79,[[]]],[11,"with_producer","","",79,[[]]],[11,"drive","","",80,[[]]],[11,"len","","",80,[[]]],[11,"with_producer","","",80,[[]]],[11,"drive","rayon::option","",81,[[]]],[11,"len","","",81,[[]]],[11,"with_producer","","",81,[[]]],[11,"drive","","",82,[[]]],[11,"len","","",82,[[]]],[11,"with_producer","","",82,[[]]],[11,"drive","","",83,[[]]],[11,"len","","",83,[[]]],[11,"with_producer","","",83,[[]]],[11,"drive","rayon::range","",84,[[]]],[11,"len","","",84,[[]]],[11,"with_producer","","",84,[[]]],[11,"drive","","",84,[[]]],[11,"len","","",84,[[]]],[11,"with_producer","","",84,[[]]],[11,"drive","","",84,[[]]],[11,"len","","",84,[[]]],[11,"with_producer","","",84,[[]]],[11,"drive","","",84,[[]]],[11,"len","","",84,[[]]],[11,"with_producer","","",84,[[]]],[11,"drive","","",84,[[]]],[11,"len","","",84,[[]]],[11,"with_producer","","",84,[[]]],[11,"drive","","",84,[[]]],[11,"len","","",84,[[]]],[11,"with_producer","","",84,[[]]],[11,"drive","","",84,[[]]],[11,"len","","",84,[[]]],[11,"with_producer","","",84,[[]]],[11,"drive","","",84,[[]]],[11,"len","","",84,[[]]],[11,"with_producer","","",84,[[]]],[11,"drive","rayon::range_inclusive","",85,[[]]],[11,"len","","",85,[[]]],[11,"with_producer","","",85,[[]]],[11,"drive","","",85,[[]]],[11,"len","","",85,[[]]],[11,"with_producer","","",85,[[]]],[11,"drive","","",85,[[]]],[11,"len","","",85,[[]]],[11,"with_producer","","",85,[[]]],[11,"drive","","",85,[[]]],[11,"len","","",85,[[]]],[11,"with_producer","","",85,[[]]],[11,"drive","rayon::result","",86,[[]]],[11,"len","","",86,[[]]],[11,"with_producer","","",86,[[]]],[11,"drive","","",87,[[]]],[11,"len","","",87,[[]]],[11,"with_producer","","",87,[[]]],[11,"drive","","",88,[[]]],[11,"len","","",88,[[]]],[11,"with_producer","","",88,[[]]],[11,"drive","rayon::slice","",89,[[]]],[11,"len","","",89,[[]]],[11,"with_producer","","",89,[[]]],[11,"drive","","",90,[[]]],[11,"len","","",90,[[]]],[11,"with_producer","","",90,[[]]],[11,"drive","","",91,[[]]],[11,"len","","",91,[[]]],[11,"with_producer","","",91,[[]]],[11,"drive","","",92,[[]]],[11,"len","","",92,[[]]],[11,"with_producer","","",92,[[]]],[11,"drive","","",93,[[]]],[11,"len","","",93,[[]]],[11,"with_producer","","",93,[[]]],[11,"drive","rayon::vec","",106,[[]]],[11,"len","","",106,[[]]],[11,"with_producer","","",106,[[]]],[11,"drive","rayon::iter","",0,[[]]],[11,"len","","",0,[[]]],[11,"with_producer","","",0,[[]]],[11,"par_extend","","",0,[[]]],[11,"clone","rayon::collections::binary_heap","",27,[[],["intoiter",3]]],[11,"clone","","",28,[[]]],[11,"clone","rayon::collections::btree_map","",30,[[]]],[11,"clone","rayon::collections::btree_set","",33,[[]]],[11,"clone","rayon::collections::hash_map","",35,[[]]],[11,"clone","rayon::collections::hash_set","",38,[[]]],[11,"clone","rayon::collections::linked_list","",39,[[],["intoiter",3]]],[11,"clone","","",40,[[]]],[11,"clone","rayon::collections::vec_deque","",42,[[],["intoiter",3]]],[11,"clone","","",43,[[]]],[11,"clone","rayon::iter","",45,[[],["iterbridge",3]]],[11,"clone","","",46,[[],["chain",3]]],[11,"clone","","",47,[[],["chunks",3]]],[11,"clone","","",48,[[],["enumerate",3]]],[11,"clone","","",49,[[],["filter",3]]],[11,"clone","","",50,[[],["filtermap",3]]],[11,"clone","","",51,[[],["flatmap",3]]],[11,"clone","","",52,[[],["flatten",3]]],[11,"clone","","",53,[[],["fold",3]]],[11,"clone","","",54,[[],["foldwith",3]]],[11,"clone","","",55,[[],["tryfold",3]]],[11,"clone","","",56,[[],["tryfoldwith",3]]],[11,"clone","","",57,[[],["skip",3]]],[11,"clone","","",58,[[],["split",3]]],[11,"clone","","",59,[[],["take",3]]],[11,"clone","","",60,[[],["map",3]]],[11,"clone","","",62,[[],["mapwith",3]]],[11,"clone","","",61,[[],["mapinit",3]]],[11,"clone","","",63,[[],["zip",3]]],[11,"clone","","",64,[[],["zipeq",3]]],[11,"clone","","",65,[[],["multizip",3]]],[11,"clone","","",66,[[],["interleave",3]]],[11,"clone","","",67,[[],["interleaveshortest",3]]],[11,"clone","","",68,[[],["intersperse",3]]],[11,"clone","","",69,[[],["update",3]]],[11,"clone","","",70,[[],["rev",3]]],[11,"clone","","",72,[[],["minlen",3]]],[11,"clone","","",71,[[],["maxlen",3]]],[11,"clone","","",73,[[],["cloned",3]]],[11,"clone","","",74,[[],["copied",3]]],[11,"clone","","",75,[[],["inspect",3]]],[11,"clone","","",76,[[],["panicfuse",3]]],[11,"clone","","",77,[[],["whilesome",3]]],[11,"clone","","",8,[[],["repeat",3]]],[11,"clone","","",78,[[],["repeatn",3]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[],["once",3]]],[11,"clone","rayon::option","",81,[[],["intoiter",3]]],[11,"clone","","",82,[[]]],[11,"clone","rayon::range","",84,[[],["iter",3]]],[11,"clone","rayon::range_inclusive","",85,[[],["iter",3]]],[11,"clone","rayon::result","",86,[[],["intoiter",3]]],[11,"clone","","",87,[[]]],[11,"clone","rayon::slice","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",94,[[]]],[11,"clone","rayon::str","",96,[[],["chars",3]]],[11,"clone","","",97,[[],["charindices",3]]],[11,"clone","","",98,[[],["bytes",3]]],[11,"clone","","",99,[[],["encodeutf16",3]]],[11,"clone","","",100,[[],["split",3]]],[11,"clone","","",101,[[],["splitterminator",3]]],[11,"clone","","",102,[[],["lines",3]]],[11,"clone","","",103,[[],["splitwhitespace",3]]],[11,"clone","","",104,[[],["matches",3]]],[11,"clone","","",105,[[],["matchindices",3]]],[11,"clone","rayon::vec","",106,[[],["intoiter",3]]],[11,"fmt","rayon::collections::binary_heap","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_map","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_set","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_map","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_set","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::linked_list","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::vec_deque","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::iter","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::option","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range","",84,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range_inclusive","",85,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::result","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::slice","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::str","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::vec","",106,[[["formatter",3]],["result",6]]],[11,"migrated","rayon","Returns `true` if the closure was called from a different…",20,[[]]],[11,"index","","Get the index of this thread in the pool, within…",21,[[]]],[11,"name","","Get the string that was specified by…",21,[[],["option",4]]],[11,"stack_size","","Get the value that was specified by…",21,[[],["option",4]]],[11,"run","","Execute the main loop for this thread. This will not…",21,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",22,[[["configuration",3]],[["threadpool",3],["result",4],["box",3]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",22,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",22,[[]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",22,[[],["option",4]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",22,[[],["option",4]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",22,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",22,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",22,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",22,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",22,[[]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",24,[[],[["defaultspawn",3],["threadpoolbuilder",3]]]],[11,"build","","Create a new `ThreadPool` initialized using this…",24,[[],[["threadpool",3],["result",4],["threadpoolbuilderror",3]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",24,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",24,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",24,[[],[["threadpoolbuilder",3],["customspawn",3]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",24,[[],["threadpoolbuilder",3]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",24,[[],["threadpoolbuilder",3]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",24,[[],["threadpoolbuilder",3]]],[11,"stack_size","","Set the stack size of the worker threads",24,[[],["threadpoolbuilder",3]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",24,[[],["threadpoolbuilder",3]]],[11,"start_handler","","Set a callback to be invoked on thread start.",24,[[],["threadpoolbuilder",3]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",24,[[],["threadpoolbuilder",3]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",25,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",26,[[]]],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]]],"p":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,"MultiZip"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Copied"],[3,"Inspect"],[3,"PanicFuse"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"]]},\
"rayon_core":{"doc":"Under construction","i":[[3,"ThreadBuilder","rayon_core","Thread builder used for customization via…",null,null],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ThreadPool","","Represents a user created thread-pool.",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new `ThreadPool` or to configure the…",null,null],[3,"Configuration","","Contains the rayon thread pool configuration. Use…",null,null],[3,"FnContext","","Provides the calling context to a closure called by…",null,null],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[]]],[5,"scope","","Create a \\\"fork-join\\\" scope `s` and invokes the closure…",null,[[]]],[5,"scope_fifo","","Create a \\\"fork-join\\\" scope `s` with FIFO order, and…",null,[[]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether…",null,[[],["option",4]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],["option",4]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",null,[[["configuration",3]],[["box",3],["result",4]]]],[11,"index","","Get the index of this thread in the pool, within…",0,[[]]],[11,"name","","Get the string that was specified by…",0,[[],["option",4]]],[11,"stack_size","","Get the value that was specified by…",0,[[],["option",4]]],[11,"run","","Execute the main loop for this thread. This will not…",0,[[]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",1,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",2,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["configuration",3]],[["box",3],["result",4],["threadpool",3]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",3,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",3,[[]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",3,[[],["option",4]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",3,[[],["option",4]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",3,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",3,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",3,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",3,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",3,[[]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",4,[[]]],[11,"build","","Create a new `ThreadPool` initialized using this…",4,[[],[["threadpoolbuilderror",3],["result",4],["threadpool",3]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",4,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",4,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",4,[[],[["customspawn",3],["threadpoolbuilder",3]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",4,[[]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",4,[[]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",4,[[]]],[11,"stack_size","","Set the stack size of the worker threads",4,[[]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",4,[[]]],[11,"start_handler","","Set a callback to be invoked on thread start.",4,[[]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",4,[[]]],[11,"new","","Creates and return a valid rayon thread pool…",5,[[],["configuration",3]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",5,[[],[["result",4],["box",3],["threadpool",3]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[],["configuration",3]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[],["configuration",3]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[],["configuration",3]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[],["configuration",3]]],[11,"migrated","","Returns `true` if the closure was called from a different…",6,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"drop","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"description","","",7,[[]]]],"p":[[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]},\
"rulinalg":{"doc":"The rulinalg crate.A crate that provides high-dimensional…","i":[[0,"macros","rulinalg","Macros for the linear algebra modules.",null,null],[3,"AbsoluteElementwiseComparator","rulinalg::macros","The `abs` comparator used with assert_matrix_eq!.",null,null],[12,"tol","","The maximum absolute difference tolerated (inclusive).",0,null],[3,"ExactElementwiseComparator","","The `exact` comparator used with assert_matrix_eq!.",null,null],[3,"UlpElementwiseComparator","","The `ulp` comparator used with assert_matrix_eq!.",null,null],[12,"tol","","The maximum difference in ULP units tolerated (inclusive).",1,null],[3,"FloatElementwiseComparator","","The `float` comparator used with assert_matrix_eq!.",null,null],[8,"ElementwiseComparator","","Trait that describes elementwise comparators for…",null,null],[10,"compare","","Compares two elements.",2,[[],["result",4]]],[10,"description","","A description of the comparator.",2,[[],["string",3]]],[0,"matrix","rulinalg","The matrix module.",null,null],[3,"PermutationMatrix","rulinalg::matrix","An efficient implementation of a permutation matrix.",null,null],[3,"Matrix","","The `Matrix` struct.",null,null],[3,"MatrixSlice","","A `MatrixSlice`",null,null],[3,"MatrixSliceMut","","A mutable `MatrixSliceMut`",null,null],[3,"Row","","Row of a matrix.",null,null],[3,"RowMut","","Mutable row of a matrix.",null,null],[3,"Rows","","Row iterator.",null,null],[3,"RowsMut","","Mutable row iterator.",null,null],[3,"Column","","Column of a matrix.",null,null],[3,"ColumnMut","","Mutable column of a matrix.",null,null],[3,"Cols","","Column iterator.",null,null],[3,"ColsMut","","Mutable column iterator.",null,null],[3,"Diagonal","","An iterator over the diagonal elements of a matrix.",null,null],[3,"DiagonalMut","","An iterator over the mutable diagonal elements of a matrix.",null,null],[3,"SliceIter","","Iterator for matrix.",null,null],[3,"SliceIterMut","","Iterator for mutable matrix.",null,null],[4,"Parity","","Parity is the fact of being even or odd.",null,null],[13,"Even","","Even parity.",3,null],[13,"Odd","","Odd parity.",3,null],[4,"Axes","","Matrix dimensions",null,null],[13,"Row","","The row axis.",4,null],[13,"Col","","The column axis.",4,null],[4,"DiagOffset","","Diagonal offset (used by Diagonal iterator).",null,null],[13,"Main","","The main diagonal of the matrix.",5,null],[13,"Above","","An offset above the main diagonal.",5,null],[13,"Below","","An offset below the main diagonal.",5,null],[0,"decomposition","","Decompositions for matrices.",null,null],[3,"PartialPivLu","rulinalg::matrix::decomposition","LU decomposition with partial pivoting.",null,null],[3,"LUP","","Result of unpacking an instance of PartialPivLu.",null,null],[12,"l","","The lower triangular matrix in the decomposition.",6,null],[12,"u","","The upper triangular matrix in the decomposition.",6,null],[12,"p","","The permutation matrix in the decomposition.",6,null],[11,"qr_decomp","rulinalg::matrix","Compute the QR decomposition of the matrix.",7,[[],[["result",4],["error",3]]]],[11,"cholesky","","Cholesky decomposition",7,[[],[["error",3],["result",4],["matrix",3]]]],[11,"bidiagonal_decomp","","Converts matrix to bidiagonal form",7,[[],[["error",3],["result",4]]]],[11,"svd","","Singular Value Decomposition",7,[[],[["error",3],["result",4]]]],[11,"upper_hessenberg","","Returns H, where H is the upper hessenberg form.",7,[[],[["error",3],["result",4],["matrix",3]]]],[11,"upper_hess_decomp","","Returns (U,H), where H is the upper hessenberg form and U…",7,[[],[["result",4],["error",3]]]],[11,"decompose","rulinalg::matrix::decomposition","Performs the decomposition.",8,[[["matrix",3]],[["error",3],["result",4]]]],[11,"solve","","Solves the linear system `Ax = b`.",8,[[["vector",3]],[["result",4],["vector",3],["error",3]]]],[11,"inverse","","Computes the inverse of the matrix which this LUP…",8,[[],[["error",3],["result",4],["matrix",3]]]],[11,"det","","Computes the determinant of the decomposed matrix.",8,[[]]],[11,"lup_decomp","rulinalg::matrix","Computes L, U, and P for LUP decomposition.",7,[[],[["error",3],["result",4]]]],[11,"eigenvalues","","Eigenvalues of a square matrix.",7,[[],[["vec",3],["error",3],["result",4]]]],[11,"eigendecomp","","Eigendecomposition of a square matrix.",7,[[],[["result",4],["error",3]]]],[8,"Decomposition","rulinalg::matrix::decomposition","Base trait for decompositions.",null,null],[16,"Factors","","The type representing the ordered set of factors that when…",9,null],[10,"unpack","","Extract the individual factors from this decomposition.",9,[[]]],[11,"new","rulinalg::matrix","Constructor for Matrix struct.",7,[[["into",8],["vec",3]],["matrix",3]]],[11,"from_fn","","Constructor for Matrix struct that takes a function `f`…",7,[[],["matrix",3]]],[11,"data","","Returns a non-mutable reference to the underlying data.",7,[[],["vec",3]]],[11,"mut_data","","Returns a mutable slice of the underlying data.",7,[[]]],[11,"into_vec","","Consumes the Matrix and returns the Vec of data.",7,[[],["vec",3]]],[11,"zeros","","Constructs matrix of all zeros.",7,[[],["matrix",3]]],[11,"from_diag","","Constructs matrix with given diagonal.",7,[[],["matrix",3]]],[11,"ones","","Constructs matrix of all ones.",7,[[],["matrix",3]]],[11,"identity","","Constructs the identity matrix.",7,[[],["matrix",3]]],[11,"mean","","The mean of the matrix along the specified axis.",7,[[["axes",4]],["vector",3]]],[11,"variance","","The variance of the matrix along the specified axis.",7,[[["axes",4]],[["result",4],["vector",3],["error",3]]]],[11,"solve","","Solves the equation `Ax = y`.",7,[[["vector",3]],[["result",4],["vector",3],["error",3]]]],[11,"inverse","","Computes the inverse of the matrix.",7,[[],[["error",3],["result",4],["matrix",3]]]],[11,"det","","Computes the determinant of the matrix.",7,[[]]],[11,"from_matrix","","Produce a `MatrixSlice` from a `Matrix`",10,[[["matrix",3]],["matrixslice",3]]],[11,"from_raw_parts","","Creates a `MatrixSlice` from raw parts.",10,[[],["matrixslice",3]]],[11,"from_matrix","","Produce a `MatrixSliceMut` from a mutable `Matrix`",11,[[["matrix",3]],["matrixslicemut",3]]],[11,"from_raw_parts","","Creates a `MatrixSliceMut` from raw parts.",11,[[],["matrixslicemut",3]]],[11,"identity","","The identity permutation.",12,[[]]],[11,"swap_rows","","Swaps rows i and j in the permutation matrix.",12,[[]]],[11,"inverse","","The inverse of the permutation matrix.",12,[[],["permutationmatrix",3]]],[11,"size","","The size of the permutation matrix.",12,[[]]],[11,"from_array","","Constructs a `PermutationMatrix` from an array.",12,[[["into",8],["vec",3]],[["result",4],["permutationmatrix",3],["error",3]]]],[11,"from_array_unchecked","","Constructs a `PermutationMatrix` from an array, without…",12,[[["into",8],["vec",3]],["permutationmatrix",3]]],[11,"map_row","","Maps the given row index into the resulting row index in…",12,[[]]],[11,"parity","","Computes the parity of the permutation (even- or oddness).",12,[[],["parity",4]]],[11,"as_matrix","","The permutation matrix in an equivalent full matrix…",12,[[],["matrix",3]]],[11,"det","","Computes the determinant of the permutation matrix.",12,[[]]],[11,"permute_rows_in_place","","Permutes the rows of the given matrix in-place.",12,[[]]],[11,"permute_cols_in_place","","Permutes the columns of the given matrix in-place.",12,[[]]],[11,"permute_vector_in_place","","Permutes the elements of the given vector in-place.",12,[[["vector",3]]]],[11,"permute_rows_into_buffer","","Permutes the rows of the given `source_matrix` and stores…",12,[[]]],[11,"permute_cols_into_buffer","","Permutes the columns of the given `source_matrix` and…",12,[[]]],[11,"permute_vector_into_buffer","","Permutes the elements of the given `source_vector` and…",12,[[["vector",3],["vector",3]]]],[11,"compose_into_buffer","","Computes the composition of `self` with the given…",12,[[["permutationmatrix",3],["permutationmatrix",3]]]],[8,"BaseMatrix","","Trait for immutable matrix structs.",null,null],[10,"rows","","Rows in the matrix.",13,[[]]],[10,"cols","","Columns in the matrix.",13,[[]]],[10,"row_stride","","Row stride in the matrix.",13,[[]]],[11,"is_empty","","Returns true if the matrix contais no elements",13,[[]]],[10,"as_ptr","","Top left index of the matrix.",13,[[]]],[11,"as_slice","","Returns a `MatrixSlice` over the whole matrix.",13,[[],["matrixslice",3]]],[11,"get_unchecked","","Get a reference to a point in the matrix without bounds…",13,[[]]],[11,"col","","Returns the column of a matrix at the given index. `None`…",13,[[],["column",3]]],[11,"col_unchecked","","Returns the column of a matrix at the given index without…",13,[[],["column",3]]],[11,"row","","Returns the row of a matrix at the given index.",13,[[],["row",3]]],[11,"row_unchecked","","Returns the row of a matrix at the given index without…",13,[[],["row",3]]],[11,"iter","","Returns an iterator over the matrix data.",13,[[],["sliceiter",3]]],[11,"col_iter","","Iterate over the columns of the matrix.",13,[[],["cols",3]]],[11,"row_iter","","Iterate over the rows of the matrix.",13,[[],["rows",3]]],[11,"diag_iter","","Iterate over diagonal entries",13,[[["diagoffset",4]],["diagonal",3]]],[11,"sum_rows","","The sum of the rows of the matrix.",13,[[],["vector",3]]],[11,"sum_cols","","The sum of the columns of the matrix.",13,[[],["vector",3]]],[11,"norm","","Compute given matrix norm for matrix.",13,[[["matrixnorm",8]]]],[11,"metric","","Compute the metric distance between two matrices.",13,[[]]],[11,"sum","","The sum of all elements in the matrix",13,[[]]],[11,"min","","The min of the specified axis of the matrix.",13,[[["axes",4]],["vector",3]]],[11,"max","","The max of the specified axis of the matrix.",13,[[["axes",4]],["vector",3]]],[11,"into_matrix","","Convert the matrix struct into a owned Matrix.",13,[[],["matrix",3]]],[11,"select_rows","","Select rows from matrix",13,[[],["matrix",3]]],[11,"select_cols","","Select columns from matrix",13,[[],["matrix",3]]],[11,"elemul","","The elementwise product of two matrices.",13,[[],["matrix",3]]],[11,"elediv","","The elementwise division of two matrices.",13,[[],["matrix",3]]],[11,"select","","Select block matrix from matrix",13,[[],["matrix",3]]],[11,"hcat","","Horizontally concatenates two matrices. With self on the…",13,[[],["matrix",3]]],[11,"vcat","","Vertically concatenates two matrices. With self on top.",13,[[],["matrix",3]]],[11,"diag","","Extract the diagonal of the matrix",13,[[],["diagonal",3]]],[11,"transpose","","Tranposes the given matrix",13,[[],["matrix",3]]],[11,"is_diag","","Checks if matrix is diagonal.",13,[[]]],[11,"solve_u_triangular","","Solves an upper triangular linear system.",13,[[["vector",3]],[["result",4],["vector",3],["error",3]]]],[11,"solve_l_triangular","","Solves a lower triangular linear system.",13,[[["vector",3]],[["result",4],["vector",3],["error",3]]]],[11,"split_at","","Split the matrix at the specified axis returning two…",13,[[["axes",4]]]],[11,"sub_slice","","Produce a `MatrixSlice` from an existing matrix.",13,[[],["matrixslice",3]]],[8,"BaseMatrixMut","","Trait for mutable matrices.",null,null],[10,"as_mut_ptr","","Top left index of the slice.",14,[[]]],[11,"as_mut_slice","","Returns a `MatrixSliceMut` over the whole matrix.",14,[[],["matrixslicemut",3]]],[11,"get_unchecked_mut","","Get a mutable reference to a point in the matrix without…",14,[[]]],[11,"iter_mut","","Returns a mutable iterator over the matrix.",14,[[],["sliceitermut",3]]],[11,"col_mut","","Returns a mutable reference to the column of a matrix at…",14,[[],["columnmut",3]]],[11,"col_unchecked_mut","","Returns a mutable reference to the column of a matrix at…",14,[[],["columnmut",3]]],[11,"row_mut","","Returns a mutable reference to the row of a matrix at the…",14,[[],["rowmut",3]]],[11,"row_unchecked_mut","","Returns a mutable reference to the row of a matrix at the…",14,[[],["rowmut",3]]],[11,"swap_rows","","Swaps two rows in a matrix.",14,[[]]],[11,"swap_cols","","Swaps two columns in a matrix.",14,[[]]],[11,"col_iter_mut","","Iterate over the mutable columns of the matrix.",14,[[],["colsmut",3]]],[11,"row_iter_mut","","Iterate over the mutable rows of the matrix.",14,[[],["rowsmut",3]]],[11,"diag_iter_mut","","Iterate over diagonal entries mutably",14,[[["diagoffset",4]],["diagonalmut",3]]],[11,"set_to","","Sets the underlying matrix data to the target data.",14,[[["basematrix",8]]]],[11,"apply","","Applies a function to each element in the matrix.",14,[[["fn",8]]]],[11,"split_at_mut","","Split the matrix at the specified axis returning two…",14,[[["axes",4]]]],[11,"sub_slice_mut","","Produce a `MatrixSliceMut` from an existing matrix.",14,[[],["matrixslicemut",3]]],[11,"raw_slice","","Returns the row as a slice.",15,[[]]],[11,"raw_slice","","Returns the row as a slice.",16,[[]]],[11,"raw_slice_mut","","Returns the row as a slice.",16,[[]]],[0,"convert","rulinalg","The convert module.",null,null],[11,"try_into","rulinalg::matrix","Attempts to convert the matrix into a new matrix of…",7,[[],[["matrix",3],["error",3],["result",4]]]],[0,"error","rulinalg","Error handling for the linalg module.",null,null],[3,"Error","rulinalg::error","An error related to the linalg module.",null,null],[4,"ErrorKind","","Types of errors produced in the linalg module.",null,null],[13,"InvalidArg","","An argument did not uphold a necessary criteria for the…",17,null],[13,"DecompFailure","","A failure to decompose due to some property of the data.",17,null],[13,"AlgebraFailure","","A failure due to some algebraic constraints not being met.",17,null],[13,"DivByZero","","Tried to divide by zero",17,null],[13,"ScalarConversionFailure","","Failure due to inability to convert between scalar types",17,null],[13,"InvalidPermutation","","A user-supplied permutation is not a valid permutation.",17,null],[11,"new","","Construct a new `Error` of a particular `ErrorKind`.",18,[[["errorkind",4]],["error",3]]],[11,"kind","","Get the kind of this `Error`.",18,[[],["errorkind",4]]],[0,"utils","rulinalg","Linear algebra utils module.",null,null],[5,"dot","rulinalg::utils","Compute dot product of two slices.",null,[[],[["copy",8],["zero",8],["add",8],["mul",8]]]],[5,"unrolled_sum","","Unrolled sum",null,[[]]],[5,"in_place_vec_bin_op","","Vectorized binary operation applied to two slices. The…",null,[[]]],[5,"vec_bin_op","","Vectorized binary operation applied to two slices.",null,[[],["vec",3]]],[5,"vec_sum","","Compute vector sum of two slices.",null,[[],[["copy",8],["add",8],["vec",3]]]],[5,"vec_sub","","Compute vector difference two slices.",null,[[],[["sub",8],["copy",8],["vec",3]]]],[5,"ele_mul","","Computes elementwise multiplication.",null,[[],[["copy",8],["mul",8],["vec",3]]]],[5,"ele_div","","Computes elementwise division.",null,[[],[["div",8],["copy",8],["vec",3]]]],[5,"argmax","","Find argmax of slice.",null,[[]]],[5,"argmin","","Find argmin of slice.",null,[[]]],[5,"find","","Find index of value in slice.",null,[[]]],[0,"vector","rulinalg","The vector module.",null,null],[3,"Vector","rulinalg::vector","The Vector struct.",null,null],[11,"new","","Constructor for Vector struct.",19,[[["into",8],["vec",3]],["vector",3]]],[11,"from_fn","","Constructor for Vector struct that takes a function `f`…",19,[[],["vector",3]]],[11,"size","","Returns the size of the Vector.",19,[[]]],[11,"data","","Returns a non-mutable reference to the underlying data.",19,[[],["vec",3]]],[11,"mut_data","","Returns a mutable slice of the underlying data.",19,[[]]],[11,"into_vec","","Consumes the Vector and returns the Vec of data.",19,[[],["vec",3]]],[11,"iter","","Returns an iterator over the Vector\'s data.",19,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutable references to the…",19,[[],["itermut",3]]],[11,"get_unchecked","","Returns a pointer to the element at the given index,…",19,[[]]],[11,"get_unchecked_mut","","Returns an unsafe mutable pointer to the element at the…",19,[[]]],[11,"apply","","Applies a function to each element in the vector.",19,[[["fn",8]],["vector",3]]],[11,"argmax","","Find the argmax of the Vector.",19,[[]]],[11,"argmin","","Find the argmin of the Vector.",19,[[]]],[11,"select","","Select elements from the Vector and form a new Vector from…",19,[[],["vector",3]]],[11,"zeros","","Constructs Vector of all zeros.",19,[[],["vector",3]]],[11,"ones","","Constructs Vector of all ones.",19,[[],["vector",3]]],[11,"dot","","Compute dot product with specified Vector.",19,[[["vector",3]]]],[11,"sum","","The sum of the vector.",19,[[]]],[11,"elemul","","The elementwise product of two vectors.",19,[[["vector",3]],["vector",3]]],[11,"elediv","","The elementwise division of two vectors.",19,[[["vector",3]],["vector",3]]],[11,"norm","","Compute vector norm for vector.",19,[[["vectornorm",8]]]],[11,"metric","","Compute metric distance between two vectors.",19,[[["vectormetric",8],["vector",3]]]],[11,"mean","","The mean of the vector.",19,[[]]],[11,"variance","","The variance of the vector.",19,[[]]],[0,"ulp","rulinalg","Tools for ULP-based comparison of floating point numbers.",null,null],[4,"UlpComparisonResult","rulinalg::ulp","Represents the result of an ULP-based comparison between…",null,null],[13,"ExactMatch","","Signifies an exact match between two floating point numbers.",20,null],[13,"Difference","","The difference in ULP between two floating point numbers.",20,null],[13,"IncompatibleSigns","","The two floating point numbers have different signs, and…",20,null],[13,"Nan","","One or both of the two floating point numbers is a NaN, in…",20,null],[8,"Ulp","","Floating point types for which two instances can be…",null,null],[10,"ulp_diff","","Returns the difference between two floating point numbers,…",21,[[],["ulpcomparisonresult",4]]],[0,"norm","rulinalg","The norm module",null,null],[3,"Euclidean","rulinalg::norm","The Euclidean norm",null,null],[4,"Lp","","The Lp norm",null,null],[13,"Infinity","","The L-infinity norm (supremum)",22,null],[13,"Integer","","The Lp norm where p is an integer",22,null],[13,"Float","","The Lp norm where p is a float",22,null],[8,"VectorNorm","","Trait for vector norms",null,null],[10,"norm","","Computes the vector norm.",23,[[["vector",3]]]],[8,"VectorMetric","","Trait for vector metrics.",null,null],[10,"metric","","Computes the metric distance between two vectors.",24,[[["vector",3]]]],[8,"MatrixNorm","","Trait for matrix norms.",null,null],[10,"norm","","Computes the matrix norm.",25,[[]]],[8,"MatrixMetric","","Trait for matrix metrics.",null,null],[10,"metric","","Computes the metric distance between two matrices.",26,[[]]],[14,"vector","rulinalg","The `vector!` macro enables easy construction of small…",null,null],[14,"matrix","","The `matrix!` macro enables easy construction of small…",null,null],[14,"assert_matrix_eq","","Compare matrices for exact or approximate equality.",null,null],[14,"assert_vector_eq","","Compare vectors for exact or approximate equality.",null,null],[11,"from","rulinalg::macros","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","rulinalg::matrix","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","rulinalg::matrix::decomposition","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","rulinalg::error","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","rulinalg::vector","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","rulinalg::ulp","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"metric","rulinalg::norm","",39,[[["vector",3]]]],[11,"metric","","",39,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"metric","","",22,[[["vector",3]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"unpack","rulinalg::matrix::decomposition","",8,[[],["lup",3]]],[11,"rows","rulinalg::matrix","",7,[[]]],[11,"cols","","",7,[[]]],[11,"row_stride","","",7,[[]]],[11,"is_empty","","",7,[[]]],[11,"as_ptr","","",7,[[]]],[11,"into_matrix","","",7,[[],["matrix",3]]],[11,"sum","","",7,[[]]],[11,"elemul","","",7,[[],["matrix",3]]],[11,"elediv","","",7,[[],["matrix",3]]],[11,"vcat","","",7,[[],["matrix",3]]],[11,"rows","","",10,[[]]],[11,"cols","","",10,[[]]],[11,"row_stride","","",10,[[]]],[11,"as_ptr","","",10,[[]]],[11,"rows","","",11,[[]]],[11,"cols","","",11,[[]]],[11,"row_stride","","",11,[[]]],[11,"as_ptr","","",11,[[]]],[11,"rows","","",15,[[]]],[11,"cols","","",15,[[]]],[11,"row_stride","","",15,[[]]],[11,"as_ptr","","",15,[[]]],[11,"rows","","",16,[[]]],[11,"cols","","",16,[[]]],[11,"row_stride","","",16,[[]]],[11,"as_ptr","","",16,[[]]],[11,"rows","","",31,[[]]],[11,"cols","","",31,[[]]],[11,"row_stride","","",31,[[]]],[11,"as_ptr","","",31,[[]]],[11,"rows","","",32,[[]]],[11,"cols","","",32,[[]]],[11,"row_stride","","",32,[[]]],[11,"as_ptr","","",32,[[]]],[11,"as_mut_ptr","","Top left index of the slice.",7,[[]]],[11,"as_mut_ptr","","Top left index of the slice.",11,[[]]],[11,"as_mut_ptr","","Top left index of the slice.",16,[[]]],[11,"as_mut_ptr","","Top left index of the slice.",32,[[]]],[11,"norm","rulinalg::norm","",39,[[["vector",3]]]],[11,"norm","","",22,[[["vector",3]]]],[11,"norm","","",39,[[]]],[11,"norm","","",22,[[]]],[11,"from","rulinalg::vector","",19,[[["vec",3]]]],[11,"from","","",19,[[]]],[11,"from","rulinalg::matrix","",7,[[["vector",3]]]],[11,"from","","",7,[[["matrixslice",3]]]],[11,"from","","",7,[[["matrixslicemut",3]]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"from","rulinalg::vector","",19,[[["row",3]]]],[11,"from","","",19,[[["rowmut",3]]]],[11,"from","","",19,[[["column",3]]]],[11,"from","","",19,[[["columnmut",3]]]],[11,"into","","",19,[[],["vec",3]]],[11,"into_iter","rulinalg::matrix","",10,[[]]],[11,"into_iter","","",11,[[]]],[11,"into_iter","rulinalg::vector","",19,[[]]],[11,"next","rulinalg::matrix","",37,[[],["option",4]]],[11,"next","","",38,[[],["option",4]]],[11,"next","","",35,[[],["option",4]]],[11,"last","","",35,[[],["option",4]]],[11,"nth","","",35,[[],["option",4]]],[11,"count","","",35,[[]]],[11,"size_hint","","",35,[[]]],[11,"next","","",36,[[],["option",4]]],[11,"last","","",36,[[],["option",4]]],[11,"nth","","",36,[[],["option",4]]],[11,"count","","",36,[[]]],[11,"size_hint","","",36,[[]]],[11,"next","","",33,[[],["option",4]]],[11,"last","","",33,[[],["option",4]]],[11,"nth","","",33,[[],["option",4]]],[11,"count","","",33,[[]]],[11,"size_hint","","",33,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"last","","",34,[[],["option",4]]],[11,"nth","","",34,[[],["option",4]]],[11,"count","","",34,[[]]],[11,"size_hint","","",34,[[]]],[11,"next","","",29,[[],["option",4]]],[11,"last","","",29,[[],["option",4]]],[11,"nth","","",29,[[],["option",4]]],[11,"count","","",29,[[]]],[11,"size_hint","","",29,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"last","","",30,[[],["option",4]]],[11,"nth","","",30,[[],["option",4]]],[11,"count","","",30,[[]]],[11,"size_hint","","",30,[[]]],[11,"clone","rulinalg::macros","",0,[[],["absoluteelementwisecomparator",3]]],[11,"clone","","",27,[[],["exactelementwisecomparator",3]]],[11,"clone","","",1,[[],["ulpelementwisecomparator",3]]],[11,"clone","","",28,[[],["floatelementwisecomparator",3]]],[11,"clone","rulinalg::matrix::decomposition","",6,[[],["lup",3]]],[11,"clone","","",8,[[],["partialpivlu",3]]],[11,"clone","rulinalg::matrix","",12,[[],["permutationmatrix",3]]],[11,"clone","","",3,[[],["parity",4]]],[11,"clone","","",4,[[],["axes",4]]],[11,"clone","","",7,[[],["matrix",3]]],[11,"clone","","",10,[[],["matrixslice",3]]],[11,"clone","","",15,[[],["row",3]]],[11,"clone","","",31,[[],["column",3]]],[11,"clone","rulinalg::vector","Clones the Vector.",19,[[],["vector",3]]],[11,"clone","rulinalg::ulp","",20,[[],["ulpcomparisonresult",4]]],[11,"eq","rulinalg::macros","",0,[[["absoluteelementwisecomparator",3]]]],[11,"ne","","",0,[[["absoluteelementwisecomparator",3]]]],[11,"eq","","",27,[[["exactelementwisecomparator",3]]]],[11,"eq","","",1,[[["ulpelementwisecomparator",3]]]],[11,"ne","","",1,[[["ulpelementwisecomparator",3]]]],[11,"eq","","",28,[[["floatelementwisecomparator",3]]]],[11,"ne","","",28,[[["floatelementwisecomparator",3]]]],[11,"eq","rulinalg::matrix","",12,[[["permutationmatrix",3]]]],[11,"ne","","",12,[[["permutationmatrix",3]]]],[11,"eq","","",3,[[["parity",4]]]],[11,"eq","","",7,[[["matrix",3]]]],[11,"ne","","",7,[[["matrix",3]]]],[11,"eq","","",5,[[["diagoffset",4]]]],[11,"ne","","",5,[[["diagoffset",4]]]],[11,"eq","rulinalg::error","",17,[[["errorkind",4]]]],[11,"eq","rulinalg::vector","",19,[[["vector",3]]]],[11,"ne","","",19,[[["vector",3]]]],[11,"eq","rulinalg::ulp","",20,[[["ulpcomparisonresult",4]]]],[11,"ne","","",20,[[["ulpcomparisonresult",4]]]],[11,"deref","rulinalg::matrix","",15,[[],["matrixslice",3]]],[11,"deref","","",16,[[],["matrixslicemut",3]]],[11,"deref","","",31,[[],["matrixslice",3]]],[11,"deref","","",32,[[],["matrixslicemut",3]]],[11,"deref_mut","","",16,[[],["matrixslicemut",3]]],[11,"deref_mut","","",32,[[],["matrixslicemut",3]]],[11,"fmt","rulinalg::macros","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","rulinalg::matrix::decomposition","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","rulinalg::matrix","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","rulinalg::error","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","rulinalg::vector","",19,[[["formatter",3]],["result",6]]],[11,"fmt","rulinalg::ulp","",20,[[["formatter",3]],["result",6]]],[11,"fmt","rulinalg::norm","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","rulinalg::matrix","Formats the Matrix for display.",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rulinalg::error","",18,[[["formatter",3]],["result",6]]],[11,"fmt","rulinalg::vector","Displays the Vector.",19,[[["formatter",3]],["result",6]]],[11,"div","rulinalg::matrix","",10,[[],["matrix",3]]],[11,"div","","",10,[[],["matrix",3]]],[11,"div","","",11,[[],["matrix",3]]],[11,"div","","",11,[[],["matrix",3]]],[11,"div","","",7,[[],["matrix",3]]],[11,"div","","",7,[[],["matrix",3]]],[11,"div","rulinalg::vector","",19,[[],["vector",3]]],[11,"div","","",19,[[],["vector",3]]],[11,"rem","","",19,[[],["vector",3]]],[11,"rem","","",19,[[],["vector",3]]],[11,"rem","","",19,[[["vector",3]],["vector",3]]],[11,"rem","","",19,[[["vector",3]],["vector",3]]],[11,"sub","rulinalg::matrix","",10,[[],["matrix",3]]],[11,"sub","","",10,[[],["matrix",3]]],[11,"sub","","",11,[[],["matrix",3]]],[11,"sub","","",11,[[],["matrix",3]]],[11,"sub","","",7,[[],["matrix",3]]],[11,"sub","","",7,[[],["matrix",3]]],[11,"sub","","",10,[[["matrixslice",3]],["matrix",3]]],[11,"sub","","",10,[[["matrixslice",3]],["matrix",3]]],[11,"sub","","",11,[[["matrixslice",3]],["matrix",3]]],[11,"sub","","",11,[[["matrixslice",3]],["matrix",3]]],[11,"sub","","",10,[[["matrixslicemut",3]],["matrix",3]]],[11,"sub","","",10,[[["matrixslicemut",3]],["matrix",3]]],[11,"sub","","",11,[[["matrixslicemut",3]],["matrix",3]]],[11,"sub","","",11,[[["matrixslicemut",3]],["matrix",3]]],[11,"sub","","",10,[[["matrix",3]],["matrix",3]]],[11,"sub","","",10,[[["matrix",3]],["matrix",3]]],[11,"sub","","",7,[[["matrixslice",3]],["matrix",3]]],[11,"sub","","",7,[[["matrixslice",3]],["matrix",3]]],[11,"sub","","",11,[[["matrix",3]],["matrix",3]]],[11,"sub","","",11,[[["matrix",3]],["matrix",3]]],[11,"sub","","",7,[[["matrixslicemut",3]],["matrix",3]]],[11,"sub","","",7,[[["matrixslicemut",3]],["matrix",3]]],[11,"sub","","",7,[[["matrix",3]],["matrix",3]]],[11,"sub","","",7,[[["matrix",3]],["matrix",3]]],[11,"sub","rulinalg::vector","",19,[[],["vector",3]]],[11,"sub","","",19,[[],["vector",3]]],[11,"sub","","",19,[[["vector",3]],["vector",3]]],[11,"sub","","",19,[[["vector",3]],["vector",3]]],[11,"add","rulinalg::matrix","",10,[[],["matrix",3]]],[11,"add","","",10,[[],["matrix",3]]],[11,"add","","",11,[[],["matrix",3]]],[11,"add","","",11,[[],["matrix",3]]],[11,"add","","",7,[[],["matrix",3]]],[11,"add","","",7,[[],["matrix",3]]],[11,"add","","",10,[[["matrixslice",3]],["matrix",3]]],[11,"add","","",10,[[["matrixslice",3]],["matrix",3]]],[11,"add","","",11,[[["matrixslice",3]],["matrix",3]]],[11,"add","","",11,[[["matrixslice",3]],["matrix",3]]],[11,"add","","",10,[[["matrixslicemut",3]],["matrix",3]]],[11,"add","","",10,[[["matrixslicemut",3]],["matrix",3]]],[11,"add","","",11,[[["matrixslicemut",3]],["matrix",3]]],[11,"add","","",11,[[["matrixslicemut",3]],["matrix",3]]],[11,"add","","",10,[[["matrix",3]],["matrix",3]]],[11,"add","","",10,[[["matrix",3]],["matrix",3]]],[11,"add","","",7,[[["matrixslice",3]],["matrix",3]]],[11,"add","","",7,[[["matrixslice",3]],["matrix",3]]],[11,"add","","",11,[[["matrix",3]],["matrix",3]]],[11,"add","","",11,[[["matrix",3]],["matrix",3]]],[11,"add","","",7,[[["matrixslicemut",3]],["matrix",3]]],[11,"add","","",7,[[["matrixslicemut",3]],["matrix",3]]],[11,"add","","",7,[[["matrix",3]],["matrix",3]]],[11,"add","","",7,[[["matrix",3]],["matrix",3]]],[11,"add","rulinalg::vector","",19,[[],["vector",3]]],[11,"add","","",19,[[],["vector",3]]],[11,"add","","",19,[[["vector",3]],["vector",3]]],[11,"add","","",19,[[["vector",3]],["vector",3]]],[11,"mul","rulinalg::matrix","",10,[[],["matrix",3]]],[11,"mul","","",10,[[],["matrix",3]]],[11,"mul","","",11,[[],["matrix",3]]],[11,"mul","","",11,[[],["matrix",3]]],[11,"mul","","",7,[[],["matrix",3]]],[11,"mul","","",7,[[],["matrix",3]]],[11,"mul","","",7,[[["vector",3]],["vector",3]]],[11,"mul","","",7,[[["vector",3]],["vector",3]]],[11,"mul","","",7,[[["matrix",3]],["matrix",3]]],[11,"mul","","",7,[[["matrix",3]],["matrix",3]]],[11,"mul","","",7,[[["matrixslice",3]],["matrix",3]]],[11,"mul","","",7,[[["matrixslice",3]],["matrix",3]]],[11,"mul","","",10,[[["matrix",3]],["matrix",3]]],[11,"mul","","",10,[[["matrix",3]],["matrix",3]]],[11,"mul","","",7,[[["matrixslicemut",3]],["matrix",3]]],[11,"mul","","",7,[[["matrixslicemut",3]],["matrix",3]]],[11,"mul","","",11,[[["matrix",3]],["matrix",3]]],[11,"mul","","",11,[[["matrix",3]],["matrix",3]]],[11,"mul","","",10,[[["matrixslice",3]],["matrix",3]]],[11,"mul","","",10,[[["matrixslice",3]],["matrix",3]]],[11,"mul","","",10,[[["matrixslicemut",3]],["matrix",3]]],[11,"mul","","",10,[[["matrixslicemut",3]],["matrix",3]]],[11,"mul","","",11,[[["matrixslice",3]],["matrix",3]]],[11,"mul","","",11,[[["matrixslice",3]],["matrix",3]]],[11,"mul","","",11,[[["matrixslicemut",3]],["matrix",3]]],[11,"mul","","",11,[[["matrixslicemut",3]],["matrix",3]]],[11,"mul","","",12,[[["vector",3]],["vector",3]]],[11,"mul","","",12,[[["vector",3]],["vector",3]]],[11,"mul","","",12,[[["matrix",3]],["matrix",3]]],[11,"mul","","",12,[[["matrix",3]],["matrix",3]]],[11,"mul","","",12,[[["matrixslice",3]],["matrix",3]]],[11,"mul","","",12,[[["matrixslicemut",3]],["matrix",3]]],[11,"mul","","",12,[[["matrixslice",3]],["matrix",3]]],[11,"mul","","",12,[[["matrixslicemut",3]],["matrix",3]]],[11,"mul","","",7,[[["permutationmatrix",3]],["matrix",3]]],[11,"mul","","",7,[[["permutationmatrix",3]],["matrix",3]]],[11,"mul","","",10,[[["permutationmatrix",3]],["matrix",3]]],[11,"mul","","",10,[[["permutationmatrix",3]],["matrix",3]]],[11,"mul","","",11,[[["permutationmatrix",3]],["matrix",3]]],[11,"mul","","",11,[[["permutationmatrix",3]],["matrix",3]]],[11,"mul","","",12,[[["permutationmatrix",3]],["permutationmatrix",3]]],[11,"mul","","",12,[[["permutationmatrix",3]],["permutationmatrix",3]]],[11,"mul","rulinalg::vector","",19,[[],["vector",3]]],[11,"mul","","",19,[[],["vector",3]]],[11,"neg","rulinalg::matrix","",10,[[],["matrix",3]]],[11,"neg","","",11,[[],["matrix",3]]],[11,"neg","","",7,[[],["matrix",3]]],[11,"neg","rulinalg::vector","",19,[[],["vector",3]]],[11,"add_assign","rulinalg::matrix","",7,[[]]],[11,"add_assign","","",7,[[]]],[11,"add_assign","","",11,[[]]],[11,"add_assign","","",11,[[]]],[11,"add_assign","","",7,[[["matrix",3]]]],[11,"add_assign","","",7,[[["matrix",3]]]],[11,"add_assign","","",11,[[["matrix",3]]]],[11,"add_assign","","",11,[[["matrix",3]]]],[11,"add_assign","","",11,[[["matrixslice",3]]]],[11,"add_assign","","",11,[[["matrixslice",3]]]],[11,"add_assign","","",11,[[["matrixslicemut",3]]]],[11,"add_assign","","",11,[[["matrixslicemut",3]]]],[11,"add_assign","","",7,[[["matrixslice",3]]]],[11,"add_assign","","",7,[[["matrixslice",3]]]],[11,"add_assign","","",7,[[["matrixslicemut",3]]]],[11,"add_assign","","",7,[[["matrixslicemut",3]]]],[11,"add_assign","rulinalg::vector","",19,[[]]],[11,"add_assign","","",19,[[]]],[11,"add_assign","","",19,[[["vector",3]]]],[11,"add_assign","","",19,[[["vector",3]]]],[11,"sub_assign","rulinalg::matrix","",7,[[]]],[11,"sub_assign","","",7,[[]]],[11,"sub_assign","","",11,[[]]],[11,"sub_assign","","",11,[[]]],[11,"sub_assign","","",7,[[["matrix",3]]]],[11,"sub_assign","","",7,[[["matrix",3]]]],[11,"sub_assign","","",11,[[["matrix",3]]]],[11,"sub_assign","","",11,[[["matrix",3]]]],[11,"sub_assign","","",11,[[["matrixslice",3]]]],[11,"sub_assign","","",11,[[["matrixslice",3]]]],[11,"sub_assign","","",11,[[["matrixslicemut",3]]]],[11,"sub_assign","","",11,[[["matrixslicemut",3]]]],[11,"sub_assign","","",7,[[["matrixslice",3]]]],[11,"sub_assign","","",7,[[["matrixslice",3]]]],[11,"sub_assign","","",7,[[["matrixslicemut",3]]]],[11,"sub_assign","","",7,[[["matrixslicemut",3]]]],[11,"sub_assign","rulinalg::vector","",19,[[]]],[11,"sub_assign","","",19,[[]]],[11,"sub_assign","","",19,[[["vector",3]]]],[11,"sub_assign","","",19,[[["vector",3]]]],[11,"mul_assign","rulinalg::matrix","",7,[[]]],[11,"mul_assign","","",7,[[]]],[11,"mul_assign","","",11,[[]]],[11,"mul_assign","","",11,[[]]],[11,"mul_assign","rulinalg::vector","",19,[[]]],[11,"mul_assign","","",19,[[]]],[11,"div_assign","rulinalg::matrix","",7,[[]]],[11,"div_assign","","",7,[[]]],[11,"div_assign","","",11,[[]]],[11,"div_assign","","",11,[[]]],[11,"div_assign","rulinalg::vector","",19,[[]]],[11,"div_assign","","",19,[[]]],[11,"rem_assign","","",19,[[]]],[11,"rem_assign","","",19,[[]]],[11,"rem_assign","","",19,[[["vector",3]]]],[11,"rem_assign","","",19,[[["vector",3]]]],[11,"not","","",19,[[],["vector",3]]],[11,"bitand","","",19,[[],["vector",3]]],[11,"bitand","","",19,[[],["vector",3]]],[11,"bitand","","",19,[[["vector",3]],["vector",3]]],[11,"bitand","","",19,[[["vector",3]],["vector",3]]],[11,"bitor","","",19,[[],["vector",3]]],[11,"bitor","","",19,[[],["vector",3]]],[11,"bitor","","",19,[[["vector",3]],["vector",3]]],[11,"bitor","","",19,[[["vector",3]],["vector",3]]],[11,"bitxor","","",19,[[],["vector",3]]],[11,"bitxor","","",19,[[],["vector",3]]],[11,"bitxor","","",19,[[["vector",3]],["vector",3]]],[11,"bitxor","","",19,[[["vector",3]],["vector",3]]],[11,"bitand_assign","","",19,[[]]],[11,"bitand_assign","","",19,[[]]],[11,"bitand_assign","","",19,[[["vector",3]]]],[11,"bitand_assign","","",19,[[["vector",3]]]],[11,"bitor_assign","","",19,[[]]],[11,"bitor_assign","","",19,[[]]],[11,"bitor_assign","","",19,[[["vector",3]]]],[11,"bitor_assign","","",19,[[["vector",3]]]],[11,"bitxor_assign","","",19,[[]]],[11,"bitxor_assign","","",19,[[]]],[11,"bitxor_assign","","",19,[[["vector",3]]]],[11,"bitxor_assign","","",19,[[["vector",3]]]],[11,"index","rulinalg::matrix","",7,[[]]],[11,"index","","",10,[[]]],[11,"index","","",11,[[]]],[11,"index","","",15,[[]]],[11,"index","","",16,[[]]],[11,"index","","",31,[[]]],[11,"index","","",32,[[]]],[11,"index","rulinalg::vector","",19,[[]]],[11,"index_mut","rulinalg::matrix","",11,[[]]],[11,"index_mut","","",7,[[]]],[11,"index_mut","","",16,[[]]],[11,"index_mut","","",32,[[]]],[11,"index_mut","rulinalg::vector","",19,[[]]],[11,"hash","rulinalg::matrix","",7,[[]]],[11,"hash","rulinalg::vector","",19,[[]]],[11,"from_iter","rulinalg::matrix","",7,[[["intoiterator",8]]]],[11,"from_iter","","",7,[[["intoiterator",8]]]],[11,"from_iter","","",7,[[["intoiterator",8]]]],[11,"from_iter","rulinalg::vector","",19,[[]]],[11,"description","rulinalg::error","",18,[[]]],[11,"is_empty","rulinalg::matrix","Returns true if the matrix contais no elements",13,[[]]],[11,"as_slice","","Returns a `MatrixSlice` over the whole matrix.",13,[[],["matrixslice",3]]],[11,"get_unchecked","","Get a reference to a point in the matrix without bounds…",13,[[]]],[11,"col","","Returns the column of a matrix at the given index. `None`…",13,[[],["column",3]]],[11,"col_unchecked","","Returns the column of a matrix at the given index without…",13,[[],["column",3]]],[11,"row","","Returns the row of a matrix at the given index.",13,[[],["row",3]]],[11,"row_unchecked","","Returns the row of a matrix at the given index without…",13,[[],["row",3]]],[11,"iter","","Returns an iterator over the matrix data.",13,[[],["sliceiter",3]]],[11,"col_iter","","Iterate over the columns of the matrix.",13,[[],["cols",3]]],[11,"row_iter","","Iterate over the rows of the matrix.",13,[[],["rows",3]]],[11,"diag_iter","","Iterate over diagonal entries",13,[[["diagoffset",4]],["diagonal",3]]],[11,"sum_rows","","The sum of the rows of the matrix.",13,[[],["vector",3]]],[11,"sum_cols","","The sum of the columns of the matrix.",13,[[],["vector",3]]],[11,"norm","","Compute given matrix norm for matrix.",13,[[["matrixnorm",8]]]],[11,"metric","","Compute the metric distance between two matrices.",13,[[]]],[11,"sum","","The sum of all elements in the matrix",13,[[]]],[11,"min","","The min of the specified axis of the matrix.",13,[[["axes",4]],["vector",3]]],[11,"max","","The max of the specified axis of the matrix.",13,[[["axes",4]],["vector",3]]],[11,"into_matrix","","Convert the matrix struct into a owned Matrix.",13,[[],["matrix",3]]],[11,"select_rows","","Select rows from matrix",13,[[],["matrix",3]]],[11,"select_cols","","Select columns from matrix",13,[[],["matrix",3]]],[11,"elemul","","The elementwise product of two matrices.",13,[[],["matrix",3]]],[11,"elediv","","The elementwise division of two matrices.",13,[[],["matrix",3]]],[11,"select","","Select block matrix from matrix",13,[[],["matrix",3]]],[11,"hcat","","Horizontally concatenates two matrices. With self on the…",13,[[],["matrix",3]]],[11,"vcat","","Vertically concatenates two matrices. With self on top.",13,[[],["matrix",3]]],[11,"diag","","Extract the diagonal of the matrix",13,[[],["diagonal",3]]],[11,"transpose","","Tranposes the given matrix",13,[[],["matrix",3]]],[11,"is_diag","","Checks if matrix is diagonal.",13,[[]]],[11,"solve_u_triangular","","Solves an upper triangular linear system.",13,[[["vector",3]],[["result",4],["vector",3],["error",3]]]],[11,"solve_l_triangular","","Solves a lower triangular linear system.",13,[[["vector",3]],[["result",4],["vector",3],["error",3]]]],[11,"split_at","","Split the matrix at the specified axis returning two…",13,[[["axes",4]]]],[11,"sub_slice","","Produce a `MatrixSlice` from an existing matrix.",13,[[],["matrixslice",3]]],[11,"as_mut_slice","","Returns a `MatrixSliceMut` over the whole matrix.",14,[[],["matrixslicemut",3]]],[11,"get_unchecked_mut","","Get a mutable reference to a point in the matrix without…",14,[[]]],[11,"iter_mut","","Returns a mutable iterator over the matrix.",14,[[],["sliceitermut",3]]],[11,"col_mut","","Returns a mutable reference to the column of a matrix at…",14,[[],["columnmut",3]]],[11,"col_unchecked_mut","","Returns a mutable reference to the column of a matrix at…",14,[[],["columnmut",3]]],[11,"row_mut","","Returns a mutable reference to the row of a matrix at the…",14,[[],["rowmut",3]]],[11,"row_unchecked_mut","","Returns a mutable reference to the row of a matrix at the…",14,[[],["rowmut",3]]],[11,"swap_rows","","Swaps two rows in a matrix.",14,[[]]],[11,"swap_cols","","Swaps two columns in a matrix.",14,[[]]],[11,"col_iter_mut","","Iterate over the mutable columns of the matrix.",14,[[],["colsmut",3]]],[11,"row_iter_mut","","Iterate over the mutable rows of the matrix.",14,[[],["rowsmut",3]]],[11,"diag_iter_mut","","Iterate over diagonal entries mutably",14,[[["diagoffset",4]],["diagonalmut",3]]],[11,"set_to","","Sets the underlying matrix data to the target data.",14,[[["basematrix",8]]]],[11,"apply","","Applies a function to each element in the matrix.",14,[[["fn",8]]]],[11,"split_at_mut","","Split the matrix at the specified axis returning two…",14,[[["axes",4]]]],[11,"sub_slice_mut","","Produce a `MatrixSliceMut` from an existing matrix.",14,[[],["matrixslicemut",3]]]],"p":[[3,"AbsoluteElementwiseComparator"],[3,"UlpElementwiseComparator"],[8,"ElementwiseComparator"],[4,"Parity"],[4,"Axes"],[4,"DiagOffset"],[3,"LUP"],[3,"Matrix"],[3,"PartialPivLu"],[8,"Decomposition"],[3,"MatrixSlice"],[3,"MatrixSliceMut"],[3,"PermutationMatrix"],[8,"BaseMatrix"],[8,"BaseMatrixMut"],[3,"Row"],[3,"RowMut"],[4,"ErrorKind"],[3,"Error"],[3,"Vector"],[4,"UlpComparisonResult"],[8,"Ulp"],[4,"Lp"],[8,"VectorNorm"],[8,"VectorMetric"],[8,"MatrixNorm"],[8,"MatrixMetric"],[3,"ExactElementwiseComparator"],[3,"FloatElementwiseComparator"],[3,"Rows"],[3,"RowsMut"],[3,"Column"],[3,"ColumnMut"],[3,"Cols"],[3,"ColsMut"],[3,"Diagonal"],[3,"DiagonalMut"],[3,"SliceIter"],[3,"SliceIterMut"],[3,"Euclidean"]]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,[[],["demangle",3]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",null,[[],[["trydemangleerror",3],["result",4],["demangle",3]]]],[11,"as_str","","Returns the underlying string that\'s being demangled.",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",1,[[],["trydemangleerror",3]]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]},\
"rusttype":{"doc":"RustType is a pure Rust alternative to libraries like…","i":[[3,"Curve","rusttype","A quadratic Bezier curve, starting at `p[0]`, ending at…",null,null],[12,"p","","",0,null],[3,"Line","","A straight line between two points, `p[0]` and `p[1]`",null,null],[12,"p","","",1,null],[3,"Point","","A point in 2-dimensional space, with each dimension of…",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[3,"Rect","","A rectangle, with top-left corner at `min`, and…",null,null],[12,"min","","",3,null],[12,"max","","",3,null],[3,"Vector","","A vector in 2-dimensional space, with each dimension of…",null,null],[12,"x","","",4,null],[12,"y","","",4,null],[3,"FontCollection","","A collection of fonts read straight from a font file\'s…",null,null],[3,"Font","","A single font. This may or may not own the font data.",null,null],[3,"Codepoint","","Represents a Unicode code point.",null,null],[12,"0","","",5,null],[3,"GlyphId","","Represents a glyph identifier for a particular font. This…",null,null],[12,"0","","",6,null],[3,"Glyph","","A single glyph of a font. this may either be a thin…",null,null],[3,"SharedGlyphData","","",null,null],[12,"id","","",7,null],[12,"extents","","",7,null],[12,"scale_for_1_pixel","","",7,null],[12,"unit_h_metrics","","",7,null],[12,"shape","","",7,null],[3,"HMetrics","","The \\\"horizontal metrics\\\" of a glyph. This is useful for…",null,null],[12,"advance_width","","The horizontal offset that the origin of the next glyph…",8,null],[12,"left_side_bearing","","The horizontal offset between the origin of this glyph and…",8,null],[3,"VMetrics","","The \\\"vertical metrics\\\" of a font at a particular scale.…",null,null],[12,"ascent","","The highest point that any glyph in the font extends to…",9,null],[12,"descent","","The lowest point that any glyph in the font extends to…",9,null],[12,"line_gap","","The gap to leave between the descent of one line and the…",9,null],[3,"ScaledGlyph","","A glyph augmented with scaling information. You can query…",null,null],[3,"PositionedGlyph","","A glyph augmented with positioning and scaling…",null,null],[3,"Scale","","Defines the size of a rendered face of a font, in pixels,…",null,null],[12,"x","","Horizontal scale, in pixels.",10,null],[12,"y","","Vertical scale, in pixels.",10,null],[3,"IntoFontsIter","","",null,null],[3,"GlyphIter","","",null,null],[3,"LayoutIter","","",null,null],[3,"Contour","","A closed loop consisting of a sequence of `Segment`s.",null,null],[12,"segments","","",11,null],[4,"SharedBytes","","`SharedBytes` handles the lifetime of font data used in…",null,null],[13,"ByRef","","",12,null],[13,"ByArc","","",12,null],[4,"Segment","","Part of a `Contour`, either a `Line` or a `Curve`.",null,null],[13,"Line","","",13,null],[13,"Curve","","",13,null],[4,"Error","","The type for errors returned by rusttype.",null,null],[13,"UnrecognizedFormat","","Font data presented to rusttype is not in a format that…",14,null],[13,"IllFormed","","Font data presented to rusttype was ill-formed (lacking…",14,null],[13,"CollectionIndexOutOfBounds","","The caller tried to access the `i`\'th font from a…",14,null],[13,"CollectionContainsMultipleFonts","","The caller tried to convert a `FontCollection` into a font…",14,null],[5,"point","","A convenience function for generating `Point`s.",null,[[],["point",3]]],[5,"vector","","A convenience function for generating `Vector`s.",null,[[],["vector",3]]],[11,"width","","",3,[[]]],[11,"height","","",3,[[]]],[8,"IntoGlyphId","","A trait for types that can be converted into a `GlyphId`,…",null,null],[10,"into_glyph_id","","Convert `self` into a `GlyphId`, consulting the index map…",15,[[["font",3]],["glyphid",3]]],[11,"uniform","","Uniform scaling, equivalent to `Scale { x: s, y: s }`.",10,[[],["scale",3]]],[11,"from_bytes","","Constructs a font collection from an array of bytes,…",16,[[["sharedbytes",4],["into",8]],[["fontcollection",3],["result",4],["error",4]]]],[11,"into_font","","If this `FontCollection` holds a single font, or a…",16,[[],[["font",3],["result",4],["error",4]]]],[11,"font_at","","Gets the font at index `i` in the font collection, if it…",16,[[],[["font",3],["result",4],["error",4]]]],[11,"into_fonts","","Converts `self` into an `Iterator` yielding each `Font`…",16,[[],["intofontsiter",3]]],[11,"from_bytes","","Constructs a font from an array of bytes, this is a…",17,[[["sharedbytes",4],["into",8]],[["font",3],["result",4],["error",4]]]],[11,"v_metrics","","The \\\"vertical metrics\\\" for this font at a given scale.…",17,[[["scale",3]],["vmetrics",3]]],[11,"v_metrics_unscaled","","Get the unscaled VMetrics for this font, shared by all…",17,[[],["vmetrics",3]]],[11,"units_per_em","","Returns the units per EM square of this font",17,[[]]],[11,"glyph_count","","The number of glyphs present in this font. Glyph…",17,[[]]],[11,"glyph","","Returns the corresponding glyph for a Unicode code point…",17,[[["intoglyphid",8]],["glyph",3]]],[11,"glyphs_for","","A convenience function.",17,[[["iterator",8]],[["iterator",8],["glyphiter",3]]]],[11,"font_name_strings","","Returns an iterator over the names for this font.",17,[[],[["sharedbytes",4],["fontnameiter",3]]]],[11,"layout","","A convenience function for laying out glyphs for a string…",17,[[["point",3],["scale",3]],["layoutiter",3]]],[11,"pair_kerning","","Returns additional kerning to apply as well as that given…",17,[[["scale",3]]]],[11,"font","","The font to which this glyph belongs. If the glyph is a…",18,[[],[["font",3],["option",4]]]],[11,"id","","The glyph identifier for this glyph.",18,[[],["glyphid",3]]],[11,"scaled","","Augments this glyph with scaling information, making…",18,[[["scale",3]],["scaledglyph",3]]],[11,"standalone","","Turns a `Glyph<\'a>` into a `Glyph<\'static>`. This produces…",18,[[],["glyph",3]]],[11,"get_data","","Get the data from this glyph (such as width, extents,…",18,[[],[["arc",3],["option",4]]]],[11,"id","","The glyph identifier for this glyph.",19,[[],["glyphid",3]]],[11,"font","","The font to which this glyph belongs. If the glyph is a…",19,[[],[["font",3],["option",4]]]],[11,"into_unscaled","","A reference to this glyph without the scaling",19,[[],["glyph",3]]],[11,"unscaled","","Removes the scaling from this glyph",19,[[],["glyph",3]]],[11,"positioned","","Augments this glyph with positioning information, making…",19,[[["point",3]],["positionedglyph",3]]],[11,"scale","","",19,[[],["scale",3]]],[11,"h_metrics","","Retrieves the \\\"horizontal metrics\\\" of this glyph. See…",19,[[],["hmetrics",3]]],[11,"shape","","Produces a list of the contours that make up the shape of…",19,[[],[["vec",3],["option",4]]]],[11,"exact_bounding_box","","The bounding box of the shape of this glyph, not to be…",19,[[],[["rect",3],["option",4]]]],[11,"standalone","","Constructs a glyph that owns its data from this glyph.…",19,[[],["scaledglyph",3]]],[11,"id","","The glyph identifier for this glyph.",20,[[],["glyphid",3]]],[11,"font","","The font to which this glyph belongs. If the glyph is a…",20,[[],[["font",3],["option",4]]]],[11,"unpositioned","","A reference to this glyph without positioning",20,[[],["scaledglyph",3]]],[11,"into_unpositioned","","Removes the positioning from this glyph",20,[[],["scaledglyph",3]]],[11,"pixel_bounding_box","","The conservative pixel-boundary bounding box for this…",20,[[],[["option",4],["rect",3]]]],[11,"shape","","Similar to `ScaledGlyph::shape()`, but with the position…",20,[[],[["vec",3],["option",4]]]],[11,"scale","","",20,[[],["scale",3]]],[11,"position","","",20,[[],["point",3]]],[11,"draw","","Rasterises this glyph. For each pixel in the rect given by…",20,[[["fnmut",8]]]],[11,"standalone","","Constructs a glyph that owns its data from this glyph.…",20,[[],["positionedglyph",3]]],[11,"set_position","","Resets positioning information and recalculates the pixel…",20,[[["point",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_glyph_id","","",5,[[["font",3]],["glyphid",3]]],[11,"into_glyph_id","","",6,[[["font",3]],["glyphid",3]]],[11,"from","","",12,[[],["sharedbytes",4]]],[11,"from","","",12,[[["arc",3]],["sharedbytes",4]]],[11,"from","","",12,[[["box",3]],["sharedbytes",4]]],[11,"from","","",12,[[["vec",3]],["sharedbytes",4]]],[11,"from","","",12,[[],["sharedbytes",4]]],[11,"from","","",9,[[["vmetrics",3]]]],[11,"next","","",21,[[],["option",4]]],[11,"next","","",22,[[],[["option",4],["glyph",3]]]],[11,"next","","",23,[[],[["option",4],["positionedglyph",3]]]],[11,"clone","","",2,[[],["point",3]]],[11,"clone","","",4,[[],["vector",3]]],[11,"clone","","",1,[[],["line",3]]],[11,"clone","","",0,[[],["curve",3]]],[11,"clone","","",3,[[],["rect",3]]],[11,"clone","","",16,[[],["fontcollection",3]]],[11,"clone","","",17,[[],["font",3]]],[11,"clone","","",12,[[],["sharedbytes",4]]],[11,"clone","","",5,[[],["codepoint",3]]],[11,"clone","","",6,[[],["glyphid",3]]],[11,"clone","","",18,[[],["glyph",3]]],[11,"clone","","",8,[[],["hmetrics",3]]],[11,"clone","","",9,[[],["vmetrics",3]]],[11,"clone","","",19,[[],["scaledglyph",3]]],[11,"clone","","",20,[[],["positionedglyph",3]]],[11,"clone","","",10,[[],["scale",3]]],[11,"clone","","",22,[[],["glyphiter",3]]],[11,"clone","","",23,[[],["layoutiter",3]]],[11,"clone","","",13,[[],["segment",4]]],[11,"clone","","",11,[[],["contour",3]]],[11,"cmp","","",2,[[["point",3]],["ordering",4]]],[11,"cmp","","",4,[[["vector",3]],["ordering",4]]],[11,"cmp","","",3,[[["rect",3]],["ordering",4]]],[11,"cmp","","",5,[[["codepoint",3]],["ordering",4]]],[11,"cmp","","",6,[[["glyphid",3]],["ordering",4]]],[11,"eq","","",2,[[["point",3]]]],[11,"ne","","",2,[[["point",3]]]],[11,"eq","","",4,[[["vector",3]]]],[11,"ne","","",4,[[["vector",3]]]],[11,"eq","","",1,[[["line",3]]]],[11,"ne","","",1,[[["line",3]]]],[11,"eq","","",0,[[["curve",3]]]],[11,"ne","","",0,[[["curve",3]]]],[11,"eq","","",3,[[["rect",3]]]],[11,"ne","","",3,[[["rect",3]]]],[11,"eq","","",5,[[["codepoint",3]]]],[11,"ne","","",5,[[["codepoint",3]]]],[11,"eq","","",6,[[["glyphid",3]]]],[11,"ne","","",6,[[["glyphid",3]]]],[11,"eq","","",8,[[["hmetrics",3]]]],[11,"ne","","",8,[[["hmetrics",3]]]],[11,"eq","","",9,[[["vmetrics",3]]]],[11,"ne","","",9,[[["vmetrics",3]]]],[11,"eq","","",10,[[["scale",3]]]],[11,"ne","","",10,[[["scale",3]]]],[11,"partial_cmp","","",2,[[["point",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["point",3]]]],[11,"le","","",2,[[["point",3]]]],[11,"gt","","",2,[[["point",3]]]],[11,"ge","","",2,[[["point",3]]]],[11,"partial_cmp","","",4,[[["vector",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["vector",3]]]],[11,"le","","",4,[[["vector",3]]]],[11,"gt","","",4,[[["vector",3]]]],[11,"ge","","",4,[[["vector",3]]]],[11,"partial_cmp","","",1,[[["line",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["line",3]]]],[11,"le","","",1,[[["line",3]]]],[11,"gt","","",1,[[["line",3]]]],[11,"ge","","",1,[[["line",3]]]],[11,"partial_cmp","","",0,[[["curve",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["curve",3]]]],[11,"le","","",0,[[["curve",3]]]],[11,"gt","","",0,[[["curve",3]]]],[11,"ge","","",0,[[["curve",3]]]],[11,"partial_cmp","","",3,[[["rect",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["rect",3]]]],[11,"le","","",3,[[["rect",3]]]],[11,"gt","","",3,[[["rect",3]]]],[11,"ge","","",3,[[["rect",3]]]],[11,"partial_cmp","","",5,[[["codepoint",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["codepoint",3]]]],[11,"le","","",5,[[["codepoint",3]]]],[11,"gt","","",5,[[["codepoint",3]]]],[11,"ge","","",5,[[["codepoint",3]]]],[11,"partial_cmp","","",6,[[["glyphid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["glyphid",3]]]],[11,"le","","",6,[[["glyphid",3]]]],[11,"gt","","",6,[[["glyphid",3]]]],[11,"ge","","",6,[[["glyphid",3]]]],[11,"partial_cmp","","",8,[[["hmetrics",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["hmetrics",3]]]],[11,"le","","",8,[[["hmetrics",3]]]],[11,"gt","","",8,[[["hmetrics",3]]]],[11,"ge","","",8,[[["hmetrics",3]]]],[11,"partial_cmp","","",9,[[["vmetrics",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["vmetrics",3]]]],[11,"le","","",9,[[["vmetrics",3]]]],[11,"gt","","",9,[[["vmetrics",3]]]],[11,"ge","","",9,[[["vmetrics",3]]]],[11,"partial_cmp","","",10,[[["scale",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["scale",3]]]],[11,"le","","",10,[[["scale",3]]]],[11,"gt","","",10,[[["scale",3]]]],[11,"ge","","",10,[[["scale",3]]]],[11,"deref","","",12,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"div","","",4,[[],["vector",3]]],[11,"div","","",4,[[],["vector",3]]],[11,"sub","","",2,[[["point",3]],["vector",3]]],[11,"sub","","",4,[[["vector",3]],["vector",3]]],[11,"sub","","",2,[[["vector",3]],["point",3]]],[11,"add","","",4,[[["vector",3]],["vector",3]]],[11,"add","","",2,[[["vector",3]],["point",3]]],[11,"add","","",4,[[["point",3]],["point",3]]],[11,"mul","","",4,[[],["vector",3]]],[11,"mul","","",4,[[],["vector",3]]],[11,"mul","","",9,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"description","","",14,[[]]]],"p":[[3,"Curve"],[3,"Line"],[3,"Point"],[3,"Rect"],[3,"Vector"],[3,"Codepoint"],[3,"GlyphId"],[3,"SharedGlyphData"],[3,"HMetrics"],[3,"VMetrics"],[3,"Scale"],[3,"Contour"],[4,"SharedBytes"],[4,"Segment"],[4,"Error"],[8,"IntoGlyphId"],[3,"FontCollection"],[3,"Font"],[3,"Glyph"],[3,"ScaledGlyph"],[3,"PositionedGlyph"],[3,"IntoFontsIter"],[3,"GlyphIter"],[3,"LayoutIter"]]},\
"scoped_threadpool":{"doc":"This crate provides a stable, safe and scoped threadpool.","i":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads…",null,null],[3,"Scope","","Handle to the scope during which the threadpool is borrowed.",null,null],[11,"new","","Construct a threadpool with the given number of threads.…",0,[[],["pool",3]]],[11,"scoped","","Borrows the pool and allows executing jobs on other…",0,[[]]],[11,"thread_count","","Returns the number of threads inside this pool.",0,[[]]],[11,"execute","","Execute a job on the threadpool.",1,[[]]],[11,"join_all","","Blocks until all currently queued jobs have run to…",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"drop","","",1,[[]]]],"p":[[3,"Pool"],[3,"Scope"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",null,[[],[["scopeguard",3],["always",4]]]],[8,"Strategy","","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[],["scopeguard",3]]],[11,"into_inner","","“Defuse” the guard and extract the value without calling…",1,[[]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"should_run","","",2,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"scroll":{"doc":"Scroll","i":[[24,"Pread","scroll","",null,null],[24,"Pwrite","","",null,null],[24,"SizeWith","","",null,null],[24,"IOread","","",null,null],[24,"IOwrite","","",null,null],[3,"Uleb128","","An unsigned leb128 integer",null,null],[3,"Sleb128","","An signed leb128 integer",null,null],[4,"Endian","","The endianness (byte order) of a stream of bytes",null,null],[13,"Little","","",0,null],[13,"Big","","",0,null],[4,"Error","","A custom Scroll error",null,null],[13,"TooBig","","The type you tried to read was too big",1,null],[12,"size","scroll::Error","",2,null],[12,"len","","",2,null],[13,"BadOffset","scroll","The requested offset to read/write at is invalid",1,null],[13,"BadInput","","",1,null],[12,"size","scroll::Error","",3,null],[12,"msg","","",3,null],[13,"Custom","scroll","A custom Scroll error for reporting messages to clients",1,null],[13,"IO","","Returned when IO based errors are encountered",1,null],[0,"ctx","","Generic context-aware conversion traits, for automatic…",null,null],[4,"StrCtx","scroll::ctx","The parsing context for converting a byte sequence to a…",null,null],[13,"Delimiter","","",4,null],[13,"DelimiterUntil","","",4,null],[13,"Length","","",4,null],[17,"NULL","","A C-style, null terminator based delimiter",null,null],[17,"SPACE","","A space-based delimiter",null,null],[17,"RET","","A newline-based delimiter",null,null],[17,"TAB","","A tab-based delimiter",null,null],[8,"MeasureWith","","A trait for measuring how large something is; for a byte…",null,null],[10,"measure_with","","How large is `Self`, given the `ctx`?",5,[[]]],[8,"FromCtx","","Reads `Self` from `This` using the context `Ctx`; must not…",null,null],[10,"from_ctx","","",6,[[]]],[8,"TryFromCtx","","Tries to read `Self` from `This` using the context `Ctx`",null,null],[16,"Error","","",7,null],[10,"try_from_ctx","","",7,[[],["result",4]]],[8,"IntoCtx","","Writes `Self` into `This` using the context `Ctx`",null,null],[10,"into_ctx","","",8,[[]]],[8,"TryIntoCtx","","Tries to write `Self` into `This` using the context `Ctx`",null,null],[16,"Error","","",9,null],[10,"try_into_ctx","","",9,[[],["result",4]]],[8,"SizeWith","","Gets the size of `Self` with a `Ctx`, and in…",null,null],[10,"size_with","","",10,[[]]],[11,"len","","",4,[[]]],[11,"is_empty","","",4,[[]]],[11,"network","scroll","",0,[[],["endian",4]]],[11,"is_little","","",0,[[]]],[11,"size","","Return how many bytes this Uleb128 takes up in memory",11,[[]]],[11,"read","","Read a variable length u64 from `bytes` at `offset`",11,[[],["result",6]]],[11,"size","","Return how many bytes this Sleb128 takes up in memory",12,[[]]],[11,"read","","Read a variable length i64 from `bytes` at `offset`",12,[[],["result",6]]],[6,"Result","","",null,null],[17,"LE","","Little Endian byte order context",null,null],[17,"BE","","Big Endian byte order context",null,null],[17,"NETWORK","","Network byte order context",null,null],[17,"NATIVE","","The machine\'s native byte order",null,null],[8,"Pread","","A very generic, contextual pread interface in Rust. Allows…",null,null],[11,"pread","","Reads a value from `self` at `offset` with a default…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"pread_with","","Reads a value from `self` at `offset` with the given `ctx`",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread","","Reads a value from `self` at `offset` with a default…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread_with","","Reads a value from `self` at `offset` with the given…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread_inout","","Trys to write `inout.len()` `N`s into `inout` from `Self`…",13,[[],["result",4]]],[11,"gread_inout_with","","Trys to write `inout.len()` `N`s into `inout` from `Self`…",13,[[],["result",4]]],[8,"Pwrite","","Writes into `Self` at an offset of type `I` using a `Ctx`",null,null],[11,"pwrite","","",14,[[["tryintoctx",8]],["result",4]]],[11,"pwrite_with","","Write `N` at offset `I` with context `Ctx`",14,[[["tryintoctx",8]],["result",4]]],[11,"gwrite","","Write `n` into `self` at `offset`, with a default `Ctx`.…",14,[[["tryintoctx",8]],["result",4]]],[11,"gwrite_with","","Write `n` into `self` at `offset`, with the `ctx`. Updates…",14,[[["tryintoctx",8]],["result",4]]],[8,"Cread","","Core-read - core, no_std friendly trait for reading basic…",null,null],[11,"cread_with","","Reads a value from `Self` at `offset` with `ctx`. Cannot…",15,[[],["fromctx",8]]],[11,"cread","","Reads a value implementing `FromCtx` from `Self` at…",15,[[],["fromctx",8]]],[8,"Cwrite","","Core-write - core, no_std friendly trait for writing basic…",null,null],[11,"cwrite","","Writes `n` into `Self` at `offset`; uses default context.…",16,[[["intoctx",8]]]],[11,"cwrite_with","","Writes `n` into `Self` at `offset` with `ctx`",16,[[["intoctx",8]]]],[8,"IOread","","An extension trait to `std::io::Read` streams; this only…",null,null],[11,"ioread","","Reads the type `N` from `Self`, with a default parsing…",17,[[],[["fromctx",8],["sizewith",8],["result",6]]]],[11,"ioread_with","","Reads the type `N` from `Self`, with the parsing context…",17,[[],[["fromctx",8],["sizewith",8],["result",6]]]],[8,"IOwrite","","An extension trait to `std::io::Write` streams; this only…",null,null],[11,"iowrite","","Writes the type `N` into `Self`, with the parsing context…",18,[[["intoctx",8],["sizewith",8]],["result",6]]],[11,"iowrite_with","","Writes the type `N` into `Self`, with the parsing context…",18,[[["intoctx",8],["sizewith",8]],["result",6]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","scroll::ctx","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"try_from_ctx","scroll","",11,[[],["result",4]]],[11,"try_from_ctx","","",12,[[],["result",4]]],[11,"as_ref","","",11,[[]]],[11,"as_ref","","",12,[[]]],[11,"from","","",1,[[["error",3]],["error",4]]],[11,"from","","",0,[[]]],[11,"clone","scroll::ctx","",4,[[],["strctx",4]]],[11,"clone","scroll","",0,[[],["endian",4]]],[11,"clone","","",11,[[],["uleb128",3]]],[11,"clone","","",12,[[],["sleb128",3]]],[11,"default","scroll::ctx","",4,[[]]],[11,"default","scroll","",0,[[]]],[11,"eq","","",0,[[["endian",4]]]],[11,"eq","","",11,[[["uleb128",3]]]],[11,"ne","","",11,[[["uleb128",3]]]],[11,"eq","","",12,[[["sleb128",3]]]],[11,"ne","","",12,[[["sleb128",3]]]],[11,"fmt","scroll::ctx","",4,[[["formatter",3]],["result",6]]],[11,"fmt","scroll","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"description","","",1,[[]]],[11,"cause","","",1,[[],[["option",4],["error",8]]]],[11,"pread","","Reads a value from `self` at `offset` with a default…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"pread_with","","Reads a value from `self` at `offset` with the given `ctx`",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread","","Reads a value from `self` at `offset` with a default…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread_with","","Reads a value from `self` at `offset` with the given…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread_inout","","Trys to write `inout.len()` `N`s into `inout` from `Self`…",13,[[],["result",4]]],[11,"gread_inout_with","","Trys to write `inout.len()` `N`s into `inout` from `Self`…",13,[[],["result",4]]],[11,"pwrite","","",14,[[["tryintoctx",8]],["result",4]]],[11,"pwrite_with","","Write `N` at offset `I` with context `Ctx`",14,[[["tryintoctx",8]],["result",4]]],[11,"gwrite","","Write `n` into `self` at `offset`, with a default `Ctx`.…",14,[[["tryintoctx",8]],["result",4]]],[11,"gwrite_with","","Write `n` into `self` at `offset`, with the `ctx`. Updates…",14,[[["tryintoctx",8]],["result",4]]],[11,"cread_with","","Reads a value from `Self` at `offset` with `ctx`. Cannot…",15,[[],["fromctx",8]]],[11,"cread","","Reads a value implementing `FromCtx` from `Self` at…",15,[[],["fromctx",8]]],[11,"cwrite","","Writes `n` into `Self` at `offset`; uses default context.…",16,[[["intoctx",8]]]],[11,"cwrite_with","","Writes `n` into `Self` at `offset` with `ctx`",16,[[["intoctx",8]]]],[11,"ioread","","Reads the type `N` from `Self`, with a default parsing…",17,[[],[["fromctx",8],["sizewith",8],["result",6]]]],[11,"ioread_with","","Reads the type `N` from `Self`, with the parsing context…",17,[[],[["fromctx",8],["sizewith",8],["result",6]]]],[11,"iowrite","","Writes the type `N` into `Self`, with the parsing context…",18,[[["intoctx",8],["sizewith",8]],["result",6]]],[11,"iowrite_with","","Writes the type `N` into `Self`, with the parsing context…",18,[[["intoctx",8],["sizewith",8]],["result",6]]]],"p":[[4,"Endian"],[4,"Error"],[13,"TooBig"],[13,"BadInput"],[4,"StrCtx"],[8,"MeasureWith"],[8,"FromCtx"],[8,"TryFromCtx"],[8,"IntoCtx"],[8,"TryIntoCtx"],[8,"SizeWith"],[3,"Uleb128"],[3,"Sleb128"],[8,"Pread"],[8,"Pwrite"],[8,"Cread"],[8,"Cwrite"],[8,"IOread"],[8,"IOwrite"]]},\
"scroll_derive":{"doc":"","i":[[24,"Pread","scroll_derive","",null,null],[24,"Pwrite","","",null,null],[24,"SizeWith","","",null,null],[24,"IOread","","",null,null],[24,"IOwrite","","",null,null]],"p":[]},\
"stb_truetype":{"doc":"","i":[[3,"FontInfo","stb_truetype","",null,null],[3,"Vertex","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[12,"cx","","",0,null],[12,"cy","","",0,null],[3,"Rect","","",null,null],[12,"x0","","",1,null],[12,"y0","","",1,null],[12,"x1","","",1,null],[12,"y1","","",1,null],[3,"HMetrics","","",null,null],[12,"advance_width","","",2,null],[12,"left_side_bearing","","",2,null],[3,"VMetrics","","",null,null],[12,"ascent","","",3,null],[12,"descent","","",3,null],[12,"line_gap","","",3,null],[3,"FontNameIter","","",null,null],[4,"VertexType","","",null,null],[13,"MoveTo","","",4,null],[13,"LineTo","","",4,null],[13,"CurveTo","","",4,null],[4,"PlatformId","","",null,null],[13,"Unicode","","",5,null],[13,"Mac","","",5,null],[13,"Iso","","",5,null],[13,"Microsoft","","",5,null],[4,"UnicodeEid","","",null,null],[13,"Unicode_1_0","","",6,null],[13,"Unicode_1_1","","",6,null],[13,"Iso_10646","","",6,null],[13,"Unicode_2_0_Bmp","","",6,null],[13,"Unicode_2_0_Full","","",6,null],[4,"MicrosoftEid","","",null,null],[13,"Symbol","","",7,null],[13,"UnicodeBMP","","",7,null],[13,"Shiftjis","","",7,null],[13,"UnicodeFull","","",7,null],[4,"MacEid","","",null,null],[13,"Roman","","",8,null],[13,"Arabic","","",8,null],[13,"Japanese","","",8,null],[13,"Hebrew","","",8,null],[13,"ChineseTrad","","",8,null],[13,"Greek","","",8,null],[13,"Korean","","",8,null],[13,"Russian","","",8,null],[4,"MicrosoftLang","","",null,null],[13,"English","","",9,null],[13,"Italian","","",9,null],[13,"Chinese","","",9,null],[13,"Japanese","","",9,null],[13,"Dutch","","",9,null],[13,"Korean","","",9,null],[13,"French","","",9,null],[13,"Russian","","",9,null],[13,"German","","",9,null],[13,"Hebrew","","",9,null],[13,"Swedish","","",9,null],[4,"MacLang","","",null,null],[13,"English","","",10,null],[13,"Japanese","","",10,null],[13,"Arabic","","",10,null],[13,"Korean","","",10,null],[13,"Dutch","","",10,null],[13,"Russian","","",10,null],[13,"French","","",10,null],[13,"Spanish","","",10,null],[13,"German","","",10,null],[13,"Swedish","","",10,null],[13,"Hebrew","","",10,null],[13,"ChineseSimplified","","",10,null],[13,"Italian","","",10,null],[13,"ChineseTrad","","",10,null],[4,"PlatformEncodingLanguageId","","",null,null],[13,"Unicode","","",11,null],[13,"Mac","","",11,null],[13,"Iso","","",11,null],[13,"Microsoft","","",11,null],[5,"is_font","","Return `true` if `data` holds a font stored in a format…",null,[[]]],[5,"is_collection","","Return `true` if `data` holds a TrueType Collection,…",null,[[]]],[5,"get_font_offset_for_index","","Each .ttf/.ttc file may have more than one font. Each font…",null,[[],["option",4]]],[11,"vertex_type","","",0,[[],["vertextype",4]]],[11,"new","","Given an offset into the file that defines a font, this…",12,[[],[["fontinfo",3],["option",4]]]],[11,"get_num_glyphs","","",12,[[]]],[11,"find_glyph_index","","If you\'re going to perform multiple operations on the same…",12,[[]]],[11,"get_codepoint_shape","","Returns the series of vertices encoding the shape of the…",12,[[],[["vec",3],["option",4]]]],[11,"get_glyph_box","","Like `get_codepoint_box`, but takes a glyph index. Use…",12,[[],[["option",4],["rect",3]]]],[11,"get_codepoint_box","","Gets the bounding box of the visible part of the glyph, in…",12,[[],[["option",4],["rect",3]]]],[11,"is_glyph_empty","","returns true if nothing is drawn for this glyph",12,[[]]],[11,"get_glyph_shape","","Like `get_codepoint_shape`, but takes a glyph index…",12,[[],[["vec",3],["option",4]]]],[11,"get_glyph_h_metrics","","like `get_codepoint_h_metrics`, but takes a glyph index…",12,[[],["hmetrics",3]]],[11,"get_glyph_kern_advance","","like `get_codepoint_kern_advance`, but takes glyph indices…",12,[[]]],[11,"get_codepoint_kern_advance","","an additional amount to add to the \'advance\' value between…",12,[[]]],[11,"get_codepoint_h_metrics","","`left_side_bearing` is the offset from the current…",12,[[],["hmetrics",3]]],[11,"get_v_metrics","","`ascent` is the coordinate above the baseline the font…",12,[[],["vmetrics",3]]],[11,"get_bounding_box","","the bounding box around all possible characters",12,[[],["rect",3]]],[11,"scale_for_pixel_height","","computes a scale factor to produce a font whose \\\"height\\\"…",12,[[]]],[11,"units_per_em","","Returns the units per EM square of this font.",12,[[]]],[11,"scale_for_mapping_em_to_pixels","","computes a scale factor to produce a font whose EM size is…",12,[[]]],[11,"get_glyph_bitmap_box_subpixel","","like `get_codepoint_bitmap_box_subpixel`, but takes a…",12,[[],[["option",4],["rect",3]]]],[11,"get_glyph_bitmap_box","","like `get_codepoint_bitmap_box`, but takes a glyph index…",12,[[],[["option",4],["rect",3]]]],[11,"get_codepoint_bitmap_box_subpixel","","same as get_codepoint_bitmap_box, but you can specify a…",12,[[],[["option",4],["rect",3]]]],[11,"get_codepoint_bitmap_box","","get the bounding box of the bitmap centered around the…",12,[[],[["option",4],["rect",3]]]],[11,"get_font_name_strings","","",12,[[],["fontnameiter",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"count","","",13,[[]]],[11,"last","","",13,[[],["option",4]]],[11,"nth","","",13,[[],["option",4]]],[11,"clone","","",12,[[],["fontinfo",3]]],[11,"clone","","",0,[[],["vertex",3]]],[11,"clone","","",4,[[],["vertextype",4]]],[11,"clone","","",1,[[],["rect",3]]],[11,"clone","","",2,[[],["hmetrics",3]]],[11,"clone","","",3,[[],["vmetrics",3]]],[11,"clone","","",5,[[],["platformid",4]]],[11,"clone","","",6,[[],["unicodeeid",4]]],[11,"clone","","",7,[[],["microsofteid",4]]],[11,"clone","","",8,[[],["maceid",4]]],[11,"clone","","",9,[[],["microsoftlang",4]]],[11,"clone","","",10,[[],["maclang",4]]],[11,"clone","","",11,[[],["platformencodinglanguageid",4]]],[11,"clone","","",13,[[],["fontnameiter",3]]],[11,"cmp","","",5,[[["platformid",4]],["ordering",4]]],[11,"cmp","","",6,[[["unicodeeid",4]],["ordering",4]]],[11,"cmp","","",7,[[["microsofteid",4]],["ordering",4]]],[11,"cmp","","",8,[[["maceid",4]],["ordering",4]]],[11,"cmp","","",9,[[["microsoftlang",4]],["ordering",4]]],[11,"cmp","","",10,[[["maclang",4]],["ordering",4]]],[11,"cmp","","",11,[[["platformencodinglanguageid",4]],["ordering",4]]],[11,"eq","","",0,[[["vertex",3]]]],[11,"ne","","",0,[[["vertex",3]]]],[11,"eq","","",4,[[["vertextype",4]]]],[11,"eq","","",1,[[["rect",3]]]],[11,"ne","","",1,[[["rect",3]]]],[11,"eq","","",2,[[["hmetrics",3]]]],[11,"ne","","",2,[[["hmetrics",3]]]],[11,"eq","","",3,[[["vmetrics",3]]]],[11,"ne","","",3,[[["vmetrics",3]]]],[11,"eq","","",5,[[["platformid",4]]]],[11,"eq","","",6,[[["unicodeeid",4]]]],[11,"eq","","",7,[[["microsofteid",4]]]],[11,"eq","","",8,[[["maceid",4]]]],[11,"eq","","",9,[[["microsoftlang",4]]]],[11,"eq","","",10,[[["maclang",4]]]],[11,"eq","","",11,[[["platformencodinglanguageid",4]]]],[11,"ne","","",11,[[["platformencodinglanguageid",4]]]],[11,"partial_cmp","","",5,[[["platformid",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",6,[[["unicodeeid",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",7,[[["microsofteid",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",8,[[["maceid",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",9,[[["microsoftlang",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",10,[[["maclang",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",11,[[["platformencodinglanguageid",4]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["platformencodinglanguageid",4]]]],[11,"le","","",11,[[["platformencodinglanguageid",4]]]],[11,"gt","","",11,[[["platformencodinglanguageid",4]]]],[11,"ge","","",11,[[["platformencodinglanguageid",4]]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]]],"p":[[3,"Vertex"],[3,"Rect"],[3,"HMetrics"],[3,"VMetrics"],[4,"VertexType"],[4,"PlatformId"],[4,"UnicodeEid"],[4,"MicrosoftEid"],[4,"MacEid"],[4,"MicrosoftLang"],[4,"MacLang"],[4,"PlatformEncodingLanguageId"],[3,"FontInfo"],[3,"FontNameIter"]]},\
"syn":{"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",10,null],[12,"left","","",10,null],[12,"op","","",10,null],[12,"right","","",10,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",11,null],[12,"func","","",11,null],[12,"paren_token","","",11,null],[12,"args","","",11,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",12,null],[12,"expr","","",12,null],[12,"as_token","","",12,null],[12,"ty","","",12,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",13,null],[12,"base","","",13,null],[12,"dot_token","","",13,null],[12,"member","","",13,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",14,null],[12,"expr","","",14,null],[12,"bracket_token","","",14,null],[12,"index","","",14,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",null,null],[12,"attrs","","",15,null],[12,"lit","","",15,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[3,"ExprMacro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",null,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",16,null],[12,"paren_token","","",16,null],[12,"expr","","",16,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",17,null],[12,"qself","","",17,null],[12,"path","","",17,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",18,null],[12,"op","","",18,null],[12,"expr","","",18,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",19,null],[12,"span","","",19,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<\'a, \'b, \'c>`.",null,null],[12,"for_token","","",20,null],[12,"lt_token","","",20,null],[12,"lifetimes","","",20,null],[12,"gt_token","","",20,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",21,null],[12,"const_token","","",21,null],[12,"ident","","",21,null],[12,"colon_token","","",21,null],[12,"ty","","",21,null],[12,"eq_token","","",21,null],[12,"default","","",21,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",22,null],[12,"params","","",22,null],[12,"gt_token","","",22,null],[12,"where_clause","","",22,null],[3,"LifetimeDef","","A lifetime definition: `\'a: \'b + \'c + \'d`.",null,null],[12,"attrs","","",23,null],[12,"lifetime","","",23,null],[12,"colon_token","","",23,null],[12,"bounds","","",23,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",24,null],[12,"eq_token","","",24,null],[12,"rhs_ty","","",24,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",null,null],[12,"lifetime","","",25,null],[12,"colon_token","","",25,null],[12,"bounds","","",25,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",26,null],[12,"bounded_ty","","The type being bounded",26,null],[12,"colon_token","","",26,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+\'static`)",26,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",27,null],[12,"modifier","","",27,null],[12,"lifetimes","","The `for<\'a>` in `for<\'a> Foo<&\'a T>`",27,null],[12,"path","","The `Foo<&\'a T>` in `for<\'a> Foo<&\'a T>`",27,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",28,null],[12,"ident","","",28,null],[12,"colon_token","","",28,null],[12,"bounds","","",28,null],[12,"eq_token","","",28,null],[12,"default","","",28,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",29,null],[12,"predicates","","",29,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Lifetime","","A Rust lifetime: `\'a`.",null,null],[12,"apostrophe","","",30,null],[12,"ident","","",30,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",31,null],[12,"span","","",31,null],[3,"LitByte","","A byte literal: `b\'f\'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\\\"foo\\\"`.",null,null],[3,"LitChar","","A character literal: `\'a\'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\\\"foo\\\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\\\"{}\\\", mac)`.",null,null],[12,"path","","",32,null],[12,"bang_token","","",32,null],[12,"delimiter","","",32,null],[12,"tokens","","",32,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",33,null],[12,"brace_token","","",33,null],[12,"variants","","",33,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",34,null],[12,"fields","","",34,null],[12,"semi_token","","",34,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",35,null],[12,"fields","","",35,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",36,null],[12,"vis","","Visibility of the struct or enum.",36,null],[12,"ident","","Name of the struct or enum.",36,null],[12,"generics","","Generics required to complete the definition.",36,null],[12,"data","","Data within the struct or enum.",36,null],[3,"Abi","","The binary interface of a function: `extern \\\"C\\\"`.",null,null],[12,"extern_token","","",37,null],[12,"name","","",37,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",38,null],[12,"name","","",38,null],[12,"ty","","",38,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",39,null],[12,"elem","","",39,null],[12,"semi_token","","",39,null],[12,"len","","",39,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",40,null],[12,"unsafety","","",40,null],[12,"abi","","",40,null],[12,"fn_token","","",40,null],[12,"paren_token","","",40,null],[12,"inputs","","",40,null],[12,"variadic","","",40,null],[12,"output","","",40,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",41,null],[12,"elem","","",41,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",42,null],[12,"bounds","","",42,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",43,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",44,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",45,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",46,null],[12,"elem","","",46,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",47,null],[12,"path","","",47,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",48,null],[12,"const_token","","",48,null],[12,"mutability","","",48,null],[12,"elem","","",48,null],[3,"TypeReference","","A reference type: `&\'a T` or `&\'a mut T`.",null,null],[12,"and_token","","",49,null],[12,"lifetime","","",49,null],[12,"mutability","","",49,null],[12,"elem","","",49,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",50,null],[12,"elem","","",50,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",51,null],[12,"bounds","","",51,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",52,null],[12,"elems","","",52,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",53,null],[12,"dots","","",53,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",54,null],[12,"lt_token","","",54,null],[12,"args","","",54,null],[12,"gt_token","","",54,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",55,null],[12,"eq_token","","",55,null],[12,"ty","","",55,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",56,null],[12,"colon_token","","",56,null],[12,"bounds","","",56,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",57,null],[12,"inputs","","`(A, B)`",57,null],[12,"output","","`C`",57,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",58,null],[12,"segments","","",58,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",59,null],[12,"arguments","","",59,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",60,null],[12,"ty","","",60,null],[12,"position","","",60,null],[12,"as_token","","",60,null],[12,"gt_token","","",60,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",61,null],[13,"Inner","","",61,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",62,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",62,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",62,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",63,null],[13,"Lit","","A Rust literal, like the `\\\"new_name\\\"` in…",63,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",64,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",64,null],[13,"Unit","","Unit struct or unit variant such as `None`.",64,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",65,null],[13,"Crate","","A crate-level visibility: `crate`.",65,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",65,null],[13,"Inherited","","An inherited visibility, which usually means private.",65,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",66,null],[13,"Assign","","An assignment expression: `a = compute()`.",66,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",66,null],[13,"Async","","An async block: `async { ... }`.",66,null],[13,"Await","","An await expression: `fut.await`.",66,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",66,null],[13,"Block","","A blocked scope: `{ ... }`.",66,null],[13,"Box","","A box expression: `box f`.",66,null],[13,"Break","","A `break`, with an optional label to break and an optional…",66,null],[13,"Call","","A function call expression: `invoke(a, b)`.",66,null],[13,"Cast","","A cast expression: `foo as f64`.",66,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",66,null],[13,"Continue","","A `continue`, with an optional label.",66,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",66,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",66,null],[13,"Group","","An expression contained within invisible delimiters.",66,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",66,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",66,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",66,null],[13,"Lit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",66,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",66,null],[13,"Macro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",66,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",66,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",66,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",66,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",66,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",66,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",66,null],[13,"Repeat","","An array literal constructed from one repeated element:…",66,null],[13,"Return","","A `return`, with an optional value to be returned.",66,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",66,null],[13,"Try","","A try-expression: `expr?`.",66,null],[13,"TryBlock","","A try block: `try { ... }`.",66,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",66,null],[13,"Type","","A type ascription expression: `foo: f64`.",66,null],[13,"Unary","","A unary operation: `!x`, `*x`.",66,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",66,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",66,null],[13,"While","","A while loop: `while expr { ... }`.",66,null],[13,"Yield","","A yield expression: `yield expr`.",66,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",67,null],[13,"Unnamed","","An unnamed field like `self.0`.",67,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",68,null],[13,"Lifetime","","A lifetime definition: `\'a: \'b + \'c + \'d`.",68,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",68,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",69,null],[13,"Maybe","","",69,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",70,null],[13,"Lifetime","","",70,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",71,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",71,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",71,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\\\"foo\\\"`.",72,null],[13,"ByteStr","","A byte string literal: `b\\\"foo\\\"`.",72,null],[13,"Byte","","A byte literal: `b\'f\'`.",72,null],[13,"Char","","A character literal: `\'a\'`.",72,null],[13,"Int","","An integer literal: `1` or `1u16`.",72,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",72,null],[13,"Bool","","A boolean literal: `true` or `false`.",72,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",72,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\\\"data\\\"`.",73,null],[13,"Raw","","A raw string like `r##\\\"data\\\"##`.",73,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",74,null],[13,"Brace","","",74,null],[13,"Bracket","","",74,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",75,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",75,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",75,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",76,null],[13,"Sub","","The `-` operator (subtraction)",76,null],[13,"Mul","","The `*` operator (multiplication)",76,null],[13,"Div","","The `/` operator (division)",76,null],[13,"Rem","","The `%` operator (modulus)",76,null],[13,"And","","The `&&` operator (logical and)",76,null],[13,"Or","","The `||` operator (logical or)",76,null],[13,"BitXor","","The `^` operator (bitwise xor)",76,null],[13,"BitAnd","","The `&` operator (bitwise and)",76,null],[13,"BitOr","","The `|` operator (bitwise or)",76,null],[13,"Shl","","The `<<` operator (shift left)",76,null],[13,"Shr","","The `>>` operator (shift right)",76,null],[13,"Eq","","The `==` operator (equality)",76,null],[13,"Lt","","The `<` operator (less than)",76,null],[13,"Le","","The `<=` operator (less than or equal to)",76,null],[13,"Ne","","The `!=` operator (not equal to)",76,null],[13,"Ge","","The `>=` operator (greater than or equal to)",76,null],[13,"Gt","","The `>` operator (greater than)",76,null],[13,"AddEq","","The `+=` operator",76,null],[13,"SubEq","","The `-=` operator",76,null],[13,"MulEq","","The `*=` operator",76,null],[13,"DivEq","","The `/=` operator",76,null],[13,"RemEq","","The `%=` operator",76,null],[13,"BitXorEq","","The `^=` operator",76,null],[13,"BitAndEq","","The `&=` operator",76,null],[13,"BitOrEq","","The `|=` operator",76,null],[13,"ShlEq","","The `<<=` operator",76,null],[13,"ShrEq","","The `>>=` operator",76,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",77,null],[13,"Not","","The `!` operator for logical inversion",77,null],[13,"Neg","","The `-` operator for negation",77,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",78,null],[13,"Type","","A particular type is returned.",78,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",79,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",79,null],[13,"Group","","A type contained within invisible delimiters.",79,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",79,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",79,null],[13,"Macro","","A macro in the type position.",79,null],[13,"Never","","The never type: `!`.",79,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",79,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",79,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",79,null],[13,"Reference","","A reference type: `&\'a T` or `&\'a mut T`.",79,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",79,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",79,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",79,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",79,null],[4,"GenericArgument","","An individual generic argument, like `\'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",80,null],[13,"Type","","A type argument.",80,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",80,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",80,null],[13,"Const","","A const expression. Must be inside of a block.",80,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",81,null],[13,"AngleBracketed","","The `<\'a, T>` in `std::slice::iter<\'a, T>`.",81,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",81,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[],[["parse",8],["result",6]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",82,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",83,null],[3,"As","","`as`",null,null],[12,"span","","",84,null],[3,"Async","","`async`",null,null],[12,"span","","",85,null],[3,"Auto","","`auto`",null,null],[12,"span","","",86,null],[3,"Await","","`await`",null,null],[12,"span","","",87,null],[3,"Become","","`become`",null,null],[12,"span","","",88,null],[3,"Box","","`box`",null,null],[12,"span","","",89,null],[3,"Break","","`break`",null,null],[12,"span","","",90,null],[3,"Const","","`const`",null,null],[12,"span","","",91,null],[3,"Continue","","`continue`",null,null],[12,"span","","",92,null],[3,"Crate","","`crate`",null,null],[12,"span","","",93,null],[3,"Default","","`default`",null,null],[12,"span","","",94,null],[3,"Do","","`do`",null,null],[12,"span","","",95,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",96,null],[3,"Else","","`else`",null,null],[12,"span","","",97,null],[3,"Enum","","`enum`",null,null],[12,"span","","",98,null],[3,"Extern","","`extern`",null,null],[12,"span","","",99,null],[3,"Final","","`final`",null,null],[12,"span","","",100,null],[3,"Fn","","`fn`",null,null],[12,"span","","",101,null],[3,"For","","`for`",null,null],[12,"span","","",102,null],[3,"If","","`if`",null,null],[12,"span","","",103,null],[3,"Impl","","`impl`",null,null],[12,"span","","",104,null],[3,"In","","`in`",null,null],[12,"span","","",105,null],[3,"Let","","`let`",null,null],[12,"span","","",106,null],[3,"Loop","","`loop`",null,null],[12,"span","","",107,null],[3,"Macro","","`macro`",null,null],[12,"span","","",108,null],[3,"Match","","`match`",null,null],[12,"span","","",109,null],[3,"Mod","","`mod`",null,null],[12,"span","","",110,null],[3,"Move","","`move`",null,null],[12,"span","","",111,null],[3,"Mut","","`mut`",null,null],[12,"span","","",112,null],[3,"Override","","`override`",null,null],[12,"span","","",113,null],[3,"Priv","","`priv`",null,null],[12,"span","","",114,null],[3,"Pub","","`pub`",null,null],[12,"span","","",115,null],[3,"Ref","","`ref`",null,null],[12,"span","","",116,null],[3,"Return","","`return`",null,null],[12,"span","","",117,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",118,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",119,null],[3,"Static","","`static`",null,null],[12,"span","","",120,null],[3,"Struct","","`struct`",null,null],[12,"span","","",121,null],[3,"Super","","`super`",null,null],[12,"span","","",122,null],[3,"Trait","","`trait`",null,null],[12,"span","","",123,null],[3,"Try","","`try`",null,null],[12,"span","","",124,null],[3,"Type","","`type`",null,null],[12,"span","","",125,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",126,null],[3,"Union","","`union`",null,null],[12,"span","","",127,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",128,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",129,null],[3,"Use","","`use`",null,null],[12,"span","","",130,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",131,null],[3,"Where","","`where`",null,null],[12,"span","","",132,null],[3,"While","","`while`",null,null],[12,"span","","",133,null],[3,"Yield","","`yield`",null,null],[12,"span","","",134,null],[3,"Add","","`+`",null,null],[12,"spans","","",135,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",136,null],[3,"And","","`&`",null,null],[12,"spans","","",137,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",138,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",139,null],[3,"At","","`@`",null,null],[12,"spans","","",140,null],[3,"Bang","","`!`",null,null],[12,"spans","","",141,null],[3,"Caret","","`^`",null,null],[12,"spans","","",142,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",143,null],[3,"Colon","","`:`",null,null],[12,"spans","","",144,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",145,null],[3,"Comma","","`,`",null,null],[12,"spans","","",146,null],[3,"Div","","`/`",null,null],[12,"spans","","",147,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",148,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",149,null],[3,"Dot","","`.`",null,null],[12,"spans","","",150,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",151,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",152,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",153,null],[3,"Eq","","`=`",null,null],[12,"spans","","",154,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",155,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",156,null],[3,"Gt","","`>`",null,null],[12,"spans","","",157,null],[3,"Le","","`<=`",null,null],[12,"spans","","",158,null],[3,"Lt","","`<`",null,null],[12,"spans","","",159,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",160,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",161,null],[3,"Or","","`|`",null,null],[12,"spans","","",162,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",163,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",164,null],[3,"Pound","","`#`",null,null],[12,"spans","","",165,null],[3,"Question","","`?`",null,null],[12,"spans","","",166,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",167,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",168,null],[3,"Rem","","`%`",null,null],[12,"spans","","",169,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",170,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",171,null],[3,"Semi","","`;`",null,null],[12,"spans","","",172,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",173,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",174,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",175,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",176,null],[3,"Star","","`*`",null,null],[12,"spans","","",177,null],[3,"Sub","","`-`",null,null],[12,"spans","","",178,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",179,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",180,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",181,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",182,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",183,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",184,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",181,[[["tokenstream",3]]]],[11,"surround","","",182,[[["tokenstream",3]]]],[11,"surround","","",183,[[["tokenstream",3]]]],[11,"surround","","",184,[[["tokenstream",3]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[],[["meta",4],["result",6]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[],[["parse",8],["result",6]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta…",62,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",64,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",64,[[],[["itermut",3],["field",3]]]],[11,"len","","Returns the number of fields.",64,[[]]],[11,"is_empty","","Returns `true` if there are zero fields.",64,[[]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",22,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",22,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",22,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",22,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",22,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",22,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",22,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for…",22,[[]]],[11,"as_turbofish","","Turn a type\'s generics like `<X, Y>` into a turbofish like…",185,[[],["turbofish",3]]],[11,"new","","",23,[[["lifetime",3]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the…",30,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",72,[[["literal",3]]]],[11,"new","","",186,[[["span",3]]]],[11,"value","","",186,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string…",186,[[],[["parse",8],["result",6]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",186,[[["parser",8]],["result",6]]],[11,"span","","",186,[[],["span",3]]],[11,"set_span","","",186,[[["span",3]]]],[11,"suffix","","",186,[[]]],[11,"new","","",187,[[["span",3]]]],[11,"value","","",187,[[],["vec",3]]],[11,"span","","",187,[[],["span",3]]],[11,"set_span","","",187,[[["span",3]]]],[11,"new","","",188,[[["span",3]]]],[11,"value","","",188,[[]]],[11,"span","","",188,[[],["span",3]]],[11,"set_span","","",188,[[["span",3]]]],[11,"new","","",189,[[["span",3]]]],[11,"value","","",189,[[]]],[11,"span","","",189,[[],["span",3]]],[11,"set_span","","",189,[[["span",3]]]],[11,"new","","",190,[[["span",3]]]],[11,"base10_digits","","",190,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",190,[[],["result",6]]],[11,"suffix","","",190,[[]]],[11,"span","","",190,[[],["span",3]]],[11,"set_span","","",190,[[["span",3]]]],[11,"new","","",191,[[["span",3]]]],[11,"base10_digits","","",191,[[]]],[11,"base10_parse","","",191,[[],["result",6]]],[11,"suffix","","",191,[[]]],[11,"span","","",191,[[],["span",3]]],[11,"set_span","","",191,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters…",32,[[],[["parse",8],["result",6]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters…",32,[[["parser",8]],["result",6]]],[11,"without_plus","","In some positions, types may not contain the `+`…",79,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",58,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",58,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",58,[[],[["ident",3],["option",4]]]],[11,"is_empty","","",81,[[]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",192,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",192,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",192,[[],["cursor",3]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",193,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",193,[[]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",193,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",193,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",193,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",193,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",193,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",193,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",193,[[],["option",4]]],[11,"span","","Returns the `Span` of the current token, or…",193,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",194,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",194,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",194,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",195,null],[13,"End","","",195,null],[11,"new","","Creates an empty punctuated sequence.",196,[[],["punctuated",3]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",196,[[]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",196,[[]]],[11,"first","","Borrows the first element in this sequence.",196,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",196,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",196,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",196,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",196,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",196,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",196,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",196,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",196,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",196,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",196,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",196,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",196,[[]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",196,[[]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",196,[[]]],[11,"insert","","Inserts an element at position `index`.",196,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",196,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",196,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",196,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",196,[[["parsestream",6]],["result",6]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",195,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",195,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",195,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",195,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",195,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",195,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",197,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",198,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",198,[[["anglebracketedgenericarguments",3]]]],[11,"visit_attr_style","","",198,[[["attrstyle",4]]]],[11,"visit_attribute","","",198,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",198,[[["barefnarg",3]]]],[11,"visit_bin_op","","",198,[[["binop",4]]]],[11,"visit_binding","","",198,[[["binding",3]]]],[11,"visit_bound_lifetimes","","",198,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",198,[[["constparam",3]]]],[11,"visit_constraint","","",198,[[["constraint",3]]]],[11,"visit_data","","",198,[[["data",4]]]],[11,"visit_data_enum","","",198,[[["dataenum",3]]]],[11,"visit_data_struct","","",198,[[["datastruct",3]]]],[11,"visit_data_union","","",198,[[["dataunion",3]]]],[11,"visit_derive_input","","",198,[[["deriveinput",3]]]],[11,"visit_expr","","",198,[[["expr",4]]]],[11,"visit_expr_binary","","",198,[[["exprbinary",3]]]],[11,"visit_expr_call","","",198,[[["exprcall",3]]]],[11,"visit_expr_cast","","",198,[[["exprcast",3]]]],[11,"visit_expr_field","","",198,[[["exprfield",3]]]],[11,"visit_expr_index","","",198,[[["exprindex",3]]]],[11,"visit_expr_lit","","",198,[[["exprlit",3]]]],[11,"visit_expr_paren","","",198,[[["exprparen",3]]]],[11,"visit_expr_path","","",198,[[["exprpath",3]]]],[11,"visit_expr_unary","","",198,[[["exprunary",3]]]],[11,"visit_field","","",198,[[["field",3]]]],[11,"visit_fields","","",198,[[["fields",4]]]],[11,"visit_fields_named","","",198,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",198,[[["fieldsunnamed",3]]]],[11,"visit_generic_argument","","",198,[[["genericargument",4]]]],[11,"visit_generic_param","","",198,[[["genericparam",4]]]],[11,"visit_generics","","",198,[[["generics",3]]]],[11,"visit_ident","","",198,[[["ident",3]]]],[11,"visit_index","","",198,[[["index",3]]]],[11,"visit_lifetime","","",198,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",198,[[["lifetimedef",3]]]],[11,"visit_lit","","",198,[[["lit",4]]]],[11,"visit_lit_bool","","",198,[[["litbool",3]]]],[11,"visit_lit_byte","","",198,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",198,[[["litbytestr",3]]]],[11,"visit_lit_char","","",198,[[["litchar",3]]]],[11,"visit_lit_float","","",198,[[["litfloat",3]]]],[11,"visit_lit_int","","",198,[[["litint",3]]]],[11,"visit_lit_str","","",198,[[["litstr",3]]]],[11,"visit_macro","","",198,[[["macro",3]]]],[11,"visit_macro_delimiter","","",198,[[["macrodelimiter",4]]]],[11,"visit_member","","",198,[[["member",4]]]],[11,"visit_meta","","",198,[[["meta",4]]]],[11,"visit_meta_list","","",198,[[["metalist",3]]]],[11,"visit_meta_name_value","","",198,[[["metanamevalue",3]]]],[11,"visit_nested_meta","","",198,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",198,[[["parenthesizedgenericarguments",3]]]],[11,"visit_path","","",198,[[["path",3]]]],[11,"visit_path_arguments","","",198,[[["patharguments",4]]]],[11,"visit_path_segment","","",198,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",198,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",198,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",198,[[["predicatetype",3]]]],[11,"visit_qself","","",198,[[["qself",3]]]],[11,"visit_return_type","","",198,[[["returntype",4]]]],[11,"visit_span","","",198,[[["span",3]]]],[11,"visit_trait_bound","","",198,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",198,[[["traitboundmodifier",4]]]],[11,"visit_type","","",198,[[["type",4]]]],[11,"visit_type_array","","",198,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",198,[[["typebarefn",3]]]],[11,"visit_type_group","","",198,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",198,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",198,[[["typeinfer",3]]]],[11,"visit_type_macro","","",198,[[["typemacro",3]]]],[11,"visit_type_never","","",198,[[["typenever",3]]]],[11,"visit_type_param","","",198,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",198,[[["typeparambound",4]]]],[11,"visit_type_paren","","",198,[[["typeparen",3]]]],[11,"visit_type_path","","",198,[[["typepath",3]]]],[11,"visit_type_ptr","","",198,[[["typeptr",3]]]],[11,"visit_type_reference","","",198,[[["typereference",3]]]],[11,"visit_type_slice","","",198,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",198,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",198,[[["typetuple",3]]]],[11,"visit_un_op","","",198,[[["unop",4]]]],[11,"visit_variadic","","",198,[[["variadic",3]]]],[11,"visit_variant","","",198,[[["variant",3]]]],[11,"visit_vis_crate","","",198,[[["viscrate",3]]]],[11,"visit_vis_public","","",198,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",198,[[["visrestricted",3]]]],[11,"visit_visibility","","",198,[[["visibility",4]]]],[11,"visit_where_clause","","",198,[[["whereclause",3]]]],[11,"visit_where_predicate","","",198,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",199,[[]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",200,[[["parsestream",6]],["result",6]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",201,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",201,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",201,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",201,[[],["result",6]]],[11,"error","","Triggers an error at the current position of the parse…",202,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",203,[[],[["parse",8],["result",6]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",203,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine…",203,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",203,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",203,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",203,[[],[["punctuated",3],["result",6]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",203,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",203,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",203,[[]]],[11,"error","","Triggers an error at the current position of the parse…",203,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream,…",203,[[],["result",6]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",203,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation…",203,[[],["cursor",3]]],[11,"new","syn","Usually the `ParseStream::error` method will be used…",204,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",204,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",204,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of `compile_error!`.",204,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when…",204,[[["error",3]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the `quote!`…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"to_string","","",205,[[],["string",3]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"peek","","",30,[[["cursor",3]]]],[11,"display","","",30,[[]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"peek","","",31,[[["cursor",3]]]],[11,"display","","",31,[[]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"to_string","","",191,[[],["string",3]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"to_string","","",190,[[],["string",3]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"into_iter","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"to_string","","",204,[[],["string",3]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"into_iter","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"peek","","",72,[[["cursor",3]]]],[11,"display","","",72,[[]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"peek","syn::token","",82,[[["cursor",3]]]],[11,"display","","",82,[[]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"peek","","",83,[[["cursor",3]]]],[11,"display","","",83,[[]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"peek","","",84,[[["cursor",3]]]],[11,"display","","",84,[[]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"peek","","",85,[[["cursor",3]]]],[11,"display","","",85,[[]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"peek","","",86,[[["cursor",3]]]],[11,"display","","",86,[[]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"peek","","",87,[[["cursor",3]]]],[11,"display","","",87,[[]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"peek","","",88,[[["cursor",3]]]],[11,"display","","",88,[[]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"peek","","",89,[[["cursor",3]]]],[11,"display","","",89,[[]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"peek","","",90,[[["cursor",3]]]],[11,"display","","",90,[[]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"peek","","",91,[[["cursor",3]]]],[11,"display","","",91,[[]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"peek","","",92,[[["cursor",3]]]],[11,"display","","",92,[[]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"peek","","",93,[[["cursor",3]]]],[11,"display","","",93,[[]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"peek","","",94,[[["cursor",3]]]],[11,"display","","",94,[[]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"peek","","",95,[[["cursor",3]]]],[11,"display","","",95,[[]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"peek","","",96,[[["cursor",3]]]],[11,"display","","",96,[[]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"peek","","",97,[[["cursor",3]]]],[11,"display","","",97,[[]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"peek","","",98,[[["cursor",3]]]],[11,"display","","",98,[[]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"peek","","",99,[[["cursor",3]]]],[11,"display","","",99,[[]]],[11,"span","","",99,[[],["span",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"span","","",100,[[],["span",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"span","","",101,[[],["span",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"peek","","",102,[[["cursor",3]]]],[11,"display","","",102,[[]]],[11,"span","","",102,[[],["span",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"peek","","",103,[[["cursor",3]]]],[11,"display","","",103,[[]]],[11,"span","","",103,[[],["span",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"peek","","",104,[[["cursor",3]]]],[11,"display","","",104,[[]]],[11,"span","","",104,[[],["span",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"peek","","",105,[[["cursor",3]]]],[11,"display","","",105,[[]]],[11,"span","","",105,[[],["span",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"peek","","",106,[[["cursor",3]]]],[11,"display","","",106,[[]]],[11,"span","","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"peek","","",107,[[["cursor",3]]]],[11,"display","","",107,[[]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"peek","","",108,[[["cursor",3]]]],[11,"display","","",108,[[]]],[11,"span","","",108,[[],["span",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"peek","","",109,[[["cursor",3]]]],[11,"display","","",109,[[]]],[11,"span","","",109,[[],["span",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"peek","","",110,[[["cursor",3]]]],[11,"display","","",110,[[]]],[11,"span","","",110,[[],["span",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"peek","","",111,[[["cursor",3]]]],[11,"display","","",111,[[]]],[11,"span","","",111,[[],["span",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"peek","","",112,[[["cursor",3]]]],[11,"display","","",112,[[]]],[11,"span","","",112,[[],["span",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"peek","","",113,[[["cursor",3]]]],[11,"display","","",113,[[]]],[11,"span","","",113,[[],["span",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"peek","","",114,[[["cursor",3]]]],[11,"display","","",114,[[]]],[11,"span","","",114,[[],["span",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"peek","","",115,[[["cursor",3]]]],[11,"display","","",115,[[]]],[11,"span","","",115,[[],["span",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"peek","","",116,[[["cursor",3]]]],[11,"display","","",116,[[]]],[11,"span","","",116,[[],["span",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"peek","","",117,[[["cursor",3]]]],[11,"display","","",117,[[]]],[11,"span","","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"peek","","",118,[[["cursor",3]]]],[11,"display","","",118,[[]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"peek","","",119,[[["cursor",3]]]],[11,"display","","",119,[[]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"peek","","",120,[[["cursor",3]]]],[11,"display","","",120,[[]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"peek","","",121,[[["cursor",3]]]],[11,"display","","",121,[[]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"peek","","",122,[[["cursor",3]]]],[11,"display","","",122,[[]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"peek","","",123,[[["cursor",3]]]],[11,"display","","",123,[[]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"peek","","",124,[[["cursor",3]]]],[11,"display","","",124,[[]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"peek","","",125,[[["cursor",3]]]],[11,"display","","",125,[[]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"peek","","",126,[[["cursor",3]]]],[11,"display","","",126,[[]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"peek","","",127,[[["cursor",3]]]],[11,"display","","",127,[[]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"peek","","",128,[[["cursor",3]]]],[11,"display","","",128,[[]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"peek","","",129,[[["cursor",3]]]],[11,"display","","",129,[[]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"peek","","",130,[[["cursor",3]]]],[11,"display","","",130,[[]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"peek","","",131,[[["cursor",3]]]],[11,"display","","",131,[[]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"peek","","",132,[[["cursor",3]]]],[11,"display","","",132,[[]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"peek","","",133,[[["cursor",3]]]],[11,"display","","",133,[[]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"peek","","",134,[[["cursor",3]]]],[11,"display","","",134,[[]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"peek","","",135,[[["cursor",3]]]],[11,"display","","",135,[[]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"peek","","",136,[[["cursor",3]]]],[11,"display","","",136,[[]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"peek","","",137,[[["cursor",3]]]],[11,"display","","",137,[[]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"peek","","",138,[[["cursor",3]]]],[11,"display","","",138,[[]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"peek","","",139,[[["cursor",3]]]],[11,"display","","",139,[[]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"peek","","",140,[[["cursor",3]]]],[11,"display","","",140,[[]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"peek","","",141,[[["cursor",3]]]],[11,"display","","",141,[[]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"peek","","",142,[[["cursor",3]]]],[11,"display","","",142,[[]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"peek","","",143,[[["cursor",3]]]],[11,"display","","",143,[[]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"peek","","",144,[[["cursor",3]]]],[11,"display","","",144,[[]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"peek","","",145,[[["cursor",3]]]],[11,"display","","",145,[[]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"peek","","",146,[[["cursor",3]]]],[11,"display","","",146,[[]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"peek","","",147,[[["cursor",3]]]],[11,"display","","",147,[[]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"peek","","",148,[[["cursor",3]]]],[11,"display","","",148,[[]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"peek","","",149,[[["cursor",3]]]],[11,"display","","",149,[[]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"peek","","",150,[[["cursor",3]]]],[11,"display","","",150,[[]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"peek","","",151,[[["cursor",3]]]],[11,"display","","",151,[[]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"peek","","",152,[[["cursor",3]]]],[11,"display","","",152,[[]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"peek","","",153,[[["cursor",3]]]],[11,"display","","",153,[[]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"peek","","",154,[[["cursor",3]]]],[11,"display","","",154,[[]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"peek","","",155,[[["cursor",3]]]],[11,"display","","",155,[[]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"peek","","",156,[[["cursor",3]]]],[11,"display","","",156,[[]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"peek","","",157,[[["cursor",3]]]],[11,"display","","",157,[[]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"peek","","",158,[[["cursor",3]]]],[11,"display","","",158,[[]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"peek","","",159,[[["cursor",3]]]],[11,"display","","",159,[[]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"peek","","",160,[[["cursor",3]]]],[11,"display","","",160,[[]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"peek","","",161,[[["cursor",3]]]],[11,"display","","",161,[[]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"peek","","",162,[[["cursor",3]]]],[11,"display","","",162,[[]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"peek","","",163,[[["cursor",3]]]],[11,"display","","",163,[[]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"peek","","",164,[[["cursor",3]]]],[11,"display","","",164,[[]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"peek","","",165,[[["cursor",3]]]],[11,"display","","",165,[[]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"peek","","",166,[[["cursor",3]]]],[11,"display","","",166,[[]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"peek","","",167,[[["cursor",3]]]],[11,"display","","",167,[[]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"peek","","",169,[[["cursor",3]]]],[11,"display","","",169,[[]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"peek","","",170,[[["cursor",3]]]],[11,"display","","",170,[[]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"peek","","",171,[[["cursor",3]]]],[11,"display","","",171,[[]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"peek","","",172,[[["cursor",3]]]],[11,"display","","",172,[[]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"peek","","",173,[[["cursor",3]]]],[11,"display","","",173,[[]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"peek","","",174,[[["cursor",3]]]],[11,"display","","",174,[[]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"peek","","",175,[[["cursor",3]]]],[11,"display","","",175,[[]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"peek","","",176,[[["cursor",3]]]],[11,"display","","",176,[[]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"peek","","",177,[[["cursor",3]]]],[11,"display","","",177,[[]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"peek","","",178,[[["cursor",3]]]],[11,"display","","",178,[[]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"peek","","",179,[[["cursor",3]]]],[11,"display","","",179,[[]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"peek","","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","syn::buffer","",192,[[]]],[11,"into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","syn::punctuated","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"into_iter","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"into_iter","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"into_iter","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"into_iter","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"into_iter","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"into_iter","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"into_iter","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","syn::parse","",244,[[]]],[11,"into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_string","","",203,[[],["string",3]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"eq","syn","",205,[[["ident",3]]]],[11,"eq","","",205,[[]]],[11,"fmt","","",205,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",205,[[["ident",3]],["ordering",4]]],[11,"hash","","",205,[[]]],[11,"partial_cmp","","",205,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"clone","","",205,[[],["ident",3]]],[11,"fmt","","",205,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"span","","",205,[[],[["option",4],["span",3]]]],[11,"fmt","","",205,[[["formatter",3]],[["result",4],["error",3]]]],[11,"peek","","",30,[[["cursor",3]]]],[11,"display","","",30,[[]]],[11,"peek","","",72,[[["cursor",3]]]],[11,"display","","",72,[[]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"peek","","",31,[[["cursor",3]]]],[11,"display","","",31,[[]]],[11,"peek","syn::token","",82,[[["cursor",3]]]],[11,"display","","",82,[[]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"peek","","",83,[[["cursor",3]]]],[11,"display","","",83,[[]]],[11,"peek","","",84,[[["cursor",3]]]],[11,"display","","",84,[[]]],[11,"peek","","",85,[[["cursor",3]]]],[11,"display","","",85,[[]]],[11,"peek","","",86,[[["cursor",3]]]],[11,"display","","",86,[[]]],[11,"peek","","",87,[[["cursor",3]]]],[11,"display","","",87,[[]]],[11,"peek","","",88,[[["cursor",3]]]],[11,"display","","",88,[[]]],[11,"peek","","",89,[[["cursor",3]]]],[11,"display","","",89,[[]]],[11,"peek","","",90,[[["cursor",3]]]],[11,"display","","",90,[[]]],[11,"peek","","",91,[[["cursor",3]]]],[11,"display","","",91,[[]]],[11,"peek","","",92,[[["cursor",3]]]],[11,"display","","",92,[[]]],[11,"peek","","",93,[[["cursor",3]]]],[11,"display","","",93,[[]]],[11,"peek","","",94,[[["cursor",3]]]],[11,"display","","",94,[[]]],[11,"peek","","",95,[[["cursor",3]]]],[11,"display","","",95,[[]]],[11,"peek","","",96,[[["cursor",3]]]],[11,"display","","",96,[[]]],[11,"peek","","",97,[[["cursor",3]]]],[11,"display","","",97,[[]]],[11,"peek","","",98,[[["cursor",3]]]],[11,"display","","",98,[[]]],[11,"peek","","",99,[[["cursor",3]]]],[11,"display","","",99,[[]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","","",102,[[["cursor",3]]]],[11,"display","","",102,[[]]],[11,"peek","","",103,[[["cursor",3]]]],[11,"display","","",103,[[]]],[11,"peek","","",104,[[["cursor",3]]]],[11,"display","","",104,[[]]],[11,"peek","","",105,[[["cursor",3]]]],[11,"display","","",105,[[]]],[11,"peek","","",106,[[["cursor",3]]]],[11,"display","","",106,[[]]],[11,"peek","","",107,[[["cursor",3]]]],[11,"display","","",107,[[]]],[11,"peek","","",108,[[["cursor",3]]]],[11,"display","","",108,[[]]],[11,"peek","","",109,[[["cursor",3]]]],[11,"display","","",109,[[]]],[11,"peek","","",110,[[["cursor",3]]]],[11,"display","","",110,[[]]],[11,"peek","","",111,[[["cursor",3]]]],[11,"display","","",111,[[]]],[11,"peek","","",112,[[["cursor",3]]]],[11,"display","","",112,[[]]],[11,"peek","","",113,[[["cursor",3]]]],[11,"display","","",113,[[]]],[11,"peek","","",114,[[["cursor",3]]]],[11,"display","","",114,[[]]],[11,"peek","","",115,[[["cursor",3]]]],[11,"display","","",115,[[]]],[11,"peek","","",116,[[["cursor",3]]]],[11,"display","","",116,[[]]],[11,"peek","","",117,[[["cursor",3]]]],[11,"display","","",117,[[]]],[11,"peek","","",118,[[["cursor",3]]]],[11,"display","","",118,[[]]],[11,"peek","","",119,[[["cursor",3]]]],[11,"display","","",119,[[]]],[11,"peek","","",120,[[["cursor",3]]]],[11,"display","","",120,[[]]],[11,"peek","","",121,[[["cursor",3]]]],[11,"display","","",121,[[]]],[11,"peek","","",122,[[["cursor",3]]]],[11,"display","","",122,[[]]],[11,"peek","","",123,[[["cursor",3]]]],[11,"display","","",123,[[]]],[11,"peek","","",124,[[["cursor",3]]]],[11,"display","","",124,[[]]],[11,"peek","","",125,[[["cursor",3]]]],[11,"display","","",125,[[]]],[11,"peek","","",126,[[["cursor",3]]]],[11,"display","","",126,[[]]],[11,"peek","","",127,[[["cursor",3]]]],[11,"display","","",127,[[]]],[11,"peek","","",128,[[["cursor",3]]]],[11,"display","","",128,[[]]],[11,"peek","","",129,[[["cursor",3]]]],[11,"display","","",129,[[]]],[11,"peek","","",130,[[["cursor",3]]]],[11,"display","","",130,[[]]],[11,"peek","","",131,[[["cursor",3]]]],[11,"display","","",131,[[]]],[11,"peek","","",132,[[["cursor",3]]]],[11,"display","","",132,[[]]],[11,"peek","","",133,[[["cursor",3]]]],[11,"display","","",133,[[]]],[11,"peek","","",134,[[["cursor",3]]]],[11,"display","","",134,[[]]],[11,"peek","","",135,[[["cursor",3]]]],[11,"display","","",135,[[]]],[11,"peek","","",136,[[["cursor",3]]]],[11,"display","","",136,[[]]],[11,"peek","","",137,[[["cursor",3]]]],[11,"display","","",137,[[]]],[11,"peek","","",138,[[["cursor",3]]]],[11,"display","","",138,[[]]],[11,"peek","","",139,[[["cursor",3]]]],[11,"display","","",139,[[]]],[11,"peek","","",140,[[["cursor",3]]]],[11,"display","","",140,[[]]],[11,"peek","","",141,[[["cursor",3]]]],[11,"display","","",141,[[]]],[11,"peek","","",142,[[["cursor",3]]]],[11,"display","","",142,[[]]],[11,"peek","","",143,[[["cursor",3]]]],[11,"display","","",143,[[]]],[11,"peek","","",144,[[["cursor",3]]]],[11,"display","","",144,[[]]],[11,"peek","","",145,[[["cursor",3]]]],[11,"display","","",145,[[]]],[11,"peek","","",146,[[["cursor",3]]]],[11,"display","","",146,[[]]],[11,"peek","","",147,[[["cursor",3]]]],[11,"display","","",147,[[]]],[11,"peek","","",148,[[["cursor",3]]]],[11,"display","","",148,[[]]],[11,"peek","","",149,[[["cursor",3]]]],[11,"display","","",149,[[]]],[11,"peek","","",150,[[["cursor",3]]]],[11,"display","","",150,[[]]],[11,"peek","","",151,[[["cursor",3]]]],[11,"display","","",151,[[]]],[11,"peek","","",152,[[["cursor",3]]]],[11,"display","","",152,[[]]],[11,"peek","","",153,[[["cursor",3]]]],[11,"display","","",153,[[]]],[11,"peek","","",154,[[["cursor",3]]]],[11,"display","","",154,[[]]],[11,"peek","","",155,[[["cursor",3]]]],[11,"display","","",155,[[]]],[11,"peek","","",156,[[["cursor",3]]]],[11,"display","","",156,[[]]],[11,"peek","","",157,[[["cursor",3]]]],[11,"display","","",157,[[]]],[11,"peek","","",158,[[["cursor",3]]]],[11,"display","","",158,[[]]],[11,"peek","","",159,[[["cursor",3]]]],[11,"display","","",159,[[]]],[11,"peek","","",160,[[["cursor",3]]]],[11,"display","","",160,[[]]],[11,"peek","","",161,[[["cursor",3]]]],[11,"display","","",161,[[]]],[11,"peek","","",162,[[["cursor",3]]]],[11,"display","","",162,[[]]],[11,"peek","","",163,[[["cursor",3]]]],[11,"display","","",163,[[]]],[11,"peek","","",164,[[["cursor",3]]]],[11,"display","","",164,[[]]],[11,"peek","","",165,[[["cursor",3]]]],[11,"display","","",165,[[]]],[11,"peek","","",166,[[["cursor",3]]]],[11,"display","","",166,[[]]],[11,"peek","","",167,[[["cursor",3]]]],[11,"display","","",167,[[]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"peek","","",169,[[["cursor",3]]]],[11,"display","","",169,[[]]],[11,"peek","","",170,[[["cursor",3]]]],[11,"display","","",170,[[]]],[11,"peek","","",171,[[["cursor",3]]]],[11,"display","","",171,[[]]],[11,"peek","","",172,[[["cursor",3]]]],[11,"display","","",172,[[]]],[11,"peek","","",173,[[["cursor",3]]]],[11,"display","","",173,[[]]],[11,"peek","","",174,[[["cursor",3]]]],[11,"display","","",174,[[]]],[11,"peek","","",175,[[["cursor",3]]]],[11,"display","","",175,[[]]],[11,"peek","","",176,[[["cursor",3]]]],[11,"display","","",176,[[]]],[11,"peek","","",177,[[["cursor",3]]]],[11,"display","","",177,[[]]],[11,"peek","","",178,[[["cursor",3]]]],[11,"display","","",178,[[]]],[11,"peek","","",179,[[["cursor",3]]]],[11,"display","","",179,[[]]],[11,"peek","","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"peek","syn","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"parse_any","","",205,[[["parsestream",6]],["result",6]]],[11,"unraw","","",205,[[],["ident",3]]],[11,"advance_to","syn::parse","",203,[[]]],[11,"parse","syn::token","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","","",99,[[["parsestream",6]],["result",6]]],[11,"parse","","",100,[[["parsestream",6]],["result",6]]],[11,"parse","","",101,[[["parsestream",6]],["result",6]]],[11,"parse","","",102,[[["parsestream",6]],["result",6]]],[11,"parse","","",103,[[["parsestream",6]],["result",6]]],[11,"parse","","",104,[[["parsestream",6]],["result",6]]],[11,"parse","","",105,[[["parsestream",6]],["result",6]]],[11,"parse","","",106,[[["parsestream",6]],["result",6]]],[11,"parse","","",107,[[["parsestream",6]],["result",6]]],[11,"parse","","",108,[[["parsestream",6]],["result",6]]],[11,"parse","","",109,[[["parsestream",6]],["result",6]]],[11,"parse","","",110,[[["parsestream",6]],["result",6]]],[11,"parse","","",111,[[["parsestream",6]],["result",6]]],[11,"parse","","",112,[[["parsestream",6]],["result",6]]],[11,"parse","","",113,[[["parsestream",6]],["result",6]]],[11,"parse","","",114,[[["parsestream",6]],["result",6]]],[11,"parse","","",115,[[["parsestream",6]],["result",6]]],[11,"parse","","",116,[[["parsestream",6]],["result",6]]],[11,"parse","","",117,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",122,[[["parsestream",6]],["result",6]]],[11,"parse","","",123,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",127,[[["parsestream",6]],["result",6]]],[11,"parse","","",128,[[["parsestream",6]],["result",6]]],[11,"parse","","",129,[[["parsestream",6]],["result",6]]],[11,"parse","","",130,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],["result",6]]],[11,"parse","","",132,[[["parsestream",6]],["result",6]]],[11,"parse","","",133,[[["parsestream",6]],["result",6]]],[11,"parse","","",134,[[["parsestream",6]],["result",6]]],[11,"parse","","",135,[[["parsestream",6]],["result",6]]],[11,"parse","","",136,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",154,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",186,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",245,[[["parsestream",6]],["result",6]]],[11,"drop","","",203,[[]]],[11,"from","syn","",205,[[["selfvalue",3]],["ident",3]]],[11,"from","","",205,[[["selftype",3]],["ident",3]]],[11,"from","","",205,[[["super",3]],["ident",3]]],[11,"from","","",205,[[["crate",3]],["ident",3]]],[11,"from","","",205,[[["extern",3]],["ident",3]]],[11,"from","","",205,[[["underscore",3]],["ident",3]]],[11,"from","","",62,[[["path",3]],["meta",4]]],[11,"from","","",62,[[["metalist",3]],["meta",4]]],[11,"from","","",62,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",63,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",63,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",64,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",64,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",65,[[["vispublic",3]],["visibility",4]]],[11,"from","","",65,[[["viscrate",3]],["visibility",4]]],[11,"from","","",65,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",66,[[["exprarray",3]],["expr",4]]],[11,"from","","",66,[[["exprassign",3]],["expr",4]]],[11,"from","","",66,[[["exprassignop",3]],["expr",4]]],[11,"from","","",66,[[["exprasync",3]],["expr",4]]],[11,"from","","",66,[[["exprawait",3]],["expr",4]]],[11,"from","","",66,[[["exprbinary",3]],["expr",4]]],[11,"from","","",66,[[["exprblock",3]],["expr",4]]],[11,"from","","",66,[[["exprbox",3]],["expr",4]]],[11,"from","","",66,[[["exprbreak",3]],["expr",4]]],[11,"from","","",66,[[["exprcall",3]],["expr",4]]],[11,"from","","",66,[[["exprcast",3]],["expr",4]]],[11,"from","","",66,[[["exprclosure",3]],["expr",4]]],[11,"from","","",66,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",66,[[["exprfield",3]],["expr",4]]],[11,"from","","",66,[[["exprforloop",3]],["expr",4]]],[11,"from","","",66,[[["exprgroup",3]],["expr",4]]],[11,"from","","",66,[[["exprif",3]],["expr",4]]],[11,"from","","",66,[[["exprindex",3]],["expr",4]]],[11,"from","","",66,[[["exprlet",3]],["expr",4]]],[11,"from","","",66,[[["exprlit",3]],["expr",4]]],[11,"from","","",66,[[["exprloop",3]],["expr",4]]],[11,"from","","",66,[[["exprmacro",3]],["expr",4]]],[11,"from","","",66,[[["exprmatch",3]],["expr",4]]],[11,"from","","",66,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",66,[[["exprparen",3]],["expr",4]]],[11,"from","","",66,[[["exprpath",3]],["expr",4]]],[11,"from","","",66,[[["exprrange",3]],["expr",4]]],[11,"from","","",66,[[["exprreference",3]],["expr",4]]],[11,"from","","",66,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",66,[[["exprreturn",3]],["expr",4]]],[11,"from","","",66,[[["exprstruct",3]],["expr",4]]],[11,"from","","",66,[[["exprtry",3]],["expr",4]]],[11,"from","","",66,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",66,[[["exprtuple",3]],["expr",4]]],[11,"from","","",66,[[["exprtype",3]],["expr",4]]],[11,"from","","",66,[[["exprunary",3]],["expr",4]]],[11,"from","","",66,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",66,[[["exprwhile",3]],["expr",4]]],[11,"from","","",66,[[["expryield",3]],["expr",4]]],[11,"from","","",19,[[],["index",3]]],[11,"from","","",68,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",68,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",68,[[["constparam",3]],["genericparam",4]]],[11,"from","","",28,[[["ident",3]]]],[11,"from","","",70,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",70,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",71,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",71,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",71,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",72,[[["litstr",3]],["lit",4]]],[11,"from","","",72,[[["litbytestr",3]],["lit",4]]],[11,"from","","",72,[[["litbyte",3]],["lit",4]]],[11,"from","","",72,[[["litchar",3]],["lit",4]]],[11,"from","","",72,[[["litint",3]],["lit",4]]],[11,"from","","",72,[[["litfloat",3]],["lit",4]]],[11,"from","","",72,[[["litbool",3]],["lit",4]]],[11,"from","","",190,[[["literal",3]]]],[11,"from","","",191,[[["literal",3]]]],[11,"from","","",75,[[["datastruct",3]],["data",4]]],[11,"from","","",75,[[["dataenum",3]],["data",4]]],[11,"from","","",75,[[["dataunion",3]],["data",4]]],[11,"from","","",79,[[["typearray",3]],["type",4]]],[11,"from","","",79,[[["typebarefn",3]],["type",4]]],[11,"from","","",79,[[["typegroup",3]],["type",4]]],[11,"from","","",79,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",79,[[["typeinfer",3]],["type",4]]],[11,"from","","",79,[[["typemacro",3]],["type",4]]],[11,"from","","",79,[[["typenever",3]],["type",4]]],[11,"from","","",79,[[["typeparen",3]],["type",4]]],[11,"from","","",79,[[["typepath",3]],["type",4]]],[11,"from","","",79,[[["typeptr",3]],["type",4]]],[11,"from","","",79,[[["typereference",3]],["type",4]]],[11,"from","","",79,[[["typeslice",3]],["type",4]]],[11,"from","","",79,[[["typetraitobject",3]],["type",4]]],[11,"from","","",79,[[["typetuple",3]],["type",4]]],[11,"from","","",58,[[]]],[11,"from","","",59,[[]]],[11,"from","","",204,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",238,[[],["option",4]]],[11,"next_back","","",239,[[],["option",4]]],[11,"next_back","","",240,[[],["option",4]]],[11,"next_back","","",241,[[],["option",4]]],[11,"next_back","","",242,[[],["option",4]]],[11,"next_back","","",243,[[],["option",4]]],[11,"len","","",238,[[]]],[11,"len","","",239,[[]]],[11,"len","","",240,[[]]],[11,"len","","",241,[[]]],[11,"len","","",242,[[]]],[11,"len","","",243,[[]]],[11,"extend","","",196,[[["intoiterator",8]]]],[11,"extend","","",196,[[["intoiterator",8]]]],[11,"into_iter","syn","",64,[[]]],[11,"into_iter","syn::punctuated","",196,[[]]],[11,"into_iter","syn","",204,[[]]],[11,"next","syn::punctuated","",238,[[],["option",4]]],[11,"size_hint","","",238,[[]]],[11,"next","","",239,[[],["option",4]]],[11,"size_hint","","",239,[[]]],[11,"next","","",240,[[],["option",4]]],[11,"size_hint","","",240,[[]]],[11,"next","","",241,[[],["option",4]]],[11,"size_hint","","",241,[[]]],[11,"next","","",242,[[],["option",4]]],[11,"size_hint","","",242,[[]]],[11,"next","","",243,[[],["option",4]]],[11,"size_hint","","",243,[[]]],[11,"clone","syn::token","",82,[[],["underscore",3]]],[11,"clone","","",83,[[],["abstract",3]]],[11,"clone","","",84,[[],["as",3]]],[11,"clone","","",85,[[],["async",3]]],[11,"clone","","",86,[[],["auto",3]]],[11,"clone","","",87,[[],["await",3]]],[11,"clone","","",88,[[],["become",3]]],[11,"clone","","",89,[[],["box",3]]],[11,"clone","","",90,[[],["break",3]]],[11,"clone","","",91,[[],["const",3]]],[11,"clone","","",92,[[],["continue",3]]],[11,"clone","","",93,[[],["crate",3]]],[11,"clone","","",94,[[],["default",3]]],[11,"clone","","",95,[[],["do",3]]],[11,"clone","","",96,[[],["dyn",3]]],[11,"clone","","",97,[[],["else",3]]],[11,"clone","","",98,[[],["enum",3]]],[11,"clone","","",99,[[],["extern",3]]],[11,"clone","","",100,[[],["final",3]]],[11,"clone","","",101,[[],["fn",3]]],[11,"clone","","",102,[[],["for",3]]],[11,"clone","","",103,[[],["if",3]]],[11,"clone","","",104,[[],["impl",3]]],[11,"clone","","",105,[[],["in",3]]],[11,"clone","","",106,[[],["let",3]]],[11,"clone","","",107,[[],["loop",3]]],[11,"clone","","",108,[[],["macro",3]]],[11,"clone","","",109,[[],["match",3]]],[11,"clone","","",110,[[],["mod",3]]],[11,"clone","","",111,[[],["move",3]]],[11,"clone","","",112,[[],["mut",3]]],[11,"clone","","",113,[[],["override",3]]],[11,"clone","","",114,[[],["priv",3]]],[11,"clone","","",115,[[],["pub",3]]],[11,"clone","","",116,[[],["ref",3]]],[11,"clone","","",117,[[],["return",3]]],[11,"clone","","",118,[[],["selftype",3]]],[11,"clone","","",119,[[],["selfvalue",3]]],[11,"clone","","",120,[[],["static",3]]],[11,"clone","","",121,[[],["struct",3]]],[11,"clone","","",122,[[],["super",3]]],[11,"clone","","",123,[[],["trait",3]]],[11,"clone","","",124,[[],["try",3]]],[11,"clone","","",125,[[],["type",3]]],[11,"clone","","",126,[[],["typeof",3]]],[11,"clone","","",127,[[],["union",3]]],[11,"clone","","",128,[[],["unsafe",3]]],[11,"clone","","",129,[[],["unsized",3]]],[11,"clone","","",130,[[],["use",3]]],[11,"clone","","",131,[[],["virtual",3]]],[11,"clone","","",132,[[],["where",3]]],[11,"clone","","",133,[[],["while",3]]],[11,"clone","","",134,[[],["yield",3]]],[11,"clone","","",135,[[],["add",3]]],[11,"clone","","",136,[[],["addeq",3]]],[11,"clone","","",137,[[],["and",3]]],[11,"clone","","",138,[[],["andand",3]]],[11,"clone","","",139,[[],["andeq",3]]],[11,"clone","","",140,[[],["at",3]]],[11,"clone","","",141,[[],["bang",3]]],[11,"clone","","",142,[[],["caret",3]]],[11,"clone","","",143,[[],["careteq",3]]],[11,"clone","","",144,[[],["colon",3]]],[11,"clone","","",145,[[],["colon2",3]]],[11,"clone","","",146,[[],["comma",3]]],[11,"clone","","",147,[[],["div",3]]],[11,"clone","","",148,[[],["diveq",3]]],[11,"clone","","",149,[[],["dollar",3]]],[11,"clone","","",150,[[],["dot",3]]],[11,"clone","","",151,[[],["dot2",3]]],[11,"clone","","",152,[[],["dot3",3]]],[11,"clone","","",153,[[],["dotdoteq",3]]],[11,"clone","","",154,[[],["eq",3]]],[11,"clone","","",155,[[],["eqeq",3]]],[11,"clone","","",156,[[],["ge",3]]],[11,"clone","","",157,[[],["gt",3]]],[11,"clone","","",158,[[],["le",3]]],[11,"clone","","",159,[[],["lt",3]]],[11,"clone","","",160,[[],["muleq",3]]],[11,"clone","","",161,[[],["ne",3]]],[11,"clone","","",162,[[],["or",3]]],[11,"clone","","",163,[[],["oreq",3]]],[11,"clone","","",164,[[],["oror",3]]],[11,"clone","","",165,[[],["pound",3]]],[11,"clone","","",166,[[],["question",3]]],[11,"clone","","",167,[[],["rarrow",3]]],[11,"clone","","",168,[[],["larrow",3]]],[11,"clone","","",169,[[],["rem",3]]],[11,"clone","","",170,[[],["remeq",3]]],[11,"clone","","",171,[[],["fatarrow",3]]],[11,"clone","","",172,[[],["semi",3]]],[11,"clone","","",173,[[],["shl",3]]],[11,"clone","","",174,[[],["shleq",3]]],[11,"clone","","",175,[[],["shr",3]]],[11,"clone","","",176,[[],["shreq",3]]],[11,"clone","","",177,[[],["star",3]]],[11,"clone","","",178,[[],["sub",3]]],[11,"clone","","",179,[[],["subeq",3]]],[11,"clone","","",180,[[],["tilde",3]]],[11,"clone","","",181,[[],["brace",3]]],[11,"clone","","",182,[[],["bracket",3]]],[11,"clone","","",183,[[],["paren",3]]],[11,"clone","","",184,[[],["group",3]]],[11,"clone","syn","",0,[[],["attribute",3]]],[11,"clone","","",61,[[],["attrstyle",4]]],[11,"clone","","",62,[[],["meta",4]]],[11,"clone","","",1,[[],["metalist",3]]],[11,"clone","","",2,[[],["metanamevalue",3]]],[11,"clone","","",63,[[],["nestedmeta",4]]],[11,"clone","","",6,[[],["variant",3]]],[11,"clone","","",64,[[],["fields",4]]],[11,"clone","","",4,[[],["fieldsnamed",3]]],[11,"clone","","",5,[[],["fieldsunnamed",3]]],[11,"clone","","",3,[[],["field",3]]],[11,"clone","","",65,[[],["visibility",4]]],[11,"clone","","",8,[[],["vispublic",3]]],[11,"clone","","",7,[[],["viscrate",3]]],[11,"clone","","",9,[[],["visrestricted",3]]],[11,"clone","","",66,[[],["expr",4]]],[11,"clone","","",206,[[],["exprarray",3]]],[11,"clone","","",207,[[],["exprassign",3]]],[11,"clone","","",208,[[],["exprassignop",3]]],[11,"clone","","",209,[[],["exprasync",3]]],[11,"clone","","",210,[[],["exprawait",3]]],[11,"clone","","",10,[[],["exprbinary",3]]],[11,"clone","","",211,[[],["exprblock",3]]],[11,"clone","","",212,[[],["exprbox",3]]],[11,"clone","","",213,[[],["exprbreak",3]]],[11,"clone","","",11,[[],["exprcall",3]]],[11,"clone","","",12,[[],["exprcast",3]]],[11,"clone","","",214,[[],["exprclosure",3]]],[11,"clone","","",215,[[],["exprcontinue",3]]],[11,"clone","","",13,[[],["exprfield",3]]],[11,"clone","","",216,[[],["exprforloop",3]]],[11,"clone","","",217,[[],["exprgroup",3]]],[11,"clone","","",218,[[],["exprif",3]]],[11,"clone","","",14,[[],["exprindex",3]]],[11,"clone","","",219,[[],["exprlet",3]]],[11,"clone","","",15,[[],["exprlit",3]]],[11,"clone","","",220,[[],["exprloop",3]]],[11,"clone","","",221,[[],["exprmacro",3]]],[11,"clone","","",222,[[],["exprmatch",3]]],[11,"clone","","",223,[[],["exprmethodcall",3]]],[11,"clone","","",16,[[],["exprparen",3]]],[11,"clone","","",17,[[],["exprpath",3]]],[11,"clone","","",224,[[],["exprrange",3]]],[11,"clone","","",225,[[],["exprreference",3]]],[11,"clone","","",226,[[],["exprrepeat",3]]],[11,"clone","","",227,[[],["exprreturn",3]]],[11,"clone","","",228,[[],["exprstruct",3]]],[11,"clone","","",229,[[],["exprtry",3]]],[11,"clone","","",230,[[],["exprtryblock",3]]],[11,"clone","","",231,[[],["exprtuple",3]]],[11,"clone","","",232,[[],["exprtype",3]]],[11,"clone","","",18,[[],["exprunary",3]]],[11,"clone","","",233,[[],["exprunsafe",3]]],[11,"clone","","",234,[[],["exprwhile",3]]],[11,"clone","","",235,[[],["expryield",3]]],[11,"clone","","",67,[[],["member",4]]],[11,"clone","","",19,[[],["index",3]]],[11,"clone","","",22,[[],["generics",3]]],[11,"clone","","",68,[[],["genericparam",4]]],[11,"clone","","",28,[[],["typeparam",3]]],[11,"clone","","",23,[[],["lifetimedef",3]]],[11,"clone","","",21,[[],["constparam",3]]],[11,"clone","","",236,[[],["implgenerics",3]]],[11,"clone","","",185,[[],["typegenerics",3]]],[11,"clone","","",237,[[],["turbofish",3]]],[11,"clone","","",20,[[],["boundlifetimes",3]]],[11,"clone","","",70,[[],["typeparambound",4]]],[11,"clone","","",27,[[],["traitbound",3]]],[11,"clone","","",69,[[],["traitboundmodifier",4]]],[11,"clone","","",29,[[],["whereclause",3]]],[11,"clone","","",71,[[],["wherepredicate",4]]],[11,"clone","","",26,[[],["predicatetype",3]]],[11,"clone","","",25,[[],["predicatelifetime",3]]],[11,"clone","","",24,[[],["predicateeq",3]]],[11,"clone","","",30,[[],["lifetime",3]]],[11,"clone","","",72,[[],["lit",4]]],[11,"clone","","",186,[[],["litstr",3]]],[11,"clone","","",187,[[],["litbytestr",3]]],[11,"clone","","",188,[[],["litbyte",3]]],[11,"clone","","",189,[[],["litchar",3]]],[11,"clone","","",190,[[],["litint",3]]],[11,"clone","","",191,[[],["litfloat",3]]],[11,"clone","","",31,[[],["litbool",3]]],[11,"clone","","",73,[[],["strstyle",4]]],[11,"clone","","",32,[[],["macro",3]]],[11,"clone","","",74,[[],["macrodelimiter",4]]],[11,"clone","","",36,[[],["deriveinput",3]]],[11,"clone","","",75,[[],["data",4]]],[11,"clone","","",34,[[],["datastruct",3]]],[11,"clone","","",33,[[],["dataenum",3]]],[11,"clone","","",35,[[],["dataunion",3]]],[11,"clone","","",76,[[],["binop",4]]],[11,"clone","","",77,[[],["unop",4]]],[11,"clone","","",79,[[],["type",4]]],[11,"clone","","",39,[[],["typearray",3]]],[11,"clone","","",40,[[],["typebarefn",3]]],[11,"clone","","",41,[[],["typegroup",3]]],[11,"clone","","",42,[[],["typeimpltrait",3]]],[11,"clone","","",43,[[],["typeinfer",3]]],[11,"clone","","",44,[[],["typemacro",3]]],[11,"clone","","",45,[[],["typenever",3]]],[11,"clone","","",46,[[],["typeparen",3]]],[11,"clone","","",47,[[],["typepath",3]]],[11,"clone","","",48,[[],["typeptr",3]]],[11,"clone","","",49,[[],["typereference",3]]],[11,"clone","","",50,[[],["typeslice",3]]],[11,"clone","","",51,[[],["typetraitobject",3]]],[11,"clone","","",52,[[],["typetuple",3]]],[11,"clone","","",37,[[],["abi",3]]],[11,"clone","","",38,[[],["barefnarg",3]]],[11,"clone","","",53,[[],["variadic",3]]],[11,"clone","","",78,[[],["returntype",4]]],[11,"clone","","",58,[[],["path",3]]],[11,"clone","","",59,[[],["pathsegment",3]]],[11,"clone","","",81,[[],["patharguments",4]]],[11,"clone","","",80,[[],["genericargument",4]]],[11,"clone","","",54,[[],["anglebracketedgenericarguments",3]]],[11,"clone","","",55,[[],["binding",3]]],[11,"clone","","",56,[[],["constraint",3]]],[11,"clone","","",57,[[],["parenthesizedgenericarguments",3]]],[11,"clone","","",60,[[],["qself",3]]],[11,"clone","syn::buffer","",193,[[],["cursor",3]]],[11,"clone","syn::punctuated","",196,[[],["punctuated",3]]],[11,"clone","","",238,[[]]],[11,"clone","","",240,[[],["intopairs",3]]],[11,"clone","","",241,[[],["intoiter",3]]],[11,"clone","","",242,[[]]],[11,"clone","","",195,[[],["pair",4]]],[11,"clone","syn::parse","",202,[[],["stepcursor",3]]],[11,"clone","syn","",204,[[],["error",3]]],[11,"default","syn::token","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","","",103,[[]]],[11,"default","","",104,[[]]],[11,"default","","",105,[[]]],[11,"default","","",106,[[]]],[11,"default","","",107,[[]]],[11,"default","","",108,[[]]],[11,"default","","",109,[[]]],[11,"default","","",110,[[]]],[11,"default","","",111,[[]]],[11,"default","","",112,[[]]],[11,"default","","",113,[[]]],[11,"default","","",114,[[]]],[11,"default","","",115,[[]]],[11,"default","","",116,[[]]],[11,"default","","",117,[[]]],[11,"default","","",118,[[]]],[11,"default","","",119,[[]]],[11,"default","","",120,[[]]],[11,"default","","",121,[[]]],[11,"default","","",122,[[]]],[11,"default","","",123,[[]]],[11,"default","","",124,[[]]],[11,"default","","",125,[[]]],[11,"default","","",126,[[]]],[11,"default","","",127,[[]]],[11,"default","","",128,[[]]],[11,"default","","",129,[[]]],[11,"default","","",130,[[]]],[11,"default","","",131,[[]]],[11,"default","","",132,[[]]],[11,"default","","",133,[[]]],[11,"default","","",134,[[]]],[11,"default","","",135,[[]]],[11,"default","","",136,[[]]],[11,"default","","",137,[[]]],[11,"default","","",138,[[]]],[11,"default","","",139,[[]]],[11,"default","","",140,[[]]],[11,"default","","",141,[[]]],[11,"default","","",142,[[]]],[11,"default","","",143,[[]]],[11,"default","","",144,[[]]],[11,"default","","",145,[[]]],[11,"default","","",146,[[]]],[11,"default","","",147,[[]]],[11,"default","","",148,[[]]],[11,"default","","",149,[[]]],[11,"default","","",150,[[]]],[11,"default","","",151,[[]]],[11,"default","","",152,[[]]],[11,"default","","",153,[[]]],[11,"default","","",154,[[]]],[11,"default","","",155,[[]]],[11,"default","","",156,[[]]],[11,"default","","",157,[[]]],[11,"default","","",158,[[]]],[11,"default","","",159,[[]]],[11,"default","","",160,[[]]],[11,"default","","",161,[[]]],[11,"default","","",162,[[]]],[11,"default","","",163,[[]]],[11,"default","","",164,[[]]],[11,"default","","",165,[[]]],[11,"default","","",166,[[]]],[11,"default","","",167,[[]]],[11,"default","","",168,[[]]],[11,"default","","",169,[[]]],[11,"default","","",170,[[]]],[11,"default","","",171,[[]]],[11,"default","","",172,[[]]],[11,"default","","",173,[[]]],[11,"default","","",174,[[]]],[11,"default","","",175,[[]]],[11,"default","","",176,[[]]],[11,"default","","",177,[[]]],[11,"default","","",178,[[]]],[11,"default","","",179,[[]]],[11,"default","","",180,[[]]],[11,"default","","",181,[[]]],[11,"default","","",182,[[]]],[11,"default","","",183,[[]]],[11,"default","","",184,[[]]],[11,"default","syn","",22,[[],["generics",3]]],[11,"default","","",20,[[],["boundlifetimes",3]]],[11,"default","","",81,[[]]],[11,"default","syn::punctuated","",196,[[]]],[11,"cmp","syn","",30,[[["lifetime",3]],["ordering",4]]],[11,"eq","syn::token","",82,[[["underscore",3]]]],[11,"eq","","",83,[[["abstract",3]]]],[11,"eq","","",84,[[["as",3]]]],[11,"eq","","",85,[[["async",3]]]],[11,"eq","","",86,[[["auto",3]]]],[11,"eq","","",87,[[["await",3]]]],[11,"eq","","",88,[[["become",3]]]],[11,"eq","","",89,[[["box",3]]]],[11,"eq","","",90,[[["break",3]]]],[11,"eq","","",91,[[["const",3]]]],[11,"eq","","",92,[[["continue",3]]]],[11,"eq","","",93,[[["crate",3]]]],[11,"eq","","",94,[[["default",3]]]],[11,"eq","","",95,[[["do",3]]]],[11,"eq","","",96,[[["dyn",3]]]],[11,"eq","","",97,[[["else",3]]]],[11,"eq","","",98,[[["enum",3]]]],[11,"eq","","",99,[[["extern",3]]]],[11,"eq","","",100,[[["final",3]]]],[11,"eq","","",101,[[["fn",3]]]],[11,"eq","","",102,[[["for",3]]]],[11,"eq","","",103,[[["if",3]]]],[11,"eq","","",104,[[["impl",3]]]],[11,"eq","","",105,[[["in",3]]]],[11,"eq","","",106,[[["let",3]]]],[11,"eq","","",107,[[["loop",3]]]],[11,"eq","","",108,[[["macro",3]]]],[11,"eq","","",109,[[["match",3]]]],[11,"eq","","",110,[[["mod",3]]]],[11,"eq","","",111,[[["move",3]]]],[11,"eq","","",112,[[["mut",3]]]],[11,"eq","","",113,[[["override",3]]]],[11,"eq","","",114,[[["priv",3]]]],[11,"eq","","",115,[[["pub",3]]]],[11,"eq","","",116,[[["ref",3]]]],[11,"eq","","",117,[[["return",3]]]],[11,"eq","","",118,[[["selftype",3]]]],[11,"eq","","",119,[[["selfvalue",3]]]],[11,"eq","","",120,[[["static",3]]]],[11,"eq","","",121,[[["struct",3]]]],[11,"eq","","",122,[[["super",3]]]],[11,"eq","","",123,[[["trait",3]]]],[11,"eq","","",124,[[["try",3]]]],[11,"eq","","",125,[[["type",3]]]],[11,"eq","","",126,[[["typeof",3]]]],[11,"eq","","",127,[[["union",3]]]],[11,"eq","","",128,[[["unsafe",3]]]],[11,"eq","","",129,[[["unsized",3]]]],[11,"eq","","",130,[[["use",3]]]],[11,"eq","","",131,[[["virtual",3]]]],[11,"eq","","",132,[[["where",3]]]],[11,"eq","","",133,[[["while",3]]]],[11,"eq","","",134,[[["yield",3]]]],[11,"eq","","",135,[[["add",3]]]],[11,"eq","","",136,[[["addeq",3]]]],[11,"eq","","",137,[[["and",3]]]],[11,"eq","","",138,[[["andand",3]]]],[11,"eq","","",139,[[["andeq",3]]]],[11,"eq","","",140,[[["at",3]]]],[11,"eq","","",141,[[["bang",3]]]],[11,"eq","","",142,[[["caret",3]]]],[11,"eq","","",143,[[["careteq",3]]]],[11,"eq","","",144,[[["colon",3]]]],[11,"eq","","",145,[[["colon2",3]]]],[11,"eq","","",146,[[["comma",3]]]],[11,"eq","","",147,[[["div",3]]]],[11,"eq","","",148,[[["diveq",3]]]],[11,"eq","","",149,[[["dollar",3]]]],[11,"eq","","",150,[[["dot",3]]]],[11,"eq","","",151,[[["dot2",3]]]],[11,"eq","","",152,[[["dot3",3]]]],[11,"eq","","",153,[[["dotdoteq",3]]]],[11,"eq","","",154,[[["eq",3]]]],[11,"eq","","",155,[[["eqeq",3]]]],[11,"eq","","",156,[[["ge",3]]]],[11,"eq","","",157,[[["gt",3]]]],[11,"eq","","",158,[[["le",3]]]],[11,"eq","","",159,[[["lt",3]]]],[11,"eq","","",160,[[["muleq",3]]]],[11,"eq","","",161,[[["ne",3]]]],[11,"eq","","",162,[[["or",3]]]],[11,"eq","","",163,[[["oreq",3]]]],[11,"eq","","",164,[[["oror",3]]]],[11,"eq","","",165,[[["pound",3]]]],[11,"eq","","",166,[[["question",3]]]],[11,"eq","","",167,[[["rarrow",3]]]],[11,"eq","","",168,[[["larrow",3]]]],[11,"eq","","",169,[[["rem",3]]]],[11,"eq","","",170,[[["remeq",3]]]],[11,"eq","","",171,[[["fatarrow",3]]]],[11,"eq","","",172,[[["semi",3]]]],[11,"eq","","",173,[[["shl",3]]]],[11,"eq","","",174,[[["shleq",3]]]],[11,"eq","","",175,[[["shr",3]]]],[11,"eq","","",176,[[["shreq",3]]]],[11,"eq","","",177,[[["star",3]]]],[11,"eq","","",178,[[["sub",3]]]],[11,"eq","","",179,[[["subeq",3]]]],[11,"eq","","",180,[[["tilde",3]]]],[11,"eq","","",181,[[["brace",3]]]],[11,"eq","","",182,[[["bracket",3]]]],[11,"eq","","",183,[[["paren",3]]]],[11,"eq","","",184,[[["group",3]]]],[11,"eq","syn","",0,[[]]],[11,"eq","","",61,[[["attrstyle",4]]]],[11,"ne","","",61,[[["attrstyle",4]]]],[11,"eq","","",62,[[["meta",4]]]],[11,"ne","","",62,[[["meta",4]]]],[11,"eq","","",1,[[["metalist",3]]]],[11,"ne","","",1,[[["metalist",3]]]],[11,"eq","","",2,[[["metanamevalue",3]]]],[11,"ne","","",2,[[["metanamevalue",3]]]],[11,"eq","","",63,[[["nestedmeta",4]]]],[11,"ne","","",63,[[["nestedmeta",4]]]],[11,"eq","","",6,[[["variant",3]]]],[11,"ne","","",6,[[["variant",3]]]],[11,"eq","","",64,[[["fields",4]]]],[11,"ne","","",64,[[["fields",4]]]],[11,"eq","","",4,[[["fieldsnamed",3]]]],[11,"ne","","",4,[[["fieldsnamed",3]]]],[11,"eq","","",5,[[["fieldsunnamed",3]]]],[11,"ne","","",5,[[["fieldsunnamed",3]]]],[11,"eq","","",3,[[["field",3]]]],[11,"ne","","",3,[[["field",3]]]],[11,"eq","","",65,[[["visibility",4]]]],[11,"ne","","",65,[[["visibility",4]]]],[11,"eq","","",8,[[["vispublic",3]]]],[11,"ne","","",8,[[["vispublic",3]]]],[11,"eq","","",7,[[["viscrate",3]]]],[11,"ne","","",7,[[["viscrate",3]]]],[11,"eq","","",9,[[["visrestricted",3]]]],[11,"ne","","",9,[[["visrestricted",3]]]],[11,"eq","","",206,[[["exprarray",3]]]],[11,"ne","","",206,[[["exprarray",3]]]],[11,"eq","","",207,[[["exprassign",3]]]],[11,"ne","","",207,[[["exprassign",3]]]],[11,"eq","","",208,[[["exprassignop",3]]]],[11,"ne","","",208,[[["exprassignop",3]]]],[11,"eq","","",209,[[["exprasync",3]]]],[11,"ne","","",209,[[["exprasync",3]]]],[11,"eq","","",210,[[["exprawait",3]]]],[11,"ne","","",210,[[["exprawait",3]]]],[11,"eq","","",10,[[["exprbinary",3]]]],[11,"ne","","",10,[[["exprbinary",3]]]],[11,"eq","","",211,[[["exprblock",3]]]],[11,"ne","","",211,[[["exprblock",3]]]],[11,"eq","","",212,[[["exprbox",3]]]],[11,"ne","","",212,[[["exprbox",3]]]],[11,"eq","","",213,[[["exprbreak",3]]]],[11,"ne","","",213,[[["exprbreak",3]]]],[11,"eq","","",11,[[["exprcall",3]]]],[11,"ne","","",11,[[["exprcall",3]]]],[11,"eq","","",12,[[["exprcast",3]]]],[11,"ne","","",12,[[["exprcast",3]]]],[11,"eq","","",214,[[["exprclosure",3]]]],[11,"ne","","",214,[[["exprclosure",3]]]],[11,"eq","","",215,[[["exprcontinue",3]]]],[11,"ne","","",215,[[["exprcontinue",3]]]],[11,"eq","","",13,[[["exprfield",3]]]],[11,"ne","","",13,[[["exprfield",3]]]],[11,"eq","","",216,[[["exprforloop",3]]]],[11,"ne","","",216,[[["exprforloop",3]]]],[11,"eq","","",217,[[["exprgroup",3]]]],[11,"ne","","",217,[[["exprgroup",3]]]],[11,"eq","","",218,[[["exprif",3]]]],[11,"ne","","",218,[[["exprif",3]]]],[11,"eq","","",14,[[["exprindex",3]]]],[11,"ne","","",14,[[["exprindex",3]]]],[11,"eq","","",219,[[["exprlet",3]]]],[11,"ne","","",219,[[["exprlet",3]]]],[11,"eq","","",15,[[["exprlit",3]]]],[11,"ne","","",15,[[["exprlit",3]]]],[11,"eq","","",220,[[["exprloop",3]]]],[11,"ne","","",220,[[["exprloop",3]]]],[11,"eq","","",221,[[["exprmacro",3]]]],[11,"ne","","",221,[[["exprmacro",3]]]],[11,"eq","","",222,[[["exprmatch",3]]]],[11,"ne","","",222,[[["exprmatch",3]]]],[11,"eq","","",223,[[["exprmethodcall",3]]]],[11,"ne","","",223,[[["exprmethodcall",3]]]],[11,"eq","","",16,[[["exprparen",3]]]],[11,"ne","","",16,[[["exprparen",3]]]],[11,"eq","","",17,[[["exprpath",3]]]],[11,"ne","","",17,[[["exprpath",3]]]],[11,"eq","","",224,[[["exprrange",3]]]],[11,"ne","","",224,[[["exprrange",3]]]],[11,"eq","","",225,[[["exprreference",3]]]],[11,"ne","","",225,[[["exprreference",3]]]],[11,"eq","","",226,[[["exprrepeat",3]]]],[11,"ne","","",226,[[["exprrepeat",3]]]],[11,"eq","","",227,[[["exprreturn",3]]]],[11,"ne","","",227,[[["exprreturn",3]]]],[11,"eq","","",228,[[["exprstruct",3]]]],[11,"ne","","",228,[[["exprstruct",3]]]],[11,"eq","","",229,[[["exprtry",3]]]],[11,"ne","","",229,[[["exprtry",3]]]],[11,"eq","","",230,[[["exprtryblock",3]]]],[11,"ne","","",230,[[["exprtryblock",3]]]],[11,"eq","","",231,[[["exprtuple",3]]]],[11,"ne","","",231,[[["exprtuple",3]]]],[11,"eq","","",232,[[["exprtype",3]]]],[11,"ne","","",232,[[["exprtype",3]]]],[11,"eq","","",18,[[["exprunary",3]]]],[11,"ne","","",18,[[["exprunary",3]]]],[11,"eq","","",233,[[["exprunsafe",3]]]],[11,"ne","","",233,[[["exprunsafe",3]]]],[11,"eq","","",234,[[["exprwhile",3]]]],[11,"ne","","",234,[[["exprwhile",3]]]],[11,"eq","","",235,[[["expryield",3]]]],[11,"ne","","",235,[[["expryield",3]]]],[11,"eq","","",66,[[]]],[11,"eq","","",67,[[["member",4]]]],[11,"ne","","",67,[[["member",4]]]],[11,"eq","","",19,[[]]],[11,"eq","","",22,[[["generics",3]]]],[11,"ne","","",22,[[["generics",3]]]],[11,"eq","","",68,[[["genericparam",4]]]],[11,"ne","","",68,[[["genericparam",4]]]],[11,"eq","","",28,[[["typeparam",3]]]],[11,"ne","","",28,[[["typeparam",3]]]],[11,"eq","","",23,[[["lifetimedef",3]]]],[11,"ne","","",23,[[["lifetimedef",3]]]],[11,"eq","","",21,[[["constparam",3]]]],[11,"ne","","",21,[[["constparam",3]]]],[11,"eq","","",236,[[["implgenerics",3]]]],[11,"ne","","",236,[[["implgenerics",3]]]],[11,"eq","","",185,[[["typegenerics",3]]]],[11,"ne","","",185,[[["typegenerics",3]]]],[11,"eq","","",237,[[["turbofish",3]]]],[11,"ne","","",237,[[["turbofish",3]]]],[11,"eq","","",20,[[["boundlifetimes",3]]]],[11,"ne","","",20,[[["boundlifetimes",3]]]],[11,"eq","","",70,[[["typeparambound",4]]]],[11,"ne","","",70,[[["typeparambound",4]]]],[11,"eq","","",27,[[["traitbound",3]]]],[11,"ne","","",27,[[["traitbound",3]]]],[11,"eq","","",69,[[["traitboundmodifier",4]]]],[11,"ne","","",69,[[["traitboundmodifier",4]]]],[11,"eq","","",29,[[["whereclause",3]]]],[11,"ne","","",29,[[["whereclause",3]]]],[11,"eq","","",71,[[["wherepredicate",4]]]],[11,"ne","","",71,[[["wherepredicate",4]]]],[11,"eq","","",26,[[["predicatetype",3]]]],[11,"ne","","",26,[[["predicatetype",3]]]],[11,"eq","","",25,[[["predicatelifetime",3]]]],[11,"ne","","",25,[[["predicatelifetime",3]]]],[11,"eq","","",24,[[["predicateeq",3]]]],[11,"ne","","",24,[[["predicateeq",3]]]],[11,"eq","","",30,[[["lifetime",3]]]],[11,"eq","","",72,[[]]],[11,"eq","","",186,[[]]],[11,"eq","","",187,[[]]],[11,"eq","","",188,[[]]],[11,"eq","","",189,[[]]],[11,"eq","","",190,[[]]],[11,"eq","","",191,[[]]],[11,"eq","","",31,[[]]],[11,"eq","","",73,[[["strstyle",4]]]],[11,"ne","","",73,[[["strstyle",4]]]],[11,"eq","","",74,[[["macrodelimiter",4]]]],[11,"ne","","",74,[[["macrodelimiter",4]]]],[11,"eq","","",32,[[]]],[11,"eq","","",36,[[["deriveinput",3]]]],[11,"ne","","",36,[[["deriveinput",3]]]],[11,"eq","","",75,[[["data",4]]]],[11,"ne","","",75,[[["data",4]]]],[11,"eq","","",34,[[["datastruct",3]]]],[11,"ne","","",34,[[["datastruct",3]]]],[11,"eq","","",33,[[["dataenum",3]]]],[11,"ne","","",33,[[["dataenum",3]]]],[11,"eq","","",35,[[["dataunion",3]]]],[11,"ne","","",35,[[["dataunion",3]]]],[11,"eq","","",76,[[["binop",4]]]],[11,"ne","","",76,[[["binop",4]]]],[11,"eq","","",77,[[["unop",4]]]],[11,"ne","","",77,[[["unop",4]]]],[11,"eq","","",39,[[["typearray",3]]]],[11,"ne","","",39,[[["typearray",3]]]],[11,"eq","","",40,[[["typebarefn",3]]]],[11,"ne","","",40,[[["typebarefn",3]]]],[11,"eq","","",41,[[["typegroup",3]]]],[11,"ne","","",41,[[["typegroup",3]]]],[11,"eq","","",42,[[["typeimpltrait",3]]]],[11,"ne","","",42,[[["typeimpltrait",3]]]],[11,"eq","","",43,[[["typeinfer",3]]]],[11,"ne","","",43,[[["typeinfer",3]]]],[11,"eq","","",44,[[["typemacro",3]]]],[11,"ne","","",44,[[["typemacro",3]]]],[11,"eq","","",45,[[["typenever",3]]]],[11,"ne","","",45,[[["typenever",3]]]],[11,"eq","","",46,[[["typeparen",3]]]],[11,"ne","","",46,[[["typeparen",3]]]],[11,"eq","","",47,[[["typepath",3]]]],[11,"ne","","",47,[[["typepath",3]]]],[11,"eq","","",48,[[["typeptr",3]]]],[11,"ne","","",48,[[["typeptr",3]]]],[11,"eq","","",49,[[["typereference",3]]]],[11,"ne","","",49,[[["typereference",3]]]],[11,"eq","","",50,[[["typeslice",3]]]],[11,"ne","","",50,[[["typeslice",3]]]],[11,"eq","","",51,[[["typetraitobject",3]]]],[11,"ne","","",51,[[["typetraitobject",3]]]],[11,"eq","","",52,[[["typetuple",3]]]],[11,"ne","","",52,[[["typetuple",3]]]],[11,"eq","","",79,[[]]],[11,"eq","","",37,[[["abi",3]]]],[11,"ne","","",37,[[["abi",3]]]],[11,"eq","","",38,[[["barefnarg",3]]]],[11,"ne","","",38,[[["barefnarg",3]]]],[11,"eq","","",53,[[["variadic",3]]]],[11,"ne","","",53,[[["variadic",3]]]],[11,"eq","","",78,[[["returntype",4]]]],[11,"ne","","",78,[[["returntype",4]]]],[11,"eq","","",58,[[["path",3]]]],[11,"ne","","",58,[[["path",3]]]],[11,"eq","","",59,[[["pathsegment",3]]]],[11,"ne","","",59,[[["pathsegment",3]]]],[11,"eq","","",81,[[["patharguments",4]]]],[11,"ne","","",81,[[["patharguments",4]]]],[11,"eq","","",80,[[["genericargument",4]]]],[11,"ne","","",80,[[["genericargument",4]]]],[11,"eq","","",54,[[["anglebracketedgenericarguments",3]]]],[11,"ne","","",54,[[["anglebracketedgenericarguments",3]]]],[11,"eq","","",55,[[["binding",3]]]],[11,"ne","","",55,[[["binding",3]]]],[11,"eq","","",56,[[["constraint",3]]]],[11,"ne","","",56,[[["constraint",3]]]],[11,"eq","","",57,[[["parenthesizedgenericarguments",3]]]],[11,"ne","","",57,[[["parenthesizedgenericarguments",3]]]],[11,"eq","","",60,[[["qself",3]]]],[11,"ne","","",60,[[["qself",3]]]],[11,"eq","syn::buffer","",193,[[["cursor",3]]]],[11,"ne","","",193,[[["cursor",3]]]],[11,"eq","syn::punctuated","",196,[[["punctuated",3]]]],[11,"ne","","",196,[[["punctuated",3]]]],[11,"partial_cmp","syn","",30,[[["lifetime",3]],[["ordering",4],["option",4]]]],[11,"deref","syn::token","",82,[[]]],[11,"deref","","",135,[[]]],[11,"deref","","",137,[[]]],[11,"deref","","",140,[[]]],[11,"deref","","",141,[[]]],[11,"deref","","",142,[[]]],[11,"deref","","",144,[[]]],[11,"deref","","",146,[[]]],[11,"deref","","",147,[[]]],[11,"deref","","",149,[[]]],[11,"deref","","",150,[[]]],[11,"deref","","",154,[[]]],[11,"deref","","",157,[[]]],[11,"deref","","",159,[[]]],[11,"deref","","",162,[[]]],[11,"deref","","",165,[[]]],[11,"deref","","",166,[[]]],[11,"deref","","",169,[[]]],[11,"deref","","",172,[[]]],[11,"deref","","",177,[[]]],[11,"deref","","",178,[[]]],[11,"deref","","",180,[[]]],[11,"deref","syn::parse","",202,[[]]],[11,"deref_mut","syn::token","",82,[[]]],[11,"deref_mut","","",135,[[]]],[11,"deref_mut","","",137,[[]]],[11,"deref_mut","","",140,[[]]],[11,"deref_mut","","",141,[[]]],[11,"deref_mut","","",142,[[]]],[11,"deref_mut","","",144,[[]]],[11,"deref_mut","","",146,[[]]],[11,"deref_mut","","",147,[[]]],[11,"deref_mut","","",149,[[]]],[11,"deref_mut","","",150,[[]]],[11,"deref_mut","","",154,[[]]],[11,"deref_mut","","",157,[[]]],[11,"deref_mut","","",159,[[]]],[11,"deref_mut","","",162,[[]]],[11,"deref_mut","","",165,[[]]],[11,"deref_mut","","",166,[[]]],[11,"deref_mut","","",169,[[]]],[11,"deref_mut","","",172,[[]]],[11,"deref_mut","","",177,[[]]],[11,"deref_mut","","",178,[[]]],[11,"deref_mut","","",180,[[]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","syn::punctuated","",196,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",203,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",203,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",204,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",196,[[]]],[11,"index_mut","","",196,[[]]],[11,"hash","syn::token","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",107,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",111,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",140,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",145,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",151,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",156,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",161,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",163,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",179,[[]]],[11,"hash","","",180,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",184,[[]]],[11,"hash","syn","",0,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",206,[[]]],[11,"hash","","",207,[[]]],[11,"hash","","",208,[[]]],[11,"hash","","",209,[[]]],[11,"hash","","",210,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",211,[[]]],[11,"hash","","",212,[[]]],[11,"hash","","",213,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",214,[[]]],[11,"hash","","",215,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",216,[[]]],[11,"hash","","",217,[[]]],[11,"hash","","",218,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",219,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",220,[[]]],[11,"hash","","",221,[[]]],[11,"hash","","",222,[[]]],[11,"hash","","",223,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",224,[[]]],[11,"hash","","",225,[[]]],[11,"hash","","",226,[[]]],[11,"hash","","",227,[[]]],[11,"hash","","",228,[[]]],[11,"hash","","",229,[[]]],[11,"hash","","",230,[[]]],[11,"hash","","",231,[[]]],[11,"hash","","",232,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",233,[[]]],[11,"hash","","",234,[[]]],[11,"hash","","",235,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",236,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",237,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",190,[[]]],[11,"hash","","",191,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",60,[[]]],[11,"hash","syn::punctuated","",196,[[]]],[11,"from_iter","","",196,[[["intoiterator",8]]]],[11,"from_iter","","",196,[[["intoiterator",8]]]],[11,"description","syn","",204,[[]]],[11,"to_tokens","syn::token","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","","",99,[[["tokenstream",3]]]],[11,"to_tokens","","",100,[[["tokenstream",3]]]],[11,"to_tokens","","",101,[[["tokenstream",3]]]],[11,"to_tokens","","",102,[[["tokenstream",3]]]],[11,"to_tokens","","",103,[[["tokenstream",3]]]],[11,"to_tokens","","",104,[[["tokenstream",3]]]],[11,"to_tokens","","",105,[[["tokenstream",3]]]],[11,"to_tokens","","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"to_tokens","","",108,[[["tokenstream",3]]]],[11,"to_tokens","","",109,[[["tokenstream",3]]]],[11,"to_tokens","","",110,[[["tokenstream",3]]]],[11,"to_tokens","","",111,[[["tokenstream",3]]]],[11,"to_tokens","","",112,[[["tokenstream",3]]]],[11,"to_tokens","","",113,[[["tokenstream",3]]]],[11,"to_tokens","","",114,[[["tokenstream",3]]]],[11,"to_tokens","","",115,[[["tokenstream",3]]]],[11,"to_tokens","","",116,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","syn","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"fmt","syn","",67,[[["formatter",3]],["result",6]]],[11,"span","","",67,[[],[["span",3],["option",4]]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"span","","",19,[[],[["span",3],["option",4]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",205,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",205,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",205,[[["span",3]]]],[11,"visit_abi","syn::visit","",198,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",198,[[["anglebracketedgenericarguments",3]]]],[11,"visit_attr_style","","",198,[[["attrstyle",4]]]],[11,"visit_attribute","","",198,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",198,[[["barefnarg",3]]]],[11,"visit_bin_op","","",198,[[["binop",4]]]],[11,"visit_binding","","",198,[[["binding",3]]]],[11,"visit_bound_lifetimes","","",198,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",198,[[["constparam",3]]]],[11,"visit_constraint","","",198,[[["constraint",3]]]],[11,"visit_data","","",198,[[["data",4]]]],[11,"visit_data_enum","","",198,[[["dataenum",3]]]],[11,"visit_data_struct","","",198,[[["datastruct",3]]]],[11,"visit_data_union","","",198,[[["dataunion",3]]]],[11,"visit_derive_input","","",198,[[["deriveinput",3]]]],[11,"visit_expr","","",198,[[["expr",4]]]],[11,"visit_expr_binary","","",198,[[["exprbinary",3]]]],[11,"visit_expr_call","","",198,[[["exprcall",3]]]],[11,"visit_expr_cast","","",198,[[["exprcast",3]]]],[11,"visit_expr_field","","",198,[[["exprfield",3]]]],[11,"visit_expr_index","","",198,[[["exprindex",3]]]],[11,"visit_expr_lit","","",198,[[["exprlit",3]]]],[11,"visit_expr_paren","","",198,[[["exprparen",3]]]],[11,"visit_expr_path","","",198,[[["exprpath",3]]]],[11,"visit_expr_unary","","",198,[[["exprunary",3]]]],[11,"visit_field","","",198,[[["field",3]]]],[11,"visit_fields","","",198,[[["fields",4]]]],[11,"visit_fields_named","","",198,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",198,[[["fieldsunnamed",3]]]],[11,"visit_generic_argument","","",198,[[["genericargument",4]]]],[11,"visit_generic_param","","",198,[[["genericparam",4]]]],[11,"visit_generics","","",198,[[["generics",3]]]],[11,"visit_ident","","",198,[[["ident",3]]]],[11,"visit_index","","",198,[[["index",3]]]],[11,"visit_lifetime","","",198,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",198,[[["lifetimedef",3]]]],[11,"visit_lit","","",198,[[["lit",4]]]],[11,"visit_lit_bool","","",198,[[["litbool",3]]]],[11,"visit_lit_byte","","",198,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",198,[[["litbytestr",3]]]],[11,"visit_lit_char","","",198,[[["litchar",3]]]],[11,"visit_lit_float","","",198,[[["litfloat",3]]]],[11,"visit_lit_int","","",198,[[["litint",3]]]],[11,"visit_lit_str","","",198,[[["litstr",3]]]],[11,"visit_macro","","",198,[[["macro",3]]]],[11,"visit_macro_delimiter","","",198,[[["macrodelimiter",4]]]],[11,"visit_member","","",198,[[["member",4]]]],[11,"visit_meta","","",198,[[["meta",4]]]],[11,"visit_meta_list","","",198,[[["metalist",3]]]],[11,"visit_meta_name_value","","",198,[[["metanamevalue",3]]]],[11,"visit_nested_meta","","",198,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",198,[[["parenthesizedgenericarguments",3]]]],[11,"visit_path","","",198,[[["path",3]]]],[11,"visit_path_arguments","","",198,[[["patharguments",4]]]],[11,"visit_path_segment","","",198,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",198,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",198,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",198,[[["predicatetype",3]]]],[11,"visit_qself","","",198,[[["qself",3]]]],[11,"visit_return_type","","",198,[[["returntype",4]]]],[11,"visit_span","","",198,[[["span",3]]]],[11,"visit_trait_bound","","",198,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",198,[[["traitboundmodifier",4]]]],[11,"visit_type","","",198,[[["type",4]]]],[11,"visit_type_array","","",198,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",198,[[["typebarefn",3]]]],[11,"visit_type_group","","",198,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",198,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",198,[[["typeinfer",3]]]],[11,"visit_type_macro","","",198,[[["typemacro",3]]]],[11,"visit_type_never","","",198,[[["typenever",3]]]],[11,"visit_type_param","","",198,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",198,[[["typeparambound",4]]]],[11,"visit_type_paren","","",198,[[["typeparen",3]]]],[11,"visit_type_path","","",198,[[["typepath",3]]]],[11,"visit_type_ptr","","",198,[[["typeptr",3]]]],[11,"visit_type_reference","","",198,[[["typereference",3]]]],[11,"visit_type_slice","","",198,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",198,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",198,[[["typetuple",3]]]],[11,"visit_un_op","","",198,[[["unop",4]]]],[11,"visit_variadic","","",198,[[["variadic",3]]]],[11,"visit_variant","","",198,[[["variant",3]]]],[11,"visit_vis_crate","","",198,[[["viscrate",3]]]],[11,"visit_vis_public","","",198,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",198,[[["visrestricted",3]]]],[11,"visit_visibility","","",198,[[["visibility",4]]]],[11,"visit_where_clause","","",198,[[["whereclause",3]]]],[11,"visit_where_predicate","","",198,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",244,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse…",244,[[],["error",3]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"synstructure":{"doc":"This crate provides helper types for matching against enum…","i":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both…",null,null],[12,"binding","","The name which this BindingInfo will bind to.",0,null],[12,"style","","The type of binding which this BindingInfo will create.",0,null],[3,"VariantAst","","This type is similar to `syn`\'s `Variant` type, however…",null,null],[12,"attrs","","",1,null],[12,"ident","","",1,null],[12,"fields","","",1,null],[12,"discriminant","","",1,null],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`\'s variant which…",null,null],[12,"prefix","","",2,null],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides…",null,null],[4,"AddBounds","","Changes how bounds are added",null,null],[13,"Both","","Add for fields and generics",3,null],[13,"Fields","","Fields only",3,null],[13,"Generics","","Generics only",3,null],[13,"None","","None",3,null],[4,"BindStyle","","The type of binding to use when generating a pattern.",null,null],[13,"Move","","`x`",4,null],[13,"MoveMut","","`mut x`",4,null],[13,"Ref","","`ref x`",4,null],[13,"RefMut","","`ref mut x`",4,null],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type…",null,[[["display",8]],["string",3]]],[8,"MacroResult","","Helper trait describing values which may be returned by…",null,null],[10,"into_result","","Convert this result into a `Result` for further processing…",5,[[],[["tokenstream",3],["result",6]]]],[11,"into_stream","","Convert this result into a `proc_macro::TokenStream`,…",5,[[],["tokenstream",3]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",0,[[],["field",3]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[],["tokenstream",3]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",0,[[],[["ident",3],["vec",3]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,[[]]],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,[[]]],[11,"ast","","Returns a `VariantAst` object which contains references to…",2,[[],["variantast",3]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[]]],[11,"pat","","Generates the match-arm pattern which could be used to…",2,[[],["tokenstream",3]]],[11,"construct","","Generates the token stream required to construct the…",2,[[],["tokenstream",3]]],[11,"each","","Runs the passed-in function once for each bound field,…",2,[[],["tokenstream",3]]],[11,"fold","","Runs the passed-in function once for each bound field,…",2,[[],["tokenstream",3]]],[11,"filter","","Filter the bindings created by this `Variant` object. This…",2,[[]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",2,[[]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",2,[[]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",2,[[],[["ident",3],["vec",3]]]],[11,"new","","Create a new `Structure` with the variants and fields from…",6,[[["deriveinput",3]]]],[11,"try_new","","Create a new `Structure` with the variants and fields from…",6,[[["deriveinput",3]],["result",6]]],[11,"variants","","Returns a slice of the variants in this Structure.",6,[[]]],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",6,[[]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",6,[[],["deriveinput",3]]],[11,"omitted_variants","","True if any variants were omitted due to a…",6,[[]]],[11,"each","","Runs the passed-in function once for each bound field,…",6,[[],["tokenstream",3]]],[11,"fold","","Runs the passed-in function once for each bound field,…",6,[[],["tokenstream",3]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing…",6,[[],["tokenstream",3]]],[11,"filter","","Filter the bindings created by this `Structure` object.…",6,[[]]],[11,"add_where_predicate","","Specify additional where predicate bounds which should be…",6,[[["wherepredicate",4]]]],[11,"add_bounds","","Specify which bounds should be generated by…",6,[[["addbounds",4]]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object.…",6,[[]]],[11,"remove_variant","","Remove the variant at the given index.",6,[[]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",6,[[]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",6,[[]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced…",6,[[],[["ident",3],["vec",3]]]],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when…",6,[[["genericparam",4]]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each…",6,[[["traitbound",3],["addbounds",4],["option",4]]]],[11,"bound_impl","","NOTE: This methods\' features are superceded by…",6,[[["totokens",8]],["tokenstream",3]]],[11,"unsafe_bound_impl","","NOTE: This methods\' features are superceded by…",6,[[["totokens",8]],["tokenstream",3]]],[11,"unbound_impl","","NOTE: This methods\' features are superceded by…",6,[[["totokens",8]],["tokenstream",3]]],[11,"unsafe_unbound_impl","","NOTE: This methods\' features are superceded by…",6,[[["totokens",8]],["tokenstream",3]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl…",6,[[["tokenstream",3]],["tokenstream",3]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper.…",null,null],[14,"decl_attribute","","The `decl_attribute!` macro declares a custom attribute…",null,null],[14,"test_derive","","Run a test on a custom derive. This macro expands both the…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",0,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"clone","","",3,[[],["addbounds",4]]],[11,"clone","","",4,[[],["bindstyle",4]]],[11,"clone","","",0,[[],["bindinginfo",3]]],[11,"clone","","",1,[[],["variantast",3]]],[11,"clone","","",2,[[],["variantinfo",3]]],[11,"clone","","",6,[[],["structure",3]]],[11,"eq","","",3,[[["addbounds",4]]]],[11,"eq","","",4,[[["bindstyle",4]]]],[11,"eq","","",0,[[["bindinginfo",3]]]],[11,"ne","","",0,[[["bindinginfo",3]]]],[11,"eq","","",1,[[["variantast",3]]]],[11,"ne","","",1,[[["variantast",3]]]],[11,"eq","","",2,[[["variantinfo",3]]]],[11,"ne","","",2,[[["variantinfo",3]]]],[11,"eq","","",6,[[["structure",3]]]],[11,"ne","","",6,[[["structure",3]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",6,[[]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",0,[[["tokenstream",3]]]]],"p":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"AddBounds"],[4,"BindStyle"],[8,"MacroResult"],[3,"Structure"]]},\
"term":{"doc":"Terminal formatting library.","i":[[4,"Attr","term","Terminal attributes for use with term.attr().",null,null],[13,"Bold","","Bold (or possibly bright) mode",0,null],[13,"Dim","","Dim mode, also called faint or half-bright. Often not…",0,null],[13,"Italic","","Italics mode. Often not supported",0,null],[13,"Underline","","Underline mode",0,null],[13,"Blink","","Blink mode",0,null],[13,"Standout","","Standout mode. Often implemented as Reverse, sometimes…",0,null],[13,"Reverse","","Reverse mode, inverts the foreground and background colors",0,null],[13,"Secure","","Secure mode, also called invis mode. Hides the printed text",0,null],[13,"ForegroundColor","","Convenience attribute to set the foreground color",0,null],[13,"BackgroundColor","","Convenience attribute to set the background color",0,null],[4,"Error","","An error arising from interacting with the terminal.",null,null],[13,"Io","","Indicates an error from any underlying IO",1,null],[13,"TerminfoParsing","","Indicates an error during terminfo parsing",1,null],[13,"ParameterizedExpansion","","Indicates an error expanding a parameterized string from…",1,null],[13,"NotSupported","","Indicates that the terminal does not support the requested…",1,null],[13,"TermUnset","","Indicates that the `TERM` environment variable was unset,…",1,null],[13,"TerminfoEntryNotFound","","Indicates that we were unable to find a terminfo entry for…",1,null],[13,"CursorDestinationInvalid","","Indicates that the cursor could not be moved to the…",1,null],[13,"ColorOutOfRange","","Indicates that the terminal does not support displaying…",1,null],[5,"stdout","","Return a Terminal wrapping stdout, or None if a terminal…",null,[[],[["option",4],["box",3]]]],[5,"stderr","","Return a Terminal wrapping stderr, or None if a terminal…",null,[[],[["box",3],["option",4]]]],[0,"terminfo","","Terminfo database interface.",null,null],[3,"TermInfo","term::terminfo","A parsed terminfo database entry.",null,null],[12,"names","","Names for the terminal",2,null],[12,"bools","","Map of capability name to boolean value",2,null],[12,"numbers","","Map of capability name to numeric value",2,null],[12,"strings","","Map of capability name to raw (unexpanded) string",2,null],[3,"TerminfoTerminal","","A Terminal that knows how many colors it supports, with a…",null,null],[4,"Error","","An error from parsing a terminfo entry",null,null],[13,"BadMagic","","The \\\"magic\\\" number at the start of the file was wrong.",3,null],[13,"NotUtf8","","The names in the file were not valid UTF-8.",3,null],[13,"ShortNames","","The names section of the file was empty",3,null],[13,"TooManyBools","","More boolean parameters are present in the file than this…",3,null],[13,"TooManyNumbers","","More number parameters are present in the file than this…",3,null],[13,"TooManyStrings","","More string parameters are present in the file than this…",3,null],[13,"InvalidLength","","The length of some field was not >= -1.",3,null],[13,"NamesMissingNull","","The names table was missing a trailing null terminator.",3,null],[13,"StringsMissingNull","","The strings table was missing a trailing null terminator.",3,null],[0,"searcher","","ncurses-compatible database discovery",null,null],[5,"get_dbpath_for_term","term::terminfo::searcher","Return path to database entry for `term`",null,[[],[["pathbuf",3],["option",4]]]],[0,"parser","term::terminfo","`TermInfo` format parsing. ncurses-compatible compiled…",null,null],[0,"compiled","term::terminfo::parser","ncurses-compatible compiled terminfo format parsing…",null,null],[5,"parse","term::terminfo::parser::compiled","Parse a compiled terminfo entry, using long capability…",null,[[["read",8]],[["result",6],["terminfo",3]]]],[7,"boolfnames","","",null,null],[7,"boolnames","","",null,null],[7,"numfnames","","",null,null],[7,"numnames","","",null,null],[7,"stringfnames","","",null,null],[7,"stringnames","","",null,null],[0,"parm","term::terminfo","Parameterized string expansion",null,null],[3,"Variables","term::terminfo::parm","Container for static and dynamic variable arrays",null,null],[4,"Param","","Types of parameters a capability can use",null,null],[13,"Number","","",4,null],[13,"Words","","",4,null],[4,"Error","","An error from interpreting a parameterized string.",null,null],[13,"StackUnderflow","","Data was requested from the stack, but the stack didn\'t…",5,null],[13,"TypeMismatch","","The type of the element(s) on top of the stack did not…",5,null],[13,"UnrecognizedFormatOption","","An unrecognized format option was used.",5,null],[13,"InvalidVariableName","","An invalid variable name was used.",5,null],[13,"InvalidParameterIndex","","An invalid parameter index was used.",5,null],[13,"MalformedCharacterConstant","","A malformed character constant was used.",5,null],[13,"IntegerConstantOverflow","","An integer constant was too large (overflowed an i32)",5,null],[13,"MalformedIntegerConstant","","A malformed integer constant was used.",5,null],[13,"FormatWidthOverflow","","A format width constant was too large (overflowed a usize)",5,null],[13,"FormatPrecisionOverflow","","A format precision constant was too large (overflowed a…",5,null],[5,"expand","","Expand a parameterized capability",null,[[["variables",3]],[["vec",3],["result",4],["error",4]]]],[11,"new","","Return a new zero-initialized Variables",6,[[],["variables",3]]],[11,"from_env","term::terminfo","Create a `TermInfo` based on current environment.",2,[[],[["result",6],["terminfo",3]]]],[11,"from_name","","Create a `TermInfo` for the named terminal.",2,[[],[["result",6],["terminfo",3]]]],[11,"from_path","","Parse the given `TermInfo`.",2,[[["path",3],["asref",8]],[["result",6],["terminfo",3]]]],[11,"apply_cap","","Retrieve a capability `cmd` and expand it with `params`,…",2,[[["write",8]],["result",6]]],[11,"reset","","Write the reset string to `out`.",2,[[["write",8]],["result",6]]],[11,"new_with_terminfo","","Create a new TerminfoTerminal with the given TermInfo and…",7,[[["terminfo",3]],["terminfoterminal",3]]],[11,"new","","Create a new TerminfoTerminal for the current environment…",7,[[],[["option",4],["terminfoterminal",3]]]],[0,"color","term","Terminal color definitions",null,null],[6,"Color","term::color","Number for a terminal color",null,null],[17,"BLACK","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"YELLOW","","",null,null],[17,"BLUE","","",null,null],[17,"MAGENTA","","",null,null],[17,"CYAN","","",null,null],[17,"WHITE","","",null,null],[17,"BRIGHT_BLACK","","",null,null],[17,"BRIGHT_RED","","",null,null],[17,"BRIGHT_GREEN","","",null,null],[17,"BRIGHT_YELLOW","","",null,null],[17,"BRIGHT_BLUE","","",null,null],[17,"BRIGHT_MAGENTA","","",null,null],[17,"BRIGHT_CYAN","","",null,null],[17,"BRIGHT_WHITE","","",null,null],[6,"StdoutTerminal","term","Alias for stdout terminals.",null,null],[6,"StderrTerminal","","Alias for stderr terminals.",null,null],[6,"Result","","The canonical `Result` type using this crate\'s Error type.",null,null],[8,"Terminal","","A terminal with similar capabilities to an ANSI Terminal…",null,null],[16,"Output","","The terminal\'s output writer type.",8,null],[10,"fg","","Sets the foreground color to the given color.",8,[[["color",6]],["result",6]]],[10,"bg","","Sets the background color to the given color.",8,[[["color",6]],["result",6]]],[10,"attr","","Sets the given terminal attribute, if supported. Returns…",8,[[["attr",4]],["result",6]]],[10,"supports_attr","","Returns whether the given terminal attribute is supported.",8,[[["attr",4]]]],[10,"reset","","Resets all terminal attributes and colors to their defaults.",8,[[],["result",6]]],[10,"supports_reset","","Returns true if reset is supported.",8,[[]]],[10,"supports_color","","Returns true if color is fully supported.",8,[[]]],[10,"cursor_up","","Moves the cursor up one line.",8,[[],["result",6]]],[10,"delete_line","","Deletes the text from the cursor location to the end of…",8,[[],["result",6]]],[10,"carriage_return","","Moves the cursor to the left edge of the current line.",8,[[],["result",6]]],[10,"get_ref","","Gets an immutable reference to the stream inside",8,[[]]],[10,"get_mut","","Gets a mutable reference to the stream inside",8,[[]]],[10,"into_inner","","Returns the contained stream, destroying the `Terminal`",8,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","term::terminfo","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","term::terminfo::parm","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"fg","term::terminfo","",7,[[["color",6]],["result",6]]],[11,"bg","","",7,[[["color",6]],["result",6]]],[11,"attr","","",7,[[["attr",4]],["result",6]]],[11,"supports_attr","","",7,[[["attr",4]]]],[11,"reset","","",7,[[],["result",6]]],[11,"supports_reset","","",7,[[]]],[11,"supports_color","","",7,[[]]],[11,"cursor_up","","",7,[[],["result",6]]],[11,"delete_line","","",7,[[],["result",6]]],[11,"carriage_return","","",7,[[],["result",6]]],[11,"get_ref","","",7,[[]]],[11,"get_mut","","",7,[[]]],[11,"into_inner","","",7,[[]]],[11,"from","","",3,[[["fromutf8error",3]]]],[11,"from","term","",1,[[["error",3]]]],[11,"from","","",1,[[["error",4]]]],[11,"from","","",1,[[["error",4]]]],[11,"clone","term::terminfo","",2,[[],["terminfo",3]]],[11,"clone","term::terminfo::parm","",4,[[],["param",4]]],[11,"clone","term::terminfo","",7,[[],["terminfoterminal",3]]],[11,"clone","term","",0,[[],["attr",4]]],[11,"default","term::terminfo::parm","",4,[[]]],[11,"default","","",6,[[],["variables",3]]],[11,"eq","term::terminfo","",3,[[["error",4]]]],[11,"ne","","",3,[[["error",4]]]],[11,"eq","term::terminfo::parm","",5,[[["error",4]]]],[11,"ne","","",5,[[["error",4]]]],[11,"eq","term","",0,[[["attr",4]]]],[11,"ne","","",0,[[["attr",4]]]],[11,"eq","","",1,[[["error",4]]]],[11,"fmt","term::terminfo","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","term::terminfo::parm","",5,[[["formatter",3]],["result",6]]],[11,"fmt","term::terminfo","",7,[[["formatter",3]],["result",6]]],[11,"fmt","term","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","term::terminfo","",3,[[["formatter",3]],["result",6]]],[11,"fmt","term::terminfo::parm","",5,[[["formatter",3]],["result",6]]],[11,"fmt","term","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"description","term::terminfo","",3,[[]]],[11,"cause","","",3,[[],[["option",4],["error",8]]]],[11,"description","term::terminfo::parm","",5,[[]]],[11,"cause","","",5,[[],[["option",4],["error",8]]]],[11,"description","term","",1,[[]]],[11,"cause","","",1,[[],[["option",4],["error",8]]]],[11,"write","term::terminfo","",7,[[],["result",6]]],[11,"flush","","",7,[[],["result",6]]]],"p":[[4,"Attr"],[4,"Error"],[3,"TermInfo"],[4,"Error"],[4,"Param"],[4,"Error"],[3,"Variables"],[3,"TerminfoTerminal"],[8,"Terminal"]]},\
"tiff":{"doc":"Decoding and Encoding of TIFF Images","i":[[3,"InflateError","tiff","Decompression failed due to faulty compressed data.",null,null],[4,"TiffError","","Tiff error kinds.",null,null],[13,"FormatError","","The Image is not formatted properly.",0,null],[13,"UnsupportedError","","The Decoder does not support features required by the image.",0,null],[13,"IoError","","An I/O Error occurred while decoding the image.",0,null],[13,"LimitsExceeded","","The Limits of the Decoder is exceeded.",0,null],[4,"TiffFormatError","","The image is not formatted properly.",null,null],[13,"TiffSignatureNotFound","","",1,null],[13,"TiffSignatureInvalid","","",1,null],[13,"ImageFileDirectoryNotFound","","",1,null],[13,"InconsistentSizesEncountered","","",1,null],[13,"InvalidTag","","",1,null],[13,"RequiredTagNotFound","","",1,null],[13,"UnknownPredictor","","",1,null],[13,"UnsignedIntegerExpected","","",1,null],[13,"SignedIntegerExpected","","",1,null],[13,"InflateError","","",1,null],[4,"TiffUnsupportedError","","The Decoder does not support features required by the image.",null,null],[13,"HorizontalPredictor","","",2,null],[13,"InterpretationWithBits","","",2,null],[13,"UnknownInterpretation","","",2,null],[13,"UnknownCompressionMethod","","",2,null],[13,"UnsupportedCompressionMethod","","",2,null],[13,"UnsupportedSampleDepth","","",2,null],[13,"UnsupportedColorType","","",2,null],[13,"UnsupportedBitsPerChannel","","",2,null],[13,"UnsupportedPlanarConfig","","",2,null],[13,"UnsupportedDataType","","",2,null],[4,"ColorType","","An enumeration over supported color types and their bit…",null,null],[13,"Gray","","Pixel is grayscale",3,null],[13,"RGB","","Pixel contains R, G and B channels",3,null],[13,"Palette","","Pixel is an index into a color palette",3,null],[13,"GrayA","","Pixel is grayscale with an alpha channel",3,null],[13,"RGBA","","Pixel is RGB with an alpha channel",3,null],[13,"CMYK","","Pixel is CMYK",3,null],[0,"decoder","","",null,null],[3,"Limits","tiff::decoder","Decoding limits",null,null],[12,"decoding_buffer_size","","The maximum size of any `DecodingResult` in bytes, the…",4,null],[12,"ifd_value_size","","The maximum size of any ifd value in bytes, the default is…",4,null],[3,"Decoder","","The representation of a TIFF decoder",null,null],[4,"DecodingResult","","Result of a decoding process",null,null],[13,"U8","","A vector of unsigned bytes",5,null],[13,"U16","","A vector of unsigned words",5,null],[4,"DecodingBuffer","","",null,null],[13,"U8","","A slice of unsigned bytes",6,null],[13,"U16","","A slice of unsigned words",6,null],[4,"PhotometricInterpretation","","",null,null],[13,"WhiteIsZero","","",7,null],[13,"BlackIsZero","","",7,null],[13,"RGB","","",7,null],[13,"RGBPalette","","",7,null],[13,"TransparencyMask","","",7,null],[13,"CMYK","","",7,null],[13,"YCbCr","","",7,null],[13,"CIELab","","",7,null],[4,"CompressionMethod","","",null,null],[13,"None","","",8,null],[13,"Huffman","","",8,null],[13,"Fax3","","",8,null],[13,"Fax4","","",8,null],[13,"LZW","","",8,null],[13,"JPEG","","",8,null],[13,"Deflate","","",8,null],[13,"OldDeflate","","",8,null],[13,"PackBits","","",8,null],[4,"PlanarConfiguration","","",null,null],[13,"Chunky","","",9,null],[13,"Planar","","",9,null],[4,"Predictor","","",null,null],[13,"None","","",10,null],[13,"Horizontal","","",10,null],[0,"ifd","","Function for reading TIFF tags",null,null],[3,"Entry","tiff::decoder::ifd","",null,null],[4,"Tag","","TIFF tags",null,null],[13,"Artist","","",11,null],[13,"BitsPerSample","","",11,null],[13,"CellLength","","",11,null],[13,"CellWidth","","",11,null],[13,"ColorMap","","",11,null],[13,"Compression","","",11,null],[13,"Copyright","","",11,null],[13,"DateTime","","",11,null],[13,"ExtraSamples","","",11,null],[13,"FillOrder","","",11,null],[13,"FreeByteCounts","","",11,null],[13,"FreeOffsets","","",11,null],[13,"GrayResponseCurve","","",11,null],[13,"GrayResponseUnit","","",11,null],[13,"HostComputer","","",11,null],[13,"ImageDescription","","",11,null],[13,"ImageLength","","",11,null],[13,"ImageWidth","","",11,null],[13,"Make","","",11,null],[13,"MaxSampleValue","","",11,null],[13,"MinSampleValue","","",11,null],[13,"Model","","",11,null],[13,"NewSubfileType","","",11,null],[13,"Orientation","","",11,null],[13,"PhotometricInterpretation","","",11,null],[13,"PlanarConfiguration","","",11,null],[13,"ResolutionUnit","","",11,null],[13,"RowsPerStrip","","",11,null],[13,"SamplesPerPixel","","",11,null],[13,"Software","","",11,null],[13,"StripByteCounts","","",11,null],[13,"StripOffsets","","",11,null],[13,"SubfileType","","",11,null],[13,"Threshholding","","",11,null],[13,"XResolution","","",11,null],[13,"YResolution","","",11,null],[13,"Predictor","","",11,null],[13,"Unknown","","A private or extension tag",11,null],[4,"Type","","The type of an IFD entry (a 2 byte field).",null,null],[13,"BYTE","","",12,null],[13,"ASCII","","",12,null],[13,"SHORT","","",12,null],[13,"LONG","","",12,null],[13,"RATIONAL","","",12,null],[13,"SBYTE","","",12,null],[13,"SSHORT","","",12,null],[13,"SLONG","","",12,null],[13,"SRATIONAL","","",12,null],[4,"Value","","",null,null],[13,"Signed","","",13,null],[13,"Unsigned","","",13,null],[13,"List","","",13,null],[13,"Rational","","",13,null],[13,"SRational","","",13,null],[13,"Ascii","","",13,null],[6,"Directory","","Type representing an Image File Directory",null,null],[11,"from_u16","","",11,[[]]],[11,"to_u16","","",11,[[]]],[11,"from_u16","","",12,[[],["option",4]]],[11,"to_u16","","",12,[[]]],[11,"into_u32","","",13,[[],["tiffresult",6]]],[11,"into_i32","","",13,[[],["tiffresult",6]]],[11,"into_u32_vec","","",13,[[],[["tiffresult",6],["vec",3]]]],[11,"into_i32_vec","","",13,[[],[["vec",3],["tiffresult",6]]]],[11,"new","","",14,[[["type",4]],["entry",3]]],[11,"val","","",14,[[["limits",3],["decoder",3]],[["tiffresult",6],["value",4]]]],[11,"as_buffer","tiff::decoder","",5,[[],["decodingbuffer",4]]],[11,"from_u16","","",7,[[],["option",4]]],[11,"to_u16","","",7,[[]]],[11,"from_u16","","",8,[[],["option",4]]],[11,"to_u16","","",8,[[]]],[11,"from_u16","","",9,[[],["option",4]]],[11,"to_u16","","",9,[[]]],[11,"from_u16","","",10,[[],["option",4]]],[11,"to_u16","","",10,[[]]],[11,"new","","Create a new decoder that decodes from the stream `r`",15,[[],[["decoder",3],["tiffresult",6]]]],[11,"with_limits","","",15,[[["limits",3]],["decoder",3]]],[11,"dimensions","","",15,[[],["tiffresult",6]]],[11,"colortype","","",15,[[],[["colortype",4],["tiffresult",6]]]],[11,"init","","Initializes the decoder.",15,[[],[["decoder",3],["tiffresult",6]]]],[11,"next_image","","Reads in the next image. If there is no further image in…",15,[[],["tiffresult",6]]],[11,"more_images","","Returns `true` if there is at least one more image…",15,[[]]],[11,"byte_order","","Returns the byte_order",15,[[],["byteorder",4]]],[11,"read_byte","","Reads a TIFF byte value",15,[[],[["result",4],["error",3]]]],[11,"read_short","","Reads a TIFF short value",15,[[],[["result",4],["error",3]]]],[11,"read_sshort","","Reads a TIFF sshort value",15,[[],[["error",3],["result",4]]]],[11,"read_long","","Reads a TIFF long value",15,[[],[["result",4],["error",3]]]],[11,"read_slong","","Reads a TIFF slong value",15,[[],[["error",3],["result",4]]]],[11,"read_string","","Reads a string",15,[[],[["string",3],["tiffresult",6]]]],[11,"read_offset","","Reads a TIFF IFA offset/value field",15,[[],[["result",4],["error",3]]]],[11,"goto_offset","","Moves the cursor to the specified offset",15,[[],["result",6]]],[11,"find_tag","","Tries to retrieve a tag. Return `Ok(None)` if the tag is…",15,[[["tag",4]],[["tiffresult",6],["option",4]]]],[11,"find_tag_u32","","Tries to retrieve a tag and convert it to the desired type.",15,[[["tag",4]],[["option",4],["tiffresult",6]]]],[11,"find_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired type.",15,[[["tag",4]],[["tiffresult",6],["option",4]]]],[11,"get_tag","","Tries to retrieve a tag. Returns an error if the tag is…",15,[[["tag",4]],[["tiffresult",6],["value",4]]]],[11,"get_tag_u32","","Tries to retrieve a tag and convert it to the desired type.",15,[[["tag",4]],["tiffresult",6]]],[11,"get_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired type.",15,[[["tag",4]],[["tiffresult",6],["vec",3]]]],[11,"strip_count","","Number of strips in image",15,[[],["tiffresult",6]]],[11,"read_strip_to_buffer","","",15,[[["decodingbuffer",4]],["tiffresult",6]]],[11,"read_strip","","Read a single strip from the image and return it as a Vector",15,[[],[["tiffresult",6],["decodingresult",4]]]],[11,"read_image","","Decodes the entire image and return it as a Vector",15,[[],[["tiffresult",6],["decodingresult",4]]]],[0,"encoder","tiff","",null,null],[3,"Rational","tiff::encoder","Type to represent tiff values of type `RATIONAL`",null,null],[12,"n","","",16,null],[12,"d","","",16,null],[3,"SRational","","Type to represent tiff values of type `SRATIONAL`",null,null],[12,"n","","",17,null],[12,"d","","",17,null],[3,"TiffEncoder","","Tiff encoder.",null,null],[3,"DirectoryEncoder","","Low level interface to encode ifd directories.",null,null],[3,"ImageEncoder","","Type to encode images strip by strip.",null,null],[4,"ResolutionUnit","","Type to represent resolution units",null,null],[13,"None","","",18,null],[13,"Inch","","",18,null],[13,"Centimeter","","",18,null],[0,"colortype","","",null,null],[3,"Gray8","tiff::encoder::colortype","",null,null],[3,"Gray16","","",null,null],[3,"RGB8","","",null,null],[3,"RGB16","","",null,null],[3,"RGBA8","","",null,null],[3,"RGBA16","","",null,null],[3,"CMYK8","","",null,null],[8,"ColorType","","Trait for different colortypes that can be encoded.",null,null],[16,"Inner","","The type of each sample of this colortype",19,null],[18,"TIFF_VALUE","","The value of the tiff tag `PhotometricInterpretation`",19,null],[18,"BITS_PER_SAMPLE","","The value of the tiff tag `BitsPerSample`",19,null],[8,"TiffValue","tiff::encoder","Trait for types that can be encoded in a tiff file",null,null],[18,"BYTE_LEN","","",20,null],[18,"FIELD_TYPE","","",20,null],[10,"count","","",20,[[]]],[11,"bytes","","",20,[[]]],[10,"write","","",20,[[["tiffwriter",3]],["tiffresult",6]]],[11,"new","","",21,[[],[["tiffresult",6],["tiffencoder",3]]]],[11,"new_directory","","Create a `DirectoryEncoder` to encode an ifd directory.",21,[[],[["tiffresult",6],["directoryencoder",3]]]],[11,"new_image","","Create an \'ImageEncoder\' to encode an image one slice at a…",21,[[],[["tiffresult",6],["imageencoder",3]]]],[11,"write_image","","Convenience function to write an entire image from memory.",21,[[],["tiffresult",6]]],[11,"write_tag","","Write a single ifd tag.",22,[[["tag",4],["tiffvalue",8]]]],[11,"write_data","","Write some data to the tiff file, the offset of the data…",22,[[["tiffvalue",8]],["tiffresult",6]]],[11,"finish","","Write out the ifd directory.",22,[[],["tiffresult",6]]],[11,"next_strip_sample_count","","Number of samples the next strip should have.",23,[[]]],[11,"write_strip","","Write a single strip.",23,[[],["tiffresult",6]]],[11,"resolution","","Set image resolution",23,[[["rational",3],["resolutionunit",4]]]],[11,"resolution_unit","","Set image resolution unit",23,[[["resolutionunit",4]]]],[11,"x_resolution","","Set image x-resolution",23,[[["rational",3]]]],[11,"y_resolution","","Set image y-resolution",23,[[["rational",3]]]],[11,"encoder","","Get a reference of the underlying `DirectoryEncoder`",23,[[],["directoryencoder",3]]],[11,"finish","","Write out image and ifd directory.",23,[[],["tiffresult",6]]],[6,"TiffResult","tiff","Result of an image decoding/encoding process",null,null],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","tiff::decoder","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","tiff::decoder::ifd","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","tiff::encoder","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","tiff::encoder::colortype","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"count","tiff::encoder","",16,[[]]],[11,"write","","",16,[[["tiffwriter",3]],["tiffresult",6]]],[11,"count","","",17,[[]]],[11,"write","","",17,[[["tiffwriter",3]],["tiffresult",6]]],[11,"drop","","",22,[[]]],[11,"drop","","",23,[[]]],[11,"from","tiff","",0,[[["error",3]],["tifferror",4]]],[11,"from","","",0,[[["fromutf8error",3]],["tifferror",4]]],[11,"clone","tiff::decoder::ifd","",11,[[],["tag",4]]],[11,"clone","","",12,[[],["type",4]]],[11,"clone","","",13,[[],["value",4]]],[11,"clone","","",14,[[],["entry",3]]],[11,"clone","tiff::decoder","",7,[[],["photometricinterpretation",4]]],[11,"clone","","",8,[[],["compressionmethod",4]]],[11,"clone","","",9,[[],["planarconfiguration",4]]],[11,"clone","","",10,[[],["predictor",4]]],[11,"clone","","",4,[[],["limits",3]]],[11,"clone","tiff::encoder","",16,[[],["rational",3]]],[11,"clone","tiff","",1,[[],["tiffformaterror",4]]],[11,"clone","","",24,[[],["inflateerror",3]]],[11,"clone","","",2,[[],["tiffunsupportederror",4]]],[11,"clone","","",3,[[],["colortype",4]]],[11,"default","tiff::decoder","",4,[[],["limits",3]]],[11,"eq","tiff::decoder::ifd","",11,[[["tag",4]]]],[11,"ne","","",11,[[["tag",4]]]],[11,"eq","","",12,[[["type",4]]]],[11,"eq","","",13,[[["value",4]]]],[11,"ne","","",13,[[["value",4]]]],[11,"eq","tiff::decoder","",7,[[["photometricinterpretation",4]]]],[11,"eq","","",8,[[["compressionmethod",4]]]],[11,"eq","","",9,[[["planarconfiguration",4]]]],[11,"eq","","",10,[[["predictor",4]]]],[11,"eq","tiff","",1,[[["tiffformaterror",4]]]],[11,"ne","","",1,[[["tiffformaterror",4]]]],[11,"eq","","",24,[[["inflateerror",3]]]],[11,"ne","","",24,[[["inflateerror",3]]]],[11,"eq","","",2,[[["tiffunsupportederror",4]]]],[11,"ne","","",2,[[["tiffunsupportederror",4]]]],[11,"eq","","",3,[[["colortype",4]]]],[11,"ne","","",3,[[["colortype",4]]]],[11,"fmt","tiff::decoder::ifd","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","tiff::decoder","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","tiff","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","tiff::decoder::ifd","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","tiff::decoder","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","tiff","",1,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"description","","",0,[[]]],[11,"cause","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"TiffError"],[4,"TiffFormatError"],[4,"TiffUnsupportedError"],[4,"ColorType"],[3,"Limits"],[4,"DecodingResult"],[4,"DecodingBuffer"],[4,"PhotometricInterpretation"],[4,"CompressionMethod"],[4,"PlanarConfiguration"],[4,"Predictor"],[4,"Tag"],[4,"Type"],[4,"Value"],[3,"Entry"],[3,"Decoder"],[3,"Rational"],[3,"SRational"],[4,"ResolutionUnit"],[8,"ColorType"],[8,"TiffValue"],[3,"TiffEncoder"],[3,"DirectoryEncoder"],[3,"ImageEncoder"],[3,"InflateError"],[3,"Gray8"],[3,"Gray16"],[3,"RGB8"],[3,"RGB16"],[3,"RGBA8"],[3,"RGBA16"],[3,"CMYK8"]]},\
"time":{"doc":"Simple time handling.","i":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a…",null,null],[3,"Timespec","","A record specifying a time value in seconds and…",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its…",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this…",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements…",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format…",null,[[],[["tm",3],["parseerror",4],["result",4]]]],[5,"get_time","","Returns the current time as a `timespec` containing the…",null,[[],["timespec",3]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance…",null,[[]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance…",null,[[]]],[5,"tzset","","",null,[[]]],[5,"empty_tm","","",null,[[],["tm",3]]],[5,"at_utc","","Returns the specified time in UTC",null,[[["timespec",3]],["tm",3]]],[5,"now_utc","","Returns the current time in UTC",null,[[],["tm",3]]],[5,"at","","Returns the specified time in the local timezone",null,[[["timespec",3]],["tm",3]]],[5,"now","","Returns the current time in the local timezone",null,[[],["tm",3]]],[5,"strftime","","Formats the time according to the format string.",null,[[["tm",3]],[["string",3],["parseerror",4],["result",4]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",3,[[],["duration",3]]],[11,"days","","Makes a new `Duration` with given number of days.…",3,[[],["duration",3]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",3,[[],["duration",3]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",3,[[],["duration",3]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",3,[[],["duration",3]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",3,[[],["duration",3]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",3,[[],["duration",3]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",3,[[],["duration",3]]],[11,"span","","Runs a closure, returning the duration of time it took to…",3,[[],["duration",3]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",3,[[]]],[11,"num_days","","Returns the total number of whole days in the duration.",3,[[]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",3,[[]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",3,[[]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",3,[[]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",3,[[]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",3,[[],["option",4]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",3,[[],["option",4]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",3,[[["duration",3]],[["option",4],["duration",3]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",3,[[["duration",3]],[["option",4],["duration",3]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],["duration",3]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],["duration",3]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",3,[[],["duration",3]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",3,[[]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",3,[[["stdduration",3]],[["result",4],["outofrangeerror",3],["duration",3]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",3,[[],[["stdduration",3],["outofrangeerror",3],["result",4]]]],[11,"new","","",0,[[],["timespec",3]]],[11,"now","","Returns a `PreciseTime` representing the current moment in…",4,[[],["precisetime",3]]],[11,"to","","Returns a `Duration` representing the span of time from…",4,[[["precisetime",3]],["duration",3]]],[11,"now","","Returns a `SteadyTime` representing the current moment in…",5,[[],["steadytime",3]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[],["timespec",3]]],[11,"to_local","","Convert time to the local timezone",1,[[],["tm",3]]],[11,"to_utc","","Convert time to the UTC",1,[[],["tm",3]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[],["tmfmt",3]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[],["tmfmt",3]]],[11,"strftime","","Formats the time according to the format string.",1,[[],[["result",4],["parseerror",4],["tmfmt",3]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[],["tmfmt",3]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with…",1,[[],["tmfmt",3]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[],["tmfmt",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",3,[[],["duration",3]]],[11,"clone","","",6,[[],["outofrangeerror",3]]],[11,"clone","","",0,[[],["timespec",3]]],[11,"clone","","",4,[[],["precisetime",3]]],[11,"clone","","",5,[[],["steadytime",3]]],[11,"clone","","",1,[[],["tm",3]]],[11,"clone","","",2,[[],["parseerror",4]]],[11,"cmp","","",3,[[["duration",3]],["ordering",4]]],[11,"cmp","","",0,[[["timespec",3]],["ordering",4]]],[11,"cmp","","",5,[[["steadytime",3]],["ordering",4]]],[11,"cmp","","",1,[[["tm",3]],["ordering",4]]],[11,"eq","","",3,[[["duration",3]]]],[11,"ne","","",3,[[["duration",3]]]],[11,"eq","","",6,[[["outofrangeerror",3]]]],[11,"ne","","",6,[[["outofrangeerror",3]]]],[11,"eq","","",0,[[["timespec",3]]]],[11,"ne","","",0,[[["timespec",3]]]],[11,"eq","","",5,[[["steadytime",3]]]],[11,"ne","","",5,[[["steadytime",3]]]],[11,"eq","","",1,[[["tm",3]]]],[11,"ne","","",1,[[["tm",3]]]],[11,"eq","","",2,[[["parseerror",4]]]],[11,"ne","","",2,[[["parseerror",4]]]],[11,"partial_cmp","","",3,[[["duration",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["duration",3]]]],[11,"le","","",3,[[["duration",3]]]],[11,"gt","","",3,[[["duration",3]]]],[11,"ge","","",3,[[["duration",3]]]],[11,"partial_cmp","","",0,[[["timespec",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["timespec",3]]]],[11,"le","","",0,[[["timespec",3]]]],[11,"gt","","",0,[[["timespec",3]]]],[11,"ge","","",0,[[["timespec",3]]]],[11,"partial_cmp","","",5,[[["steadytime",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["steadytime",3]]]],[11,"le","","",5,[[["steadytime",3]]]],[11,"gt","","",5,[[["steadytime",3]]]],[11,"ge","","",5,[[["steadytime",3]]]],[11,"partial_cmp","","",1,[[["tm",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"div","","",3,[[],["duration",3]]],[11,"sub","","",3,[[["duration",3]],["duration",3]]],[11,"sub","","",0,[[["duration",3]],["timespec",3]]],[11,"sub","","",0,[[["timespec",3]],["duration",3]]],[11,"sub","","",5,[[["steadytime",3]],["duration",3]]],[11,"sub","","",5,[[["duration",3]],["steadytime",3]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["duration",3]],["tm",3]]],[11,"sub","","",1,[[["tm",3]],["duration",3]]],[11,"add","","",3,[[["duration",3]],["duration",3]]],[11,"add","","",0,[[["duration",3]],["timespec",3]]],[11,"add","","",5,[[["duration",3]],["steadytime",3]]],[11,"add","","The resulting Tm is in UTC.",1,[[["duration",3]],["tm",3]]],[11,"mul","","",3,[[],["duration",3]]],[11,"neg","","",3,[[],["duration",3]]],[11,"hash","","",3,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"description","","",6,[[]]],[11,"description","","",2,[[]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"OutOfRangeError"],[3,"TmFmt"]]},\
"unicode_xid":{"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[]]]],"p":[[8,"UnicodeXID"]]},\
"uuid":{"doc":"Generate and parse UUIDs.","i":[[3,"Builder","uuid","A builder struct for creating a UUID.",null,null],[3,"Error","","A general error that can occur when working with UUIDs.",null,null],[3,"Uuid","","A Universally Unique Identifier (UUID).",null,null],[4,"Version","","The version of the UUID, denoting the generating algorithm.",null,null],[13,"Nil","","Special case for `nil` UUID.",0,null],[13,"Mac","","Version 1: MAC address.",0,null],[13,"Dce","","Version 2: DCE Security.",0,null],[13,"Md5","","Version 3: MD5 hash.",0,null],[13,"Random","","Version 4: Random.",0,null],[13,"Sha1","","Version 5: SHA-1 hash.",0,null],[4,"Variant","","The reserved variants of UUIDs.",null,null],[13,"NCS","","Reserved by the NCS for backward compatibility.",1,null],[13,"RFC4122","","As described in the RFC4122 Specification (default).",1,null],[13,"Microsoft","","Reserved by Microsoft for backward compatibility.",1,null],[13,"Future","","Reserved for future expansion.",1,null],[11,"nil","","The \'nil UUID\'.",2,[[]]],[11,"from_fields","","Creates a UUID from four field values in big-endian order.",2,[[],[["result",4],["uuid",3],["error",3]]]],[11,"from_fields_le","","Creates a UUID from four field values in little-endian…",2,[[],[["result",4],["uuid",3],["error",3]]]],[11,"from_u128","","Creates a UUID from a 128bit value in big-endian order.",2,[[]]],[11,"from_u128_le","","Creates a UUID from a 128bit value in little-endian order.",2,[[]]],[11,"from_slice","","Creates a UUID using the supplied big-endian bytes.",2,[[],[["result",4],["uuid",3],["error",3]]]],[11,"from_bytes","","Creates a UUID using the supplied big-endian bytes.",2,[[["bytes",6]],["uuid",3]]],[11,"from_bytes","","Creates a `Builder` using the supplied big-endian bytes.",3,[[["bytes",6]]]],[11,"from_slice","","Creates a `Builder` using the supplied big-endian bytes.",3,[[],[["error",3],["result",4]]]],[11,"from_fields","","Creates a `Builder` from four big-endian field values.",3,[[],[["error",3],["result",4]]]],[11,"from_u128","","Creates a `Builder` from a big-endian 128bit value.",3,[[]]],[11,"nil","","Creates a `Builder` with an initial [`Uuid::nil`].",3,[[]]],[11,"set_variant","","Specifies the variant of the UUID.",3,[[["variant",4]]]],[11,"set_version","","Specifies the version number of the UUID.",3,[[["version",4]]]],[11,"build","","Hands over the internal constructed `Uuid`.",3,[[],["uuid",3]]],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with…",2,[[],[["result",4],["uuid",3],["error",3]]]],[0,"adapter","","Adapters for various formats for UUIDs",null,null],[3,"Hyphenated","uuid::adapter","An adaptor for formatting an `Uuid` as a hyphenated string.",null,null],[3,"HyphenatedRef","","An adaptor for formatting an `Uuid` as a hyphenated string.",null,null],[3,"Simple","","An adaptor for formatting an `Uuid` as a simple string.",null,null],[3,"SimpleRef","","An adaptor for formatting an `Uuid` as a simple string.",null,null],[3,"Urn","","An adaptor for formatting an `Uuid` as a URN string.",null,null],[3,"UrnRef","","An adaptor for formatting an `Uuid` as a URN string.",null,null],[11,"to_hyphenated","uuid","Get a `Hyphenated` formatter.",2,[[],["hyphenated",3]]],[11,"to_hyphenated_ref","","Get a borrowed `HyphenatedRef` formatter.",2,[[],["hyphenatedref",3]]],[11,"to_simple","","Get a `Simple` formatter.",2,[[],["simple",3]]],[11,"to_simple_ref","","Get a borrowed `SimpleRef` formatter.",2,[[],["simpleref",3]]],[11,"to_urn","","Get a `Urn` formatter.",2,[[],["urn",3]]],[11,"to_urn_ref","","Get a borrowed `UrnRef` formatter.",2,[[],["urnref",3]]],[18,"LENGTH","uuid::adapter","The length of a hyphenated `Uuid` string.",4,null],[11,"from_uuid","","Creates a `Hyphenated` from a `Uuid`.",4,[[["uuid",3]]]],[11,"encode_lower","","Writes the `Uuid` as a lower-case hyphenated string to…",4,[[]]],[11,"encode_upper","","Writes the `Uuid` as an upper-case hyphenated string to…",4,[[]]],[18,"LENGTH","","The length of a hyphenated `Uuid` string.",5,null],[11,"from_uuid_ref","","Creates a `HyphenatedRef` from a `Uuid` reference.",5,[[["uuid",3]]]],[11,"encode_lower","","Writes the `Uuid` as a lower-case hyphenated string to…",5,[[]]],[11,"encode_upper","","Writes the `Uuid` as an upper-case hyphenated string to…",5,[[]]],[18,"LENGTH","","The length of a simple `Uuid` string.",6,null],[11,"from_uuid","","Creates a `Simple` from a `Uuid`.",6,[[["uuid",3]]]],[11,"encode_lower","","Writes the `Uuid` as a lower-case simple string to…",6,[[]]],[11,"encode_upper","","Writes the `Uuid` as an upper-case simple string to…",6,[[]]],[18,"LENGTH","","The length of a simple `Uuid` string.",7,null],[11,"from_uuid_ref","","Creates a `SimpleRef` from a `Uuid` reference.",7,[[["uuid",3]]]],[11,"encode_lower","","Writes the `Uuid` as a lower-case simple string to…",7,[[]]],[11,"encode_upper","","Writes the `Uuid` as an upper-case simple string to…",7,[[]]],[18,"LENGTH","","The length of a URN `Uuid` string.",8,null],[11,"from_uuid","","Creates a `Urn` from a `Uuid`.",8,[[["uuid",3]]]],[11,"encode_lower","","Writes the `Uuid` as a lower-case URN string to `buffer`,…",8,[[]]],[11,"encode_upper","","Writes the `Uuid` as an upper-case URN string to `buffer`,…",8,[[]]],[18,"LENGTH","","The length of a URN `Uuid` string.",9,null],[11,"from_uuid_ref","","Creates a `UrnRef` from a `Uuid` reference.",9,[[["uuid",3]]]],[11,"encode_lower","","Writes the `Uuid` as a lower-case URN string to `buffer`,…",9,[[]]],[11,"encode_upper","","Writes the `Uuid` as an upper-case URN string to `buffer`,…",9,[[]]],[6,"Bytes","uuid","A 128-bit (16 byte) buffer containing the ID.",null,null],[18,"NAMESPACE_DNS","","UUID namespace for Domain Name System (DNS).",2,null],[18,"NAMESPACE_OID","","UUID namespace for ISO Object Identifiers (OIDs).",2,null],[18,"NAMESPACE_URL","","UUID namespace for Uniform Resource Locators (URLs).",2,null],[18,"NAMESPACE_X500","","UUID namespace for X.500 Distinguished Names (DNs).",2,null],[11,"get_variant","","Returns the variant of the UUID structure.",2,[[],[["option",4],["variant",4]]]],[11,"get_version_num","","Returns the version number of the UUID.",2,[[]]],[11,"get_version","","Returns the version of the UUID.",2,[[],[["version",4],["option",4]]]],[11,"as_fields","","Returns the four field values of the UUID in big-endian…",2,[[]]],[11,"to_fields_le","","Returns the four field values of the UUID in little-endian…",2,[[]]],[11,"as_u128","","Returns a 128bit value containing the UUID data.",2,[[]]],[11,"to_u128_le","","Returns a 128bit little-endian value containing the UUID…",2,[[]]],[11,"as_bytes","","Returns an array of 16 octets containing the UUID data.",2,[[],["bytes",6]]],[11,"is_nil","","Tests if the UUID is nil.",2,[[]]],[11,"encode_buffer","","A buffer that can be used for `encode_...` calls, that is…",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","uuid::adapter","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"from","","",4,[[["uuid",3]]]],[11,"from","","",5,[[["uuid",3]]]],[11,"from","","",6,[[["uuid",3]]]],[11,"from","","",7,[[["uuid",3]]]],[11,"from","","",8,[[["uuid",3]]]],[11,"from","","",9,[[["uuid",3]]]],[11,"fmt","uuid","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","uuid::adapter","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","uuid","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","uuid::adapter","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","uuid","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",10,[[["error",3]]]],[11,"ne","","",10,[[["error",3]]]],[11,"eq","uuid::adapter","",4,[[["hyphenated",3]]]],[11,"ne","","",4,[[["hyphenated",3]]]],[11,"eq","","",5,[[["hyphenatedref",3]]]],[11,"ne","","",5,[[["hyphenatedref",3]]]],[11,"eq","","",6,[[["simple",3]]]],[11,"ne","","",6,[[["simple",3]]]],[11,"eq","","",7,[[["simpleref",3]]]],[11,"ne","","",7,[[["simpleref",3]]]],[11,"eq","","",8,[[["urn",3]]]],[11,"ne","","",8,[[["urn",3]]]],[11,"eq","","",9,[[["urnref",3]]]],[11,"ne","","",9,[[["urnref",3]]]],[11,"eq","uuid","",0,[[["version",4]]]],[11,"eq","","",1,[[["variant",4]]]],[11,"eq","","",2,[[["uuid",3]]]],[11,"ne","","",2,[[["uuid",3]]]],[11,"cmp","uuid::adapter","",4,[[["hyphenated",3]],["ordering",4]]],[11,"cmp","","",5,[[["hyphenatedref",3]],["ordering",4]]],[11,"cmp","","",6,[[["simple",3]],["ordering",4]]],[11,"cmp","","",7,[[["simpleref",3]],["ordering",4]]],[11,"cmp","","",8,[[["urn",3]],["ordering",4]]],[11,"cmp","","",9,[[["urnref",3]],["ordering",4]]],[11,"cmp","uuid","",2,[[["uuid",3]],["ordering",4]]],[11,"partial_cmp","uuid::adapter","",4,[[["hyphenated",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["hyphenated",3]]]],[11,"le","","",4,[[["hyphenated",3]]]],[11,"gt","","",4,[[["hyphenated",3]]]],[11,"ge","","",4,[[["hyphenated",3]]]],[11,"partial_cmp","","",5,[[["hyphenatedref",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["hyphenatedref",3]]]],[11,"le","","",5,[[["hyphenatedref",3]]]],[11,"gt","","",5,[[["hyphenatedref",3]]]],[11,"ge","","",5,[[["hyphenatedref",3]]]],[11,"partial_cmp","","",6,[[["simple",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["simple",3]]]],[11,"le","","",6,[[["simple",3]]]],[11,"gt","","",6,[[["simple",3]]]],[11,"ge","","",6,[[["simple",3]]]],[11,"partial_cmp","","",7,[[["simpleref",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["simpleref",3]]]],[11,"le","","",7,[[["simpleref",3]]]],[11,"gt","","",7,[[["simpleref",3]]]],[11,"ge","","",7,[[["simpleref",3]]]],[11,"partial_cmp","","",8,[[["urn",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["urn",3]]]],[11,"le","","",8,[[["urn",3]]]],[11,"gt","","",8,[[["urn",3]]]],[11,"ge","","",8,[[["urn",3]]]],[11,"partial_cmp","","",9,[[["urnref",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["urnref",3]]]],[11,"le","","",9,[[["urnref",3]]]],[11,"gt","","",9,[[["urnref",3]]]],[11,"ge","","",9,[[["urnref",3]]]],[11,"partial_cmp","uuid","",2,[[["uuid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["uuid",3]]]],[11,"le","","",2,[[["uuid",3]]]],[11,"gt","","",2,[[["uuid",3]]]],[11,"ge","","",2,[[["uuid",3]]]],[11,"hash","","",10,[[]]],[11,"hash","uuid::adapter","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","uuid","",2,[[]]],[11,"from_str","","",2,[[],["result",4]]],[11,"fmt","uuid::adapter","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","uuid","",2,[[["formatter",3]],["result",6]]],[11,"fmt","uuid::adapter","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","uuid","",2,[[["formatter",3]],["result",6]]],[11,"clone","","",10,[[],["error",3]]],[11,"clone","uuid::adapter","",4,[[],["hyphenated",3]]],[11,"clone","","",5,[[],["hyphenatedref",3]]],[11,"clone","","",6,[[],["simple",3]]],[11,"clone","","",7,[[],["simpleref",3]]],[11,"clone","","",8,[[],["urn",3]]],[11,"clone","","",9,[[],["urnref",3]]],[11,"clone","uuid","",0,[[],["version",4]]],[11,"clone","","",1,[[],["variant",4]]],[11,"clone","","",2,[[],["uuid",3]]],[11,"default","uuid::adapter","",4,[[],["hyphenated",3]]],[11,"default","","",6,[[],["simple",3]]],[11,"default","","",8,[[],["urn",3]]],[11,"default","uuid","",2,[[]]],[11,"source","","",10,[[],[["option",4],["error",8]]]]],"p":[[4,"Version"],[4,"Variant"],[3,"Uuid"],[3,"Builder"],[3,"Hyphenated"],[3,"HyphenatedRef"],[3,"Simple"],[3,"SimpleRef"],[3,"Urn"],[3,"UrnRef"],[3,"Error"]]},\
"wld":{"doc":"`wld` is a library which will read and write Terraria…","i":[[5,"parse_world","wld","Instantiate a [`World`] from a slice of bytes.",null,[[],[["world",3],["result",4],["box",3]]]],[5,"enable_logger","","Enable logging for this crate given [`log::LevelFilter`]…",null,[[["levelfilter",4]]]],[0,"constants","","",null,null],[3,"BLOCKTYPE_COLOR_MAP","wld::constants","",null,null],[3,"WALLTYPE_COLOR_MAP","","",null,null],[3,"PAINT_COLOR_MAP","","",null,null],[17,"ABBEY","","",null,null],[17,"AFFAIR","","",null,null],[17,"ALIZARIN_CRIMSON","","",null,null],[17,"AMETHYST_SMOKE","","",null,null],[17,"AMULET","","",null,null],[17,"ANTIQUE_BRASS","","",null,null],[17,"APPLE","","",null,null],[17,"ARMADILLO","","",null,null],[17,"ASH","","",null,null],[17,"ASTRONAUT","","",null,null],[17,"ATHENS_GRAY","","",null,null],[17,"ATLANTIS","","",null,null],[17,"AUBERGINE","","",null,null],[17,"AU_CHICO","","",null,null],[17,"AVOCADO","","",null,null],[17,"AXOLOTL","","",null,null],[17,"AZURE","","",null,null],[17,"AZURE_RADIANCE","","",null,null],[17,"BABY_BLUE","","",null,null],[17,"BALI_HAI","","",null,null],[17,"BALTIC_SEA","","",null,null],[17,"BASTILLE","","",null,null],[17,"BEAVER","","",null,null],[17,"BIG_STONE","","",null,null],[17,"BISCAY","","",null,null],[17,"BISTRE","","",null,null],[17,"BIZARRE","","",null,null],[17,"BLACK","","",null,null],[17,"BLACK_MARLIN","","",null,null],[17,"BLACK_ROSE","","",null,null],[17,"BLEACHED_CEDAR","","",null,null],[17,"BLUE","","",null,null],[17,"BLUE_BELL","","",null,null],[17,"BLUE_DIANNE","","",null,null],[17,"BLUE_RIBBON","","",null,null],[17,"BLUE_ZODIAC","","",null,null],[17,"BLUSH_PINK","","",null,null],[17,"BOSSANOVA","","",null,null],[17,"BOULDER","","",null,null],[17,"BREAKER_BAY","","",null,null],[17,"BRIGHT_GRAY","","",null,null],[17,"BRIGHT_GREEN","","",null,null],[17,"BRIGHT_SUN","","",null,null],[17,"BRONZETONE","","",null,null],[17,"BROOM","","",null,null],[17,"BUCCANEER","","",null,null],[17,"BUD","","",null,null],[17,"BURNT_SIENNA","","",null,null],[17,"BUTTERFLY_BUSH","","",null,null],[17,"CABBAGE_PONT","","",null,null],[17,"CADILLAC","","",null,null],[17,"CALIFORNIA","","",null,null],[17,"CAMARONE","","",null,null],[17,"CAPE_COD","","",null,null],[17,"CAPE_PALLISER","","",null,null],[17,"CARNATION","","",null,null],[17,"CASPER","","",null,null],[17,"CASTRO","","",null,null],[17,"CEDAR","","",null,null],[17,"CERULEAN_BLUE","","",null,null],[17,"CHARTREUSE","","",null,null],[17,"CHATEAU_GREEN","","",null,null],[17,"CHATELLE","","",null,null],[17,"CHENIN","","",null,null],[17,"CHERRYWOOD","","",null,null],[17,"CHETWODE_BLUE","","",null,null],[17,"CHOCOLATE","","",null,null],[17,"CHRISTI","","",null,null],[17,"CINNABAR","","",null,null],[17,"CLAIRVOYANT","","",null,null],[17,"CLARET","","",null,null],[17,"CLASSIC_ROSE","","",null,null],[17,"CLAY_CREEK","","",null,null],[17,"CLOVER","","",null,null],[17,"COCOA_BROWN","","",null,null],[17,"COD_GRAY","","",null,null],[17,"COMET","","",null,null],[17,"CONGO_BROWN","","",null,null],[17,"CONIFER","","",null,null],[17,"COPPER_CANYON","","",null,null],[17,"COPPER_RUST","","",null,null],[17,"CORDUROY","","",null,null],[17,"CORK","","",null,null],[17,"CORNFLOWER","","",null,null],[17,"COUNTY_GREEN","","",null,null],[17,"CRAIL","","",null,null],[17,"CRANBERRY","","",null,null],[17,"CRATER_BROWN","","",null,null],[17,"CROWN_OF_THORNS","","",null,null],[17,"CUMIN","","",null,null],[17,"CURIOUS_BLUE","","",null,null],[17,"CYAN_AQUA","","",null,null],[17,"DAISY_BUSH","","",null,null],[17,"DALLAS","","",null,null],[17,"DANDELION","","",null,null],[17,"DANUBE","","",null,null],[17,"DARK_BLUE","","",null,null],[17,"DARK_FERN","","",null,null],[17,"DEEP_CERULEAN","","",null,null],[17,"DINGLEY","","",null,null],[17,"DIXIE","","",null,null],[17,"DODGER_BLUE","","",null,null],[17,"DOLPHIN","","",null,null],[17,"DON_JUAN","","",null,null],[17,"DORADO","","",null,null],[17,"DRIFTWOOD","","",null,null],[17,"DULL_LAVENDER","","",null,null],[17,"DUNE","","",null,null],[17,"EASTERN_BLUE","","",null,null],[17,"EAST_BAY","","",null,null],[17,"EAST_SIDE","","",null,null],[17,"EBONY_CLAY","","",null,null],[17,"EDWARD","","",null,null],[17,"EGGPLANT","","",null,null],[17,"ELECTRIC_VIOLET","","",null,null],[17,"EL_SALVA","","",null,null],[17,"EMERALD","","",null,null],[17,"EQUATOR","","",null,null],[17,"FIORD","","",null,null],[17,"FLAMENCO","","",null,null],[17,"FLAMINGO","","",null,null],[17,"FLUSH_MAHOGANY","","",null,null],[17,"FLUSH_ORANGE","","",null,null],[17,"FRENCH_ROSE","","",null,null],[17,"FRIAR_GRAY","","",null,null],[17,"FUSCOUS_GRAY","","",null,null],[17,"GALLIANO","","",null,null],[17,"GEYSER","","",null,null],[17,"GLACIER","","",null,null],[17,"GOLDENROD","","",null,null],[17,"GOLDEN_DREAM","","",null,null],[17,"GOLDEN_FIZZ","","",null,null],[17,"GOLDEN_SAND","","",null,null],[17,"GOLDEN_TAINOI","","",null,null],[17,"GOLD_TIPS","","",null,null],[17,"GOVERNOR_BAY","","",null,null],[17,"GO_BEN","","",null,null],[17,"GRANNY_SMITH","","",null,null],[17,"GRAPE","","",null,null],[17,"GRAVEL","","",null,null],[17,"GRAY","","",null,null],[17,"GREEN","","",null,null],[17,"GREEN_HOUSE","","",null,null],[17,"GREEN_LEAF","","",null,null],[17,"GUNSMOKE","","",null,null],[17,"GUN_POWDER","","",null,null],[17,"GURKHA","","",null,null],[17,"HACIENDA","","",null,null],[17,"HAITI","","",null,null],[17,"HALF_BAKED","","",null,null],[17,"HAMPTON","","",null,null],[17,"HEATH","","",null,null],[17,"HEAVY_METAL","","",null,null],[17,"HORIZON","","",null,null],[17,"HOT_PINK","","",null,null],[17,"HUSK","","",null,null],[17,"INDIAN_KHAKI","","",null,null],[17,"IROKO","","",null,null],[17,"IRONSTONE","","",null,null],[17,"JACARTA","","",null,null],[17,"JAFFA","","",null,null],[17,"JAMBALAYA","","",null,null],[17,"JAZZBERRY_JAM","","",null,null],[17,"JET_STREAM","","",null,null],[17,"JEWEL","","",null,null],[17,"JON","","",null,null],[17,"JUNGLE_GREEN","","",null,null],[17,"KABUL","","",null,null],[17,"KASHMIR_BLUE","","",null,null],[17,"KELP","","",null,null],[17,"KIMBERLY","","",null,null],[17,"KOURNIKOVA","","",null,null],[17,"LAVENDER_MAGENTA","","",null,null],[17,"LAVENDER_PURPLE","","",null,null],[17,"LAVENDER_ROSE","","",null,null],[17,"LEATHER","","",null,null],[17,"LIMA","","",null,null],[17,"LISBON_BROWN","","",null,null],[17,"LIVID_BROWN","","",null,null],[17,"LOG_CABIN","","",null,null],[17,"LONESTAR","","",null,null],[17,"LUXOR_GOLD","","",null,null],[17,"MABEL","","",null,null],[17,"MACARONI_AND_CHEESE","","",null,null],[17,"MADISON","","",null,null],[17,"MADRAS","","",null,null],[17,"MAGENTA_FUCHSIA","","",null,null],[17,"MALACHITE","","",null,null],[17,"MALIBU","","",null,null],[17,"MAMBA","","",null,null],[17,"MANDALAY","","",null,null],[17,"MARINER","","",null,null],[17,"MAROON_FLUSH","","",null,null],[17,"MARTINIQUE","","",null,null],[17,"MASALA","","",null,null],[17,"MATISSE","","",null,null],[17,"MATTERHORN","","",null,null],[17,"MAUVELOUS","","",null,null],[17,"MEDIUM_CARMINE","","",null,null],[17,"MEDIUM_PURPLE","","",null,null],[17,"MELANIE","","",null,null],[17,"MERLOT","","",null,null],[17,"METALLIC_BRONZE","","",null,null],[17,"METEORITE","","",null,null],[17,"MILLBROOK","","",null,null],[17,"MINE_SHAFT","","",null,null],[17,"MINT_GREEN","","",null,null],[17,"MIRAGE","","",null,null],[17,"MONDO","","",null,null],[17,"MONGOOSE","","",null,null],[17,"MOROCCO_BROWN","","",null,null],[17,"MORTAR","","",null,null],[17,"MOUNTAIN_MEADOW","","",null,null],[17,"MOUNTAIN_MIST","","",null,null],[17,"MULE_FAWN","","",null,null],[17,"MYSTIC","","",null,null],[17,"NIGHT_SHADZ","","",null,null],[17,"NORWAY","","",null,null],[17,"OLD_GOLD","","",null,null],[17,"OLD_LAVENDER","","",null,null],[17,"ONAHAU","","",null,null],[17,"OREGON","","",null,null],[17,"OSLO_GRAY","","",null,null],[17,"OUTER_SPACE","","",null,null],[17,"PABLO","","",null,null],[17,"PACIFIC_BLUE","","",null,null],[17,"PACIFIKA","","",null,null],[17,"PEAT","","",null,null],[17,"PERIWINKLE_GRAY","","",null,null],[17,"PERSIAN_BLUE","","",null,null],[17,"PERSIAN_PINK","","",null,null],[17,"PERSIAN_PLUM","","",null,null],[17,"PERU_TAN","","",null,null],[17,"PESTO","","",null,null],[17,"PETITE_ORCHID","","",null,null],[17,"PICTON_BLUE","","",null,null],[17,"PIGMENT_INDIGO","","",null,null],[17,"PINE_GREEN","","",null,null],[17,"PINK_FLAMINGO","","",null,null],[17,"PLUM","","",null,null],[17,"POLO_BLUE","","",null,null],[17,"PORTAGE","","",null,null],[17,"PORT_GORE","","",null,null],[17,"POTTERS_CLAY","","",null,null],[17,"PUERTO_RICO","","",null,null],[17,"PUNCH","","",null,null],[17,"PURPLE","","",null,null],[17,"PURPLE_HEART","","",null,null],[17,"QUINCY","","",null,null],[17,"RANGITOTO","","",null,null],[17,"RAW_SIENNA","","",null,null],[17,"RED","","",null,null],[17,"RED_BEECH","","",null,null],[17,"REGENT_ST_BLUE","","",null,null],[17,"RENO_SAND","","",null,null],[17,"RIPTIDE","","",null,null],[17,"ROCK_BLUE","","",null,null],[17,"ROMAN","","",null,null],[17,"ROMAN_COFFEE","","",null,null],[17,"ROSE","","",null,null],[17,"ROYAL_HEATH","","",null,null],[17,"ROYAL_PURPLE","","",null,null],[17,"RUM","","",null,null],[17,"RUSSET","","",null,null],[17,"RUSTY_NAIL","","",null,null],[17,"SADDLE","","",null,null],[17,"SAHARA","","",null,null],[17,"SAIL","","",null,null],[17,"SALT_BOX","","",null,null],[17,"SANDSTONE","","",null,null],[17,"SANGUINE_BROWN","","",null,null],[17,"SAN_JUAN","","",null,null],[17,"SAN_MARINO","","",null,null],[17,"SCAMPI","","",null,null],[17,"SCARLET","","",null,null],[17,"SCARPA_FLOW","","",null,null],[17,"SCHOOL_BUS_YELLOW","","",null,null],[17,"SCOOTER","","",null,null],[17,"SCORPION","","",null,null],[17,"SCREAMIN_GREEN","","",null,null],[17,"SEAGULL","","",null,null],[17,"SEANCE","","",null,null],[17,"SEA_GREEN","","",null,null],[17,"SEA_PINK","","",null,null],[17,"SEPIA","","",null,null],[17,"SEPIA_SKIN","","",null,null],[17,"SHARK","","",null,null],[17,"SHIP_COVE","","",null,null],[17,"SHUTTLE_GRAY","","",null,null],[17,"SILVER","","",null,null],[17,"SILVER_CHALICE","","",null,null],[17,"SILVER_SAND","","",null,null],[17,"SIROCCO","","",null,null],[17,"SMALT","","",null,null],[17,"SOLID_PINK","","",null,null],[17,"SORRELL_BROWN","","",null,null],[17,"SPRAY","","",null,null],[17,"SPRING_GREEN","","",null,null],[17,"SPUN_PEARL","","",null,null],[17,"SQUIRREL","","",null,null],[17,"STACK","","",null,null],[17,"STAR_DUST","","",null,null],[17,"STILETTO","","",null,null],[17,"STORM_DUST","","",null,null],[17,"STORM_GRAY","","",null,null],[17,"STRAW","","",null,null],[17,"ST_TROPAZ","","",null,null],[17,"SUBMARINE","","",null,null],[17,"SULU","","",null,null],[17,"SUNGLO","","",null,null],[17,"SUNSET_ORANGE","","",null,null],[17,"SWISS_COFFEE","","",null,null],[17,"SYCAMORE","","",null,null],[17,"TACAO","","",null,null],[17,"TACHA","","",null,null],[17,"TAMARIND","","",null,null],[17,"TAN","","",null,null],[17,"TAN_HIDE","","",null,null],[17,"TAUPE","","",null,null],[17,"THATCH_GREEN","","",null,null],[17,"THUNDER","","",null,null],[17,"THUNDERBIRD","","",null,null],[17,"TIARA","","",null,null],[17,"TOSCA","","",null,null],[17,"TREEHOUSE","","",null,null],[17,"TREE_POPPY","","",null,null],[17,"TROUT","","",null,null],[17,"TRUE_V","","",null,null],[17,"TUATARA","","",null,null],[17,"TUMBLEWEED","","",null,null],[17,"TUNA","","",null,null],[17,"TUNDORA","","",null,null],[17,"TURKISH_ROSE","","",null,null],[17,"TURMERIC","","",null,null],[17,"TUSSOCK","","",null,null],[17,"TWINE","","",null,null],[17,"ULTRAMARINE","","",null,null],[17,"VALENCIA","","",null,null],[17,"VENICE_BLUE","","",null,null],[17,"VERMILION","","",null,null],[17,"VESUVIUS","","",null,null],[17,"VIDA_LOCA","","",null,null],[17,"VIKING","","",null,null],[17,"VIOLA","","",null,null],[17,"VIOLET","","",null,null],[17,"VIOLET_EGGPLANT","","",null,null],[17,"VIRIDIAN","","",null,null],[17,"VIVID_TANGERINE","","",null,null],[17,"VIVID_VIOLET","","",null,null],[17,"VOODOO","","",null,null],[17,"WALNUT","","",null,null],[17,"WATERLOO","","",null,null],[17,"WATTLE","","",null,null],[17,"WELL_READ","","",null,null],[17,"WHITE","","",null,null],[17,"WILD_BLUE_YONDER","","",null,null],[17,"WILD_STRAWBERRY","","",null,null],[17,"WOODSMOKE","","",null,null],[17,"YELLOW","","",null,null],[17,"YELLOW_SEA","","",null,null],[17,"ZEST","","",null,null],[17,"ZEUS","","",null,null],[17,"ZIGGURAT","","",null,null],[17,"ZOMBIE","","",null,null],[17,"ZUCCINI","","",null,null],[17,"SPACE_COLOR","","",null,null],[17,"SKY_COLOR","","",null,null],[17,"UNDERGROUND_COLOR","","",null,null],[17,"CAVERN_COLOR","","",null,null],[17,"HELL_COLOR","","",null,null],[17,"LAVA_COLOR","","",null,null],[17,"HONEY_COLOR","","",null,null],[17,"WATER_COLOR","","",null,null],[17,"RED_WIRE_COLOR","","",null,null],[17,"BLUE_WIRE_COLOR","","",null,null],[17,"GREEN_WIRE_COLOR","","",null,null],[17,"YELLOW_WIRE_COLOR","","",null,null],[0,"enums","wld","",null,null],[4,"AnglerQuestFish","wld::enums","",null,null],[13,"Batfish","","",0,null],[13,"BumblebeeTuna","","",0,null],[13,"Catfish","","",0,null],[13,"Cloudfish","","",0,null],[13,"Cursedfish","","",0,null],[13,"Dirtfish","","",0,null],[13,"DynamiteFish","","",0,null],[13,"EaterOfPlankton","","",0,null],[13,"FallenStarfish","","",0,null],[13,"TheFishOfCthulhu","","",0,null],[13,"Fishotron","","",0,null],[13,"Harpyfish","","",0,null],[13,"Hungerfish","","",0,null],[13,"Ichorfish","","",0,null],[13,"Jewelfish","","",0,null],[13,"MirageFish","","",0,null],[13,"MutantFlinxfin","","",0,null],[13,"Pengfish","","",0,null],[13,"Pixiefish","","",0,null],[13,"Spiderfish","","",0,null],[13,"TundraTrout","","",0,null],[13,"UnicornFish","","",0,null],[13,"GuideVoodooFish","","",0,null],[13,"Wyverntail","","",0,null],[13,"ZombieFish","","",0,null],[13,"AmanitiaFungifin","","",0,null],[13,"Angelfish","","",0,null],[13,"BloodyManowar","","",0,null],[13,"Bonefish","","",0,null],[13,"Bunnyfish","","",0,null],[13,"CapnTunabeard","","",0,null],[13,"Clownfish","","",0,null],[13,"DemonicHellfish","","",0,null],[13,"Derpfish","","",0,null],[13,"Fishron","","",0,null],[13,"InfectedScabbardfish","","",0,null],[13,"Mudfish","","",0,null],[13,"Slimefish","","",0,null],[13,"TropicalBarracuda","","",0,null],[4,"BlockShape","","",null,null],[13,"Normal","","",1,null],[13,"HalfTile","","",1,null],[13,"TopRightSlope","","",1,null],[13,"TopLeftSlope","","",1,null],[13,"BottomRightSlope","","",1,null],[13,"BottomLeftSlope","","",1,null],[4,"BlockType","","",null,null],[13,"Dirt","","",2,null],[13,"Stone","","",2,null],[13,"Grass","","",2,null],[13,"Plants","","",2,null],[13,"Torches","","",2,null],[13,"Trees","","",2,null],[13,"Iron","","",2,null],[13,"Copper","","",2,null],[13,"Gold","","",2,null],[13,"Silver","","",2,null],[13,"ClosedDoor","","",2,null],[13,"OpenDoor","","",2,null],[13,"Heart","","",2,null],[13,"Bottles","","",2,null],[13,"Tables","","",2,null],[13,"Chairs","","",2,null],[13,"Anvils","","",2,null],[13,"Furnaces","","",2,null],[13,"WorkBenches","","",2,null],[13,"Platforms","","",2,null],[13,"Saplings","","",2,null],[13,"Containers","","",2,null],[13,"Demonite","","",2,null],[13,"CorruptGrass","","",2,null],[13,"CorruptPlants","","",2,null],[13,"Ebonstone","","",2,null],[13,"DemonAltar","","",2,null],[13,"Sunflower","","",2,null],[13,"Pots","","",2,null],[13,"PiggyBank","","",2,null],[13,"WoodBlock","","",2,null],[13,"ShadowOrbs","","",2,null],[13,"CorruptThorns","","",2,null],[13,"Candles","","",2,null],[13,"Chandeliers","","",2,null],[13,"Jackolanterns","","",2,null],[13,"Presents","","",2,null],[13,"Meteorite","","",2,null],[13,"GrayBrick","","",2,null],[13,"RedBrick","","",2,null],[13,"ClayBlock","","",2,null],[13,"BlueDungeonBrick","","",2,null],[13,"HangingLanterns","","",2,null],[13,"GreenDungeonBrick","","",2,null],[13,"PinkDungeonBrick","","",2,null],[13,"GoldBrick","","",2,null],[13,"SilverBrick","","",2,null],[13,"CopperBrick","","",2,null],[13,"Spikes","","",2,null],[13,"WaterCandle","","",2,null],[13,"Books","","",2,null],[13,"Cobweb","","",2,null],[13,"Vines","","",2,null],[13,"Sand","","",2,null],[13,"Glass","","",2,null],[13,"SignVec","","",2,null],[13,"Obsidian","","",2,null],[13,"Ash","","",2,null],[13,"Hellstone","","",2,null],[13,"Mud","","",2,null],[13,"JungleGrass","","",2,null],[13,"JunglePlants","","",2,null],[13,"JungleVines","","",2,null],[13,"Sapphire","","",2,null],[13,"Ruby","","",2,null],[13,"Emerald","","",2,null],[13,"Topaz","","",2,null],[13,"Amethyst","","",2,null],[13,"Diamond","","",2,null],[13,"JungleThorns","","",2,null],[13,"MushroomGrass","","",2,null],[13,"MushroomPlants","","",2,null],[13,"MushroomTrees","","",2,null],[13,"Plants2","","",2,null],[13,"JunglePlants2","","",2,null],[13,"ObsidianBrick","","",2,null],[13,"HellstoneBrick","","",2,null],[13,"Hellforge","","",2,null],[13,"ClayPot","","",2,null],[13,"Beds","","",2,null],[13,"Cactus","","",2,null],[13,"Coral","","",2,null],[13,"ImmatureHerbs","","",2,null],[13,"MatureHerbs","","",2,null],[13,"BloomingHerbs","","",2,null],[13,"Tombstones","","",2,null],[13,"Loom","","",2,null],[13,"Pianos","","",2,null],[13,"Dressers","","",2,null],[13,"Benches","","",2,null],[13,"Bathtubs","","",2,null],[13,"Banners","","",2,null],[13,"Lampposts","","",2,null],[13,"Lamps","","",2,null],[13,"Kegs","","",2,null],[13,"ChineseLanterns","","",2,null],[13,"CookingPots","","",2,null],[13,"Safes","","",2,null],[13,"SkullLanterns","","",2,null],[13,"TrashCan","","",2,null],[13,"Candelabras","","",2,null],[13,"Bookcases","","",2,null],[13,"Thrones","","",2,null],[13,"Bowls","","",2,null],[13,"GrandfatherClocks","","",2,null],[13,"Statues","","",2,null],[13,"Sawmill","","",2,null],[13,"Cobalt","","",2,null],[13,"Mythril","","",2,null],[13,"HallowedGrass","","",2,null],[13,"HallowedPlants","","",2,null],[13,"Adamantite","","",2,null],[13,"Ebonsand","","",2,null],[13,"HallowedPlants2","","",2,null],[13,"TinkerersWorkbench","","",2,null],[13,"HallowedVines","","",2,null],[13,"Pearlsand","","",2,null],[13,"Pearlstone","","",2,null],[13,"PearlstoneBrick","","",2,null],[13,"IridescentBrick","","",2,null],[13,"Mudstone","","",2,null],[13,"CobaltBrick","","",2,null],[13,"MythrilBrick","","",2,null],[13,"Silt","","",2,null],[13,"WoodenBeam","","",2,null],[13,"CrystalBall","","",2,null],[13,"DiscoBall","","",2,null],[13,"MagicalIceBlock","","",2,null],[13,"Mannequin","","",2,null],[13,"Crystals","","",2,null],[13,"ActiveStoneBlock","","",2,null],[13,"InactiveStoneBlock","","",2,null],[13,"Lever","","",2,null],[13,"AdamantiteForge","","",2,null],[13,"MythrilAnvil","","",2,null],[13,"PressurePlates","","",2,null],[13,"Switches","","",2,null],[13,"Traps","","",2,null],[13,"Boulder","","",2,null],[13,"MusicBoxes","","",2,null],[13,"DemoniteBrick","","",2,null],[13,"Explosives","","",2,null],[13,"InletPump","","",2,null],[13,"OutletPump","","",2,null],[13,"Timers","","",2,null],[13,"CandyCaneBlock","","",2,null],[13,"GreenCandyCaneBlock","","",2,null],[13,"SnowBlock","","",2,null],[13,"SnowBrick","","",2,null],[13,"HolidayLights","","",2,null],[13,"AdamantiteBeam","","",2,null],[13,"SandstoneBrick","","",2,null],[13,"EbonstoneBrick","","",2,null],[13,"RedStucco","","",2,null],[13,"YellowStucco","","",2,null],[13,"GreenStucco","","",2,null],[13,"GrayStucco","","",2,null],[13,"Ebonwood","","",2,null],[13,"RichMahogany","","",2,null],[13,"Pearlwood","","",2,null],[13,"RainbowBrick","","",2,null],[13,"IceBlock","","",2,null],[13,"BreakableIce","","",2,null],[13,"CorruptIce","","",2,null],[13,"HallowedIce","","",2,null],[13,"Stalactite","","",2,null],[13,"Tin","","",2,null],[13,"Lead","","",2,null],[13,"Tungsten","","",2,null],[13,"Platinum","","",2,null],[13,"PineTree","","",2,null],[13,"ChristmasTree","","",2,null],[13,"Sinks","","",2,null],[13,"PlatinumCandelabra","","",2,null],[13,"PlatinumCandle","","",2,null],[13,"TinBrick","","",2,null],[13,"TungstenBrick","","",2,null],[13,"PlatinumBrick","","",2,null],[13,"ExposedGems","","",2,null],[13,"GreenMoss","","",2,null],[13,"BrownMoss","","",2,null],[13,"RedMoss","","",2,null],[13,"BlueMoss","","",2,null],[13,"PurpleMoss","","",2,null],[13,"LongMoss","","",2,null],[13,"SmallPiles","","",2,null],[13,"LargePiles","","",2,null],[13,"LargePiles2","","",2,null],[13,"CactusBlock","","",2,null],[13,"Cloud","","",2,null],[13,"MushroomBlock","","",2,null],[13,"LivingWood","","",2,null],[13,"LeafBlock","","",2,null],[13,"SlimeBlock","","",2,null],[13,"BoneBlock","","",2,null],[13,"FleshBlock","","",2,null],[13,"RainCloud","","",2,null],[13,"FrozenSlimeBlock","","",2,null],[13,"Asphalt","","",2,null],[13,"FleshGrass","","",2,null],[13,"FleshIce","","",2,null],[13,"FleshWeeds","","",2,null],[13,"Sunplate","","",2,null],[13,"Crimstone","","",2,null],[13,"Crimtane","","",2,null],[13,"CrimsonVines","","",2,null],[13,"IceBrick","","",2,null],[13,"WaterFountain","","",2,null],[13,"Shadewood","","",2,null],[13,"Cannon","","",2,null],[13,"LandMine","","",2,null],[13,"Chlorophyte","","",2,null],[13,"SnowballLauncher","","",2,null],[13,"Rope","","",2,null],[13,"Chain","","",2,null],[13,"Campfire","","",2,null],[13,"Firework","","",2,null],[13,"Blendomatic","","",2,null],[13,"MeatGrinder","","",2,null],[13,"Extractinator","","",2,null],[13,"Solidifier","","",2,null],[13,"Palladium","","",2,null],[13,"Orichalcum","","",2,null],[13,"Titanium","","",2,null],[13,"Slush","","",2,null],[13,"Hive","","",2,null],[13,"LihzahrdBrick","","",2,null],[13,"DyePlants","","",2,null],[13,"DyeVat","","",2,null],[13,"HoneyBlock","","",2,null],[13,"CrispyHoneyBlock","","",2,null],[13,"Larva","","",2,null],[13,"WoodenSpikes","","",2,null],[13,"PlantDetritus","","",2,null],[13,"Crimsand","","",2,null],[13,"Teleporter","","",2,null],[13,"LifeFruit","","",2,null],[13,"LihzahrdAltar","","",2,null],[13,"PlanteraBulb","","",2,null],[13,"MetalBars","","",2,null],[13,"Painting3x3","","",2,null],[13,"Painting4x3","","",2,null],[13,"Painting6x4","","",2,null],[13,"ImbuingStation","","",2,null],[13,"BubbleMachine","","",2,null],[13,"Painting2x3","","",2,null],[13,"Painting3x2","","",2,null],[13,"Autohammer","","",2,null],[13,"PalladiumColumn","","",2,null],[13,"BubblegumBlock","","",2,null],[13,"Titanstone","","",2,null],[13,"PumpkinBlock","","",2,null],[13,"HayBlock","","",2,null],[13,"SpookyWood","","",2,null],[13,"Pumpkins","","",2,null],[13,"AmethystGemsparkOff","","",2,null],[13,"TopazGemsparkOff","","",2,null],[13,"SapphireGemsparkOff","","",2,null],[13,"EmeraldGemsparkOff","","",2,null],[13,"RubyGemsparkOff","","",2,null],[13,"DiamondGemsparkOff","","",2,null],[13,"AmberGemsparkOff","","",2,null],[13,"AmethystGemspark","","",2,null],[13,"TopazGemspark","","",2,null],[13,"SapphireGemspark","","",2,null],[13,"EmeraldGemspark","","",2,null],[13,"RubyGemspark","","",2,null],[13,"DiamondGemspark","","",2,null],[13,"AmberGemspark","","",2,null],[13,"Womannequin","","",2,null],[13,"FireflyinaBottle","","",2,null],[13,"LightningBuginaBottle","","",2,null],[13,"Cog","","",2,null],[13,"StoneSlab","","",2,null],[13,"SandStoneSlab","","",2,null],[13,"BunnyCage","","",2,null],[13,"SquirrelCage","","",2,null],[13,"MallardDuckCage","","",2,null],[13,"DuckCage","","",2,null],[13,"BirdCage","","",2,null],[13,"BlueJay","","",2,null],[13,"CardinalCage","","",2,null],[13,"FishBowl","","",2,null],[13,"HeavyWorkBench","","",2,null],[13,"CopperPlating","","",2,null],[13,"SnailCage","","",2,null],[13,"GlowingSnailCage","","",2,null],[13,"AmmoBox","","",2,null],[13,"MonarchButterflyJar","","",2,null],[13,"PurpleEmperorButterflyJar","","",2,null],[13,"RedAdmiralButterflyJar","","",2,null],[13,"UlyssesButterflyJar","","",2,null],[13,"SulphurButterflyJar","","",2,null],[13,"TreeNymphButterflyJar","","",2,null],[13,"ZebraSwallowtailButterflyJar","","",2,null],[13,"JuliaButterflyJar","","",2,null],[13,"ScorpionCage","","",2,null],[13,"BlackScorpionCage","","",2,null],[13,"FrogCage","","",2,null],[13,"MouseCage","","",2,null],[13,"BoneWelder","","",2,null],[13,"FleshCloningVat","","",2,null],[13,"GlassKiln","","",2,null],[13,"LihzahrdFurnace","","",2,null],[13,"LivingLoom","","",2,null],[13,"SkyMill","","",2,null],[13,"IceMachine","","",2,null],[13,"SteampunkBoiler","","",2,null],[13,"HoneyDispenser","","",2,null],[13,"PenguinCage","","",2,null],[13,"WormCage","","",2,null],[13,"DynastyWood","","",2,null],[13,"RedDynastyShingles","","",2,null],[13,"BlueDynastyShingles","","",2,null],[13,"MinecartTrack","","",2,null],[13,"Coralstone","","",2,null],[13,"BlueJellyfishBowl","","",2,null],[13,"GreenJellyfishBowl","","",2,null],[13,"PinkJellyfishBowl","","",2,null],[13,"ShipInAbottle","","",2,null],[13,"SeaweedPlanter","","",2,null],[13,"BorealWood","","",2,null],[13,"PalmWood","","",2,null],[13,"PalmTree","","",2,null],[13,"BeachPiles","","",2,null],[13,"TinPlating","","",2,null],[13,"Waterfall","","",2,null],[13,"Lavafall","","",2,null],[13,"Confetti","","",2,null],[13,"ConfettiBlack","","",2,null],[13,"CopperCoinPile","","",2,null],[13,"SilverCoinPile","","",2,null],[13,"GoldCoinPile","","",2,null],[13,"PlatinumCoinPile","","",2,null],[13,"WeaponsRack","","",2,null],[13,"FireworksBox","","",2,null],[13,"LivingFire","","",2,null],[13,"AlphabetStatues","","",2,null],[13,"FireworkFountain","","",2,null],[13,"GrasshopperCage","","",2,null],[13,"LivingCursedFire","","",2,null],[13,"LivingDemonFire","","",2,null],[13,"LivingFrostFire","","",2,null],[13,"LivingIchor","","",2,null],[13,"LivingUltrabrightFire","","",2,null],[13,"Honeyfall","","",2,null],[13,"ChlorophyteBrick","","",2,null],[13,"CrimtaneBrick","","",2,null],[13,"ShroomitePlating","","",2,null],[13,"MushroomStatue","","",2,null],[13,"MartianConduitPlating","","",2,null],[13,"ChimneySmoke","","",2,null],[13,"CrimtaneThorns","","",2,null],[13,"VineRope","","",2,null],[13,"BewitchingTable","","",2,null],[13,"AlchemyTable","","",2,null],[13,"Sundial","","",2,null],[13,"MarbleBlock","","",2,null],[13,"GoldBirdCage","","",2,null],[13,"GoldBunnyCage","","",2,null],[13,"GoldButterflyCage","","",2,null],[13,"GoldFrogCage","","",2,null],[13,"GoldGrasshopperCage","","",2,null],[13,"GoldMouseCage","","",2,null],[13,"GoldWormCage","","",2,null],[13,"SilkRope","","",2,null],[13,"WebRope","","",2,null],[13,"Marble","","",2,null],[13,"Granite","","",2,null],[13,"GraniteBlock","","",2,null],[13,"MeteoriteBrick","","",2,null],[13,"PinkSlimeBlock","","",2,null],[13,"PeaceCandle","","",2,null],[13,"WaterDrip","","",2,null],[13,"LavaDrip","","",2,null],[13,"HoneyDrip","","",2,null],[13,"FishingCrate","","",2,null],[13,"SharpeningStation","","",2,null],[13,"TargetDummy","","",2,null],[13,"Bubble","","",2,null],[13,"PlanterBox","","",2,null],[13,"LavaMoss","","",2,null],[13,"VineFlowers","","",2,null],[13,"LivingMahogany","","",2,null],[13,"LivingMahoganyLeaves","","",2,null],[13,"CrystalBlock","","",2,null],[13,"TrapdoorOpen","","",2,null],[13,"TrapdoorClosed","","",2,null],[13,"TallGateClosed","","",2,null],[13,"TallGateOpen","","",2,null],[13,"LavaLamp","","",2,null],[13,"CageEnchantedNightcrawler","","",2,null],[13,"CageBuggy","","",2,null],[13,"CageGrubby","","",2,null],[13,"CageSluggy","","",2,null],[13,"ItemFrame","","",2,null],[13,"Sandstone","","",2,null],[13,"HardenedSand","","",2,null],[13,"CorruptHardenedSand","","",2,null],[13,"CrimsonHardenedSand","","",2,null],[13,"CorruptSandstone","","",2,null],[13,"CrimsonSandstone","","",2,null],[13,"HallowHardenedSand","","",2,null],[13,"HallowSandstone","","",2,null],[13,"DesertFossil","","",2,null],[13,"Fireplace","","",2,null],[13,"Chimney","","",2,null],[13,"FossilOre","","",2,null],[13,"LunarOre","","",2,null],[13,"LunarBrick","","",2,null],[13,"LunarMonolith","","",2,null],[13,"Detonator","","",2,null],[13,"LunarCraftingStation","","",2,null],[13,"SquirrelOrangeCage","","",2,null],[13,"SquirrelGoldCage","","",2,null],[13,"LunarBlockSolar","","",2,null],[13,"LunarBlockVortex","","",2,null],[13,"LunarBlockNebula","","",2,null],[13,"LunarBlockStardust","","",2,null],[13,"LogicGateLamp","","",2,null],[13,"LogicGate","","",2,null],[13,"ConveyorBeltLeft","","",2,null],[13,"ConveyorBeltRight","","",2,null],[13,"LogicSensor","","",2,null],[13,"WirePipe","","",2,null],[13,"AnnouncementBox","","",2,null],[13,"TeamBlockRed","","",2,null],[13,"TeamBlockRedPlatform","","",2,null],[13,"WeightedPressurePlate","","",2,null],[13,"WireBulb","","",2,null],[13,"TeamBlockGreen","","",2,null],[13,"TeamBlockBlue","","",2,null],[13,"TeamBlockYellow","","",2,null],[13,"TeamBlockPink","","",2,null],[13,"TeamBlockWhite","","",2,null],[13,"TeamBlockGreenPlatform","","",2,null],[13,"TeamBlockBluePlatform","","",2,null],[13,"TeamBlockYellowPlatform","","",2,null],[13,"TeamBlockPinkPlatform","","",2,null],[13,"TeamBlockWhitePlatform","","",2,null],[13,"GemLocks","","",2,null],[13,"FakeContainers","","",2,null],[13,"ProjectilePressurePad","","",2,null],[13,"GeyserTrap","","",2,null],[13,"BeeHive","","",2,null],[13,"PixelBox","","",2,null],[13,"SillyBalloonPink","","",2,null],[13,"SillyBalloonPurple","","",2,null],[13,"SillyBalloonGreen","","",2,null],[13,"SillyStreamerBlue","","",2,null],[13,"SillyStreamerGreen","","",2,null],[13,"SillyStreamerPink","","",2,null],[13,"SillyBalloonMachine","","",2,null],[13,"SillyBalloonTile","","",2,null],[13,"Pigronata","","",2,null],[13,"PartyMonolith","","",2,null],[13,"PartyBundleOfBalloonTile","","",2,null],[13,"PartyPresent","","",2,null],[13,"SandFallBlock","","",2,null],[13,"SnowFallBlock","","",2,null],[13,"SnowCloud","","",2,null],[13,"SandDrip","","",2,null],[13,"DjinnLamp","","",2,null],[13,"DefendersForge","","",2,null],[13,"WarTable","","",2,null],[13,"WarTableBanner","","",2,null],[13,"ElderCrystalStand","","",2,null],[13,"Containers2","","",2,null],[13,"FakeContainers2","","",2,null],[13,"Tables2","","",2,null],[4,"EntityType","","",null,null],[13,"BigHornetStingy","","",3,null],[13,"LittleHornetStingy","","",3,null],[13,"BigHornetSpikey","","",3,null],[13,"LittleHornetSpikey","","",3,null],[13,"BigHornetLeafy","","",3,null],[13,"LittleHornetLeafy","","",3,null],[13,"BigHornetHoney","","",3,null],[13,"LittleHornetHoney","","",3,null],[13,"BigHornetFatty","","",3,null],[13,"LittleHornetFatty","","",3,null],[13,"BigRainZombie","","",3,null],[13,"SmallRainZombie","","",3,null],[13,"BigPantlessSkeleton","","",3,null],[13,"SmallPantlessSkeleton","","",3,null],[13,"BigMisassembledSkeleton","","",3,null],[13,"SmallMisassembledSkeleton","","",3,null],[13,"BigHeadacheSkeleton","","",3,null],[13,"SmallHeadacheSkeleton","","",3,null],[13,"BigSkeleton","","",3,null],[13,"SmallSkeleton","","",3,null],[13,"BigFemaleZombie","","",3,null],[13,"SmallFemaleZombie","","",3,null],[13,"DemonEye2","","",3,null],[13,"PurpleEye2","","",3,null],[13,"GreenEye2","","",3,null],[13,"DialatedEye2","","",3,null],[13,"SleepyEye2","","",3,null],[13,"CataractEye2","","",3,null],[13,"BigTwiggyZombie","","",3,null],[13,"SmallTwiggyZombie","","",3,null],[13,"BigSwampZombie","","",3,null],[13,"SmallSwampZombie","","",3,null],[13,"BigSlimedZombie","","",3,null],[13,"SmallSlimedZombie","","",3,null],[13,"BigPincushionZombie","","",3,null],[13,"SmallPincushionZombie","","",3,null],[13,"BigBaldZombie","","",3,null],[13,"SmallBaldZombie","","",3,null],[13,"BigZombie","","",3,null],[13,"SmallZombie","","",3,null],[13,"BigCrimslime","","",3,null],[13,"LittleCrimslime","","",3,null],[13,"BigCrimera","","",3,null],[13,"LittleCrimera","","",3,null],[13,"GiantMossHornet","","",3,null],[13,"BigMossHornet","","",3,null],[13,"LittleMossHornet","","",3,null],[13,"TinyMossHornet","","",3,null],[13,"BigStinger","","",3,null],[13,"LittleStinger","","",3,null],[13,"HeavySkeleton","","",3,null],[13,"BigBoned","","",3,null],[13,"ShortBones","","",3,null],[13,"BigEater","","",3,null],[13,"LittleEater","","",3,null],[13,"JungleSlime","","",3,null],[13,"YellowSlime","","",3,null],[13,"RedSlime","","",3,null],[13,"PurpleSlime","","",3,null],[13,"BlackSlime","","",3,null],[13,"BabySlime","","",3,null],[13,"Pinky","","",3,null],[13,"GreenSlime","","",3,null],[13,"Slimer2","","",3,null],[13,"Slimeling","","",3,null],[13,"BlueSlime","","",3,null],[13,"DemonEye","","",3,null],[13,"Zombie","","",3,null],[13,"EyeofCthulhu","","",3,null],[13,"ServantofCthulhu","","",3,null],[13,"EaterofSouls","","",3,null],[13,"DevourerHead","","",3,null],[13,"DevourerBody","","",3,null],[13,"DevourerTail","","",3,null],[13,"GiantWormHead","","",3,null],[13,"GiantWormBody","","",3,null],[13,"GiantWormTail","","",3,null],[13,"EaterofWorldsHead","","",3,null],[13,"EaterofWorldsBody","","",3,null],[13,"EaterofWorldsTail","","",3,null],[13,"MotherSlime","","",3,null],[13,"Merchant","","",3,null],[13,"Nurse","","",3,null],[13,"ArmsDealer","","",3,null],[13,"Dryad","","",3,null],[13,"Skeleton","","",3,null],[13,"Guide","","",3,null],[13,"MeteorHead","","",3,null],[13,"FireImp","","",3,null],[13,"BurningSphere","","",3,null],[13,"GoblinPeon","","",3,null],[13,"GoblinThief","","",3,null],[13,"GoblinWarrior","","",3,null],[13,"GoblinSorcerer","","",3,null],[13,"ChaosBall","","",3,null],[13,"AngryBones","","",3,null],[13,"DarkCaster","","",3,null],[13,"WaterSphere","","",3,null],[13,"CursedSkull","","",3,null],[13,"SkeletronHead","","",3,null],[13,"SkeletronHand","","",3,null],[13,"OldMan","","",3,null],[13,"Demolitionist","","",3,null],[13,"BoneSerpentHead","","",3,null],[13,"BoneSerpentBody","","",3,null],[13,"BoneSerpentTail","","",3,null],[13,"Hornet","","",3,null],[13,"ManEater","","",3,null],[13,"UndeadMiner","","",3,null],[13,"Tim","","",3,null],[13,"Bunny","","",3,null],[13,"CorruptBunny","","",3,null],[13,"Harpy","","",3,null],[13,"CaveBat","","",3,null],[13,"KingSlime","","",3,null],[13,"JungleBat","","",3,null],[13,"DoctorBones","","",3,null],[13,"TheGroom","","",3,null],[13,"Clothier","","",3,null],[13,"Goldfish","","",3,null],[13,"Snatcher","","",3,null],[13,"CorruptGoldfish","","",3,null],[13,"Piranha","","",3,null],[13,"LavaSlime","","",3,null],[13,"Hellbat","","",3,null],[13,"Vulture","","",3,null],[13,"Demon","","",3,null],[13,"BlueJellyfish","","",3,null],[13,"PinkJellyfish","","",3,null],[13,"Shark","","",3,null],[13,"VoodooDemon","","",3,null],[13,"Crab","","",3,null],[13,"DungeonGuardian","","",3,null],[13,"Antlion","","",3,null],[13,"SpikeBall","","",3,null],[13,"DungeonSlime","","",3,null],[13,"BlazingWheel","","",3,null],[13,"GoblinScout","","",3,null],[13,"Bird","","",3,null],[13,"Pixie","","",3,null],[13,"None2","","",3,null],[13,"ArmoredSkeleton","","",3,null],[13,"Mummy","","",3,null],[13,"DarkMummy","","",3,null],[13,"LightMummy","","",3,null],[13,"CorruptSlime","","",3,null],[13,"Wraith","","",3,null],[13,"CursedHammer","","",3,null],[13,"EnchantedSword","","",3,null],[13,"Mimic","","",3,null],[13,"Unicorn","","",3,null],[13,"WyvernHead","","",3,null],[13,"WyvernLegs","","",3,null],[13,"WyvernBody","","",3,null],[13,"WyvernBody2","","",3,null],[13,"WyvernBody3","","",3,null],[13,"WyvernTail","","",3,null],[13,"GiantBat","","",3,null],[13,"Corruptor","","",3,null],[13,"DiggerHead","","",3,null],[13,"DiggerBody","","",3,null],[13,"DiggerTail","","",3,null],[13,"SeekerHead","","",3,null],[13,"SeekerBody","","",3,null],[13,"SeekerTail","","",3,null],[13,"Clinger","","",3,null],[13,"AnglerFish","","",3,null],[13,"GreenJellyfish","","",3,null],[13,"Werewolf","","",3,null],[13,"BoundGoblin","","",3,null],[13,"BoundWizard","","",3,null],[13,"GoblinTinkerer","","",3,null],[13,"Wizard","","",3,null],[13,"Clown","","",3,null],[13,"SkeletonArcher","","",3,null],[13,"GoblinArcher","","",3,null],[13,"VileSpit","","",3,null],[13,"WallofFlesh","","",3,null],[13,"WallofFleshEye","","",3,null],[13,"TheHungry","","",3,null],[13,"TheHungryIi","","",3,null],[13,"LeechHead","","",3,null],[13,"LeechBody","","",3,null],[13,"LeechTail","","",3,null],[13,"ChaosElemental","","",3,null],[13,"Slimer","","",3,null],[13,"Gastropod","","",3,null],[13,"BoundMechanic","","",3,null],[13,"Mechanic","","",3,null],[13,"Retinazer","","",3,null],[13,"Spazmatism","","",3,null],[13,"SkeletronPrime","","",3,null],[13,"PrimeCannon","","",3,null],[13,"PrimeSaw","","",3,null],[13,"PrimeVice","","",3,null],[13,"PrimeLaser","","",3,null],[13,"BaldZombie","","",3,null],[13,"WanderingEye","","",3,null],[13,"TheDestroyer","","",3,null],[13,"TheDestroyerBody","","",3,null],[13,"TheDestroyerTail","","",3,null],[13,"IlluminantBat","","",3,null],[13,"IlluminantSlime","","",3,null],[13,"Probe","","",3,null],[13,"PossessedArmor","","",3,null],[13,"ToxicSludge","","",3,null],[13,"SantaClaus","","",3,null],[13,"SnowmanGangsta","","",3,null],[13,"MisterStabby","","",3,null],[13,"SnowBalla","","",3,null],[13,"None3","","",3,null],[13,"IceSlime","","",3,null],[13,"Penguin","","",3,null],[13,"PenguinBlack","","",3,null],[13,"IceBat","","",3,null],[13,"Lavabat","","",3,null],[13,"GiantFlyingFox","","",3,null],[13,"GiantTortoise","","",3,null],[13,"IceTortoise","","",3,null],[13,"Wolf","","",3,null],[13,"RedDevil","","",3,null],[13,"Arapaima","","",3,null],[13,"VampireBat","","",3,null],[13,"Vampire","","",3,null],[13,"Truffle","","",3,null],[13,"ZombieEskimo","","",3,null],[13,"Frankenstein","","",3,null],[13,"BlackRecluse","","",3,null],[13,"WallCreeper","","",3,null],[13,"WallCreeperWall","","",3,null],[13,"SwampThing","","",3,null],[13,"UndeadViking","","",3,null],[13,"CorruptPenguin","","",3,null],[13,"IceElemental","","",3,null],[13,"PigronCorruption","","",3,null],[13,"PigronHallow","","",3,null],[13,"RuneWizard","","",3,null],[13,"Crimera","","",3,null],[13,"Herpling","","",3,null],[13,"AngryTrapper","","",3,null],[13,"MossHornet","","",3,null],[13,"Derpling","","",3,null],[13,"Steampunker","","",3,null],[13,"CrimsonAxe","","",3,null],[13,"PigronCrimson","","",3,null],[13,"FaceMonster","","",3,null],[13,"FloatyGross","","",3,null],[13,"Crimslime","","",3,null],[13,"SpikedIceSlime","","",3,null],[13,"SnowFlinx","","",3,null],[13,"PincushionZombie","","",3,null],[13,"SlimedZombie","","",3,null],[13,"SwampZombie","","",3,null],[13,"TwiggyZombie","","",3,null],[13,"CataractEye","","",3,null],[13,"SleepyEye","","",3,null],[13,"DialatedEye","","",3,null],[13,"GreenEye","","",3,null],[13,"PurpleEye","","",3,null],[13,"LostGirl","","",3,null],[13,"Nymph","","",3,null],[13,"ArmoredViking","","",3,null],[13,"Lihzahrd","","",3,null],[13,"LihzahrdCrawler","","",3,null],[13,"FemaleZombie","","",3,null],[13,"HeadacheSkeleton","","",3,null],[13,"MisassembledSkeleton","","",3,null],[13,"PantlessSkeleton","","",3,null],[13,"SpikedJungleSlime","","",3,null],[13,"Moth","","",3,null],[13,"IcyMerman","","",3,null],[13,"DyeTrader","","",3,null],[13,"PartyGirl","","",3,null],[13,"Cyborg","","",3,null],[13,"Bee","","",3,null],[13,"BeeSmall","","",3,null],[13,"PirateDeckhand","","",3,null],[13,"PirateCorsair","","",3,null],[13,"PirateDeadeye","","",3,null],[13,"PirateCrossbower","","",3,null],[13,"PirateCaptain","","",3,null],[13,"CochinealBeetle","","",3,null],[13,"CyanBeetle","","",3,null],[13,"LacBeetle","","",3,null],[13,"SeaSnail","","",3,null],[13,"Squid","","",3,null],[13,"QueenBee","","",3,null],[13,"ZombieRaincoat","","",3,null],[13,"FlyingFish","","",3,null],[13,"UmbrellaSlime","","",3,null],[13,"FlyingSnake","","",3,null],[13,"Painter","","",3,null],[13,"WitchDoctor","","",3,null],[13,"Pirate","","",3,null],[13,"GoldfishWalker","","",3,null],[13,"HornetFatty","","",3,null],[13,"HornetHoney","","",3,null],[13,"HornetLeafy","","",3,null],[13,"HornetSpikey","","",3,null],[13,"HornetStingy","","",3,null],[13,"JungleCreeper","","",3,null],[13,"JungleCreeperWall","","",3,null],[13,"BlackRecluseWall","","",3,null],[13,"BloodCrawler","","",3,null],[13,"BloodCrawlerWall","","",3,null],[13,"BloodFeeder","","",3,null],[13,"BloodJelly","","",3,null],[13,"IceGolem","","",3,null],[13,"RainbowSlime","","",3,null],[13,"Golem","","",3,null],[13,"GolemHead","","",3,null],[13,"GolemFistLeft","","",3,null],[13,"GolemFistRight","","",3,null],[13,"GolemHeadFree","","",3,null],[13,"AngryNimbus","","",3,null],[13,"Eyezor","","",3,null],[13,"Parrot","","",3,null],[13,"Reaper","","",3,null],[13,"ZombieMushroom","","",3,null],[13,"ZombieMushroomHat","","",3,null],[13,"FungoFish","","",3,null],[13,"AnomuraFungus","","",3,null],[13,"MushiLadybug","","",3,null],[13,"FungiBulb","","",3,null],[13,"GiantFungiBulb","","",3,null],[13,"FungiSpore","","",3,null],[13,"Plantera","","",3,null],[13,"PlanterasHook","","",3,null],[13,"PlanterasTentacle","","",3,null],[13,"Spore","","",3,null],[13,"BrainofCthulhu","","",3,null],[13,"Creeper","","",3,null],[13,"IchorSticker","","",3,null],[13,"RustyArmoredBonesAxe","","",3,null],[13,"RustyArmoredBonesFlail","","",3,null],[13,"RustyArmoredBonesSword","","",3,null],[13,"RustyArmoredBonesSwordNoArmor","","",3,null],[13,"BlueArmoredBones","","",3,null],[13,"BlueArmoredBonesMace","","",3,null],[13,"BlueArmoredBonesNoPants","","",3,null],[13,"BlueArmoredBonesSword","","",3,null],[13,"HellArmoredBones","","",3,null],[13,"HellArmoredBonesSpikeShield","","",3,null],[13,"HellArmoredBonesMace","","",3,null],[13,"HellArmoredBonesSword","","",3,null],[13,"RaggedCaster","","",3,null],[13,"RaggedCasterOpenCoat","","",3,null],[13,"Necromancer","","",3,null],[13,"NecromancerArmored","","",3,null],[13,"DiabolistRed","","",3,null],[13,"DiabolistWhite","","",3,null],[13,"BoneLee","","",3,null],[13,"DungeonSpirit","","",3,null],[13,"GiantCursedSkull","","",3,null],[13,"Paladin","","",3,null],[13,"SkeletonSniper","","",3,null],[13,"TacticalSkeleton","","",3,null],[13,"SkeletonCommando","","",3,null],[13,"AngryBonesBig","","",3,null],[13,"AngryBonesBigMuscle","","",3,null],[13,"AngryBonesBigHelmet","","",3,null],[13,"BirdBlue","","",3,null],[13,"BirdRed","","",3,null],[13,"Squirrel","","",3,null],[13,"Mouse","","",3,null],[13,"Raven","","",3,null],[13,"SlimeMasked","","",3,null],[13,"BunnySlimed","","",3,null],[13,"HoppinJack","","",3,null],[13,"Scarecrow1","","",3,null],[13,"Scarecrow2","","",3,null],[13,"Scarecrow3","","",3,null],[13,"Scarecrow4","","",3,null],[13,"Scarecrow5","","",3,null],[13,"Scarecrow6","","",3,null],[13,"Scarecrow7","","",3,null],[13,"Scarecrow8","","",3,null],[13,"Scarecrow9","","",3,null],[13,"Scarecrow10","","",3,null],[13,"HeadlessHorseman","","",3,null],[13,"Ghost","","",3,null],[13,"DemonEyeOwl","","",3,null],[13,"DemonEyeSpaceship","","",3,null],[13,"ZombieDoctor","","",3,null],[13,"ZombieSuperman","","",3,null],[13,"ZombiePixie","","",3,null],[13,"SkeletonTopHat","","",3,null],[13,"SkeletonAstonaut","","",3,null],[13,"SkeletonAlien","","",3,null],[13,"MourningWood","","",3,null],[13,"Splinterling","","",3,null],[13,"Pumpking","","",3,null],[13,"PumpkingBlade","","",3,null],[13,"Hellhound","","",3,null],[13,"Poltergeist","","",3,null],[13,"ZombieXmas","","",3,null],[13,"ZombieSweater","","",3,null],[13,"SlimeRibbonWhite","","",3,null],[13,"SlimeRibbonYellow","","",3,null],[13,"SlimeRibbonGreen","","",3,null],[13,"SlimeRibbonRed","","",3,null],[13,"BunnyXmas","","",3,null],[13,"ZombieElf","","",3,null],[13,"ZombieElfBeard","","",3,null],[13,"ZombieElfGirl","","",3,null],[13,"PresentMimic","","",3,null],[13,"GingerbreadMan","","",3,null],[13,"Yeti","","",3,null],[13,"Everscream","","",3,null],[13,"IceQueen","","",3,null],[13,"SantaNk1","","",3,null],[13,"ElfCopter","","",3,null],[13,"Nutcracker","","",3,null],[13,"NutcrackerSpinning","","",3,null],[13,"ElfArcher","","",3,null],[13,"Krampus","","",3,null],[13,"Flocko","","",3,null],[13,"Stylist","","",3,null],[13,"WebbedStylist","","",3,null],[13,"Firefly","","",3,null],[13,"Butterfly","","",3,null],[13,"Worm","","",3,null],[13,"LightningBug","","",3,null],[13,"Snail","","",3,null],[13,"GlowingSnail","","",3,null],[13,"Frog","","",3,null],[13,"Duck","","",3,null],[13,"Duck2","","",3,null],[13,"DuckWhite","","",3,null],[13,"DuckWhite2","","",3,null],[13,"ScorpionBlack","","",3,null],[13,"Scorpion","","",3,null],[13,"TravellingMerchant","","",3,null],[13,"Angler","","",3,null],[13,"DukeFishron","","",3,null],[13,"DetonatingBubble","","",3,null],[13,"Sharkron","","",3,null],[13,"Sharkron2","","",3,null],[13,"TruffleWorm","","",3,null],[13,"TruffleWormDigger","","",3,null],[13,"SleepingAngler","","",3,null],[13,"Grasshopper","","",3,null],[13,"ChatteringTeethBomb","","",3,null],[13,"CultistArcherBlue","","",3,null],[13,"CultistArcherWhite","","",3,null],[13,"BrainScrambler","","",3,null],[13,"RayGunner","","",3,null],[13,"MartianOfficer","","",3,null],[13,"ForceBubble","","",3,null],[13,"GrayGrunt","","",3,null],[13,"MartianEngineer","","",3,null],[13,"MartianTurret","","",3,null],[13,"MartianDrone","","",3,null],[13,"GigaZapper","","",3,null],[13,"ScutlixRider","","",3,null],[13,"Scutlix","","",3,null],[13,"MartianSaucer","","",3,null],[13,"MartianSaucerTurret","","",3,null],[13,"MartianSaucerCannon","","",3,null],[13,"MartianSaucerCore","","",3,null],[13,"MoonLordHead","","",3,null],[13,"MoonLordHand","","",3,null],[13,"MoonLordCore","","",3,null],[13,"MartianProbe","","",3,null],[13,"MoonLordFreeEye","","",3,null],[13,"MoonLordLeechBlob","","",3,null],[13,"StardustWormHead","","",3,null],[13,"StardustWormBody","","",3,null],[13,"StardustWormTail","","",3,null],[13,"StardustCellBig","","",3,null],[13,"StardustCellSmall","","",3,null],[13,"StardustJellyfishBig","","",3,null],[13,"StardustJellyfishSmall","","",3,null],[13,"StardustSpiderBig","","",3,null],[13,"StardustSpiderSmall","","",3,null],[13,"StardustSoldier","","",3,null],[13,"SolarCrawltipedeHead","","",3,null],[13,"SolarCrawltipedeBody","","",3,null],[13,"SolarCrawltipedeTail","","",3,null],[13,"SolarDrakomire","","",3,null],[13,"SolarDrakomireRider","","",3,null],[13,"SolarSroller","","",3,null],[13,"SolarCorite","","",3,null],[13,"SolarSolenian","","",3,null],[13,"NebulaBrain","","",3,null],[13,"NebulaHeadcrab","","",3,null],[13,"NebulaBeast","","",3,null],[13,"NebulaSoldier","","",3,null],[13,"VortexRifleman","","",3,null],[13,"VortexHornetQueen","","",3,null],[13,"VortexHornet","","",3,null],[13,"VortexLarva","","",3,null],[13,"VortexSoldier","","",3,null],[13,"ArmedZombie","","",3,null],[13,"ArmedZombieEskimo","","",3,null],[13,"ArmedZombiePincussion","","",3,null],[13,"ArmedZombieSlimed","","",3,null],[13,"ArmedZombieSwamp","","",3,null],[13,"ArmedZombieTwiggy","","",3,null],[13,"ArmedZombieCenx","","",3,null],[13,"CultistTablet","","",3,null],[13,"CultistDevote","","",3,null],[13,"CultistBoss","","",3,null],[13,"CultistBossClone","","",3,null],[13,"GoldBird","","",3,null],[13,"GoldBunny","","",3,null],[13,"GoldButterfly","","",3,null],[13,"GoldFrog","","",3,null],[13,"GoldGrasshopper","","",3,null],[13,"GoldMouse","","",3,null],[13,"GoldWorm","","",3,null],[13,"BoneThrowingSkeleton","","",3,null],[13,"BoneThrowingSkeleton2","","",3,null],[13,"BoneThrowingSkeleton3","","",3,null],[13,"BoneThrowingSkeleton4","","",3,null],[13,"SkeletonMerchant","","",3,null],[13,"CultistDragonHead","","",3,null],[13,"CultistDragonBody1","","",3,null],[13,"CultistDragonBody2","","",3,null],[13,"CultistDragonBody3","","",3,null],[13,"CultistDragonBody4","","",3,null],[13,"CultistDragonTail","","",3,null],[13,"Butcher","","",3,null],[13,"CreatureFromTheDeep","","",3,null],[13,"Fritz","","",3,null],[13,"Nailhead","","",3,null],[13,"CrimsonBunny","","",3,null],[13,"CrimsonGoldfish","","",3,null],[13,"Psycho","","",3,null],[13,"DeadlySphere","","",3,null],[13,"DrManFly","","",3,null],[13,"ThePossessed","","",3,null],[13,"CrimsonPenguin","","",3,null],[13,"GoblinSummoner","","",3,null],[13,"ShadowFlameApparition","","",3,null],[13,"BigMimicCorruption","","",3,null],[13,"BigMimicCrimson","","",3,null],[13,"BigMimicHallow","","",3,null],[13,"BigMimicJungle","","",3,null],[13,"Mothron","","",3,null],[13,"MothronEgg","","",3,null],[13,"MothronSpawn","","",3,null],[13,"Medusa","","",3,null],[13,"GreekSkeleton","","",3,null],[13,"GraniteGolem","","",3,null],[13,"GraniteFlyer","","",3,null],[13,"EnchantedNightcrawler","","",3,null],[13,"Grubby","","",3,null],[13,"Sluggy","","",3,null],[13,"Buggy","","",3,null],[13,"TargetDummy","","",3,null],[13,"BloodZombie","","",3,null],[13,"Drippler","","",3,null],[13,"PirateShip","","",3,null],[13,"PirateShipCannon","","",3,null],[13,"LunarTowerStardust","","",3,null],[13,"Crawdad","","",3,null],[13,"Crawdad2","","",3,null],[13,"GiantShelly","","",3,null],[13,"GiantShelly2","","",3,null],[13,"Salamander","","",3,null],[13,"Salamander2","","",3,null],[13,"Salamander3","","",3,null],[13,"Salamander4","","",3,null],[13,"Salamander5","","",3,null],[13,"Salamander6","","",3,null],[13,"Salamander7","","",3,null],[13,"Salamander8","","",3,null],[13,"Salamander9","","",3,null],[13,"LunarTowerNebula","","",3,null],[13,"LunarTowerVortex","","",3,null],[13,"TaxCollector","","",3,null],[13,"WalkingAntlion","","",3,null],[13,"FlyingAntlion","","",3,null],[13,"DuneSplicerHead","","",3,null],[13,"DuneSplicerBody","","",3,null],[13,"DuneSplicerTail","","",3,null],[13,"TombCrawlerHead","","",3,null],[13,"TombCrawlerBody","","",3,null],[13,"TombCrawlerTail","","",3,null],[13,"SolarFlare","","",3,null],[13,"LunarTowerSolar","","",3,null],[13,"SolarSpearman","","",3,null],[13,"SolarGoop","","",3,null],[13,"MartianWalker","","",3,null],[13,"AncientCultistSquidhead","","",3,null],[13,"AncientLight","","",3,null],[13,"AncientDoom","","",3,null],[13,"DesertGhoul","","",3,null],[13,"DesertGhoulCorruption","","",3,null],[13,"DesertGhoulCrimson","","",3,null],[13,"DesertGhoulHallow","","",3,null],[13,"DesertLamiaLight","","",3,null],[13,"DesertLamiaDark","","",3,null],[13,"DesertScorpionWalk","","",3,null],[13,"DesertScorpionWall","","",3,null],[13,"DesertBeast","","",3,null],[13,"DesertDjinn","","",3,null],[13,"DemonTaxCollector","","",3,null],[13,"SlimeSpiked","","",3,null],[13,"TheBride","","",3,null],[13,"SandSlime","","",3,null],[13,"SquirrelRed","","",3,null],[13,"SquirrelGold","","",3,null],[13,"PartyBunny","","",3,null],[13,"SandElemental","","",3,null],[13,"SandShark","","",3,null],[13,"SandsharkCorrupt","","",3,null],[13,"SandsharkCrimson","","",3,null],[13,"SandsharkHallow","","",3,null],[13,"Tumbleweed","","",3,null],[13,"Dd2attackerTest","","",3,null],[13,"Dd2eterniaCrystal","","",3,null],[13,"Dd2lanePortal","","",3,null],[13,"Dd2bartender","","",3,null],[13,"Dd2betsy","","",3,null],[13,"Dd2goblinT1","","",3,null],[13,"Dd2goblinT2","","",3,null],[13,"Dd2goblinT3","","",3,null],[13,"Dd2goblinBomberT1","","",3,null],[13,"Dd2goblinBomberT2","","",3,null],[13,"Dd2goblinBomberT3","","",3,null],[13,"Dd2wyvernT1","","",3,null],[13,"Dd2wyvernT2","","",3,null],[13,"Dd2wyvernT3","","",3,null],[13,"Dd2javelinstT1","","",3,null],[13,"Dd2javelinstT2","","",3,null],[13,"Dd2javelinstT3","","",3,null],[13,"Dd2darkMageT1","","",3,null],[13,"Dd2darkMageT3","","",3,null],[13,"Dd2skeletonT1","","",3,null],[13,"Dd2skeletonT3","","",3,null],[13,"Dd2witherBeastT2","","",3,null],[13,"Dd2witherBeastT3","","",3,null],[13,"Dd2drakinT2","","",3,null],[13,"Dd2drakinT3","","",3,null],[13,"Dd2koboldWalkerT2","","",3,null],[13,"Dd2koboldWalkerT3","","",3,null],[13,"Dd2koboldFlyerT2","","",3,null],[13,"Dd2koboldFlyerT3","","",3,null],[13,"Dd2ogreT2","","",3,null],[13,"Dd2ogreT3","","",3,null],[13,"Dd2lightningBugT3","","",3,null],[13,"BartenderUnconscious","","",3,null],[4,"EvilType","","",null,null],[13,"Corruption","","",4,null],[13,"Crimson","","",4,null],[4,"HardmodeOreType","","",null,null],[13,"UnknownOre","","",5,null],[13,"Cobalt","","",5,null],[13,"Mythril","","",5,null],[13,"Adamantite","","",5,null],[13,"Palladium","","",5,null],[13,"Orichalcum","","",5,null],[13,"Titanium","","",5,null],[4,"InvasionType","","",null,null],[13,"NoInvasion","","",6,null],[13,"GoblinInvasion","","",6,null],[13,"FrostLegion","","",6,null],[13,"PirateInvasion","","",6,null],[13,"MartianMadness","","",6,null],[4,"ItemType","","",null,null],[13,"YellowPhasesaberOld","","",7,null],[13,"WhitePhasesaberOld","","",7,null],[13,"PurplePhasesaberOld","","",7,null],[13,"GreenPhasesaberOld","","",7,null],[13,"RedPhasesaberOld","","",7,null],[13,"BluePhasesaberOld","","",7,null],[13,"PlatinumBowOld","","",7,null],[13,"PlatinumHammerOld","","",7,null],[13,"PlatinumAxeOld","","",7,null],[13,"PlatinumShortswordOld","","",7,null],[13,"PlatinumBroadswordOld","","",7,null],[13,"PlatinumPickaxeOld","","",7,null],[13,"TungstenBowOld","","",7,null],[13,"TungstenHammerOld","","",7,null],[13,"TungstenAxeOld","","",7,null],[13,"TungstenShortswordOld","","",7,null],[13,"TungstenBroadswordOld","","",7,null],[13,"TungstenPickaxeOld","","",7,null],[13,"LeadBowOld","","",7,null],[13,"LeadHammerOld","","",7,null],[13,"LeadAxeOld","","",7,null],[13,"LeadShortswordOld","","",7,null],[13,"LeadBroadswordOld","","",7,null],[13,"LeadPickaxeOld","","",7,null],[13,"TinBowOld","","",7,null],[13,"TinHammerOld","","",7,null],[13,"TinAxeOld","","",7,null],[13,"TinShortswordOld","","",7,null],[13,"TinBroadswordOld","","",7,null],[13,"TinPickaxeOld","","",7,null],[13,"CopperBowOld","","",7,null],[13,"CopperHammerOld","","",7,null],[13,"CopperAxeOld","","",7,null],[13,"CopperShortswordOld","","",7,null],[13,"CopperBroadswordOld","","",7,null],[13,"CopperPickaxeOld","","",7,null],[13,"SilverBowOld","","",7,null],[13,"SilverHammerOld","","",7,null],[13,"SilverAxeOld","","",7,null],[13,"SilverShortswordOld","","",7,null],[13,"SilverBroadswordOld","","",7,null],[13,"SilverPickaxeOld","","",7,null],[13,"GoldBowOld","","",7,null],[13,"GoldHammerOld","","",7,null],[13,"GoldAxeOld","","",7,null],[13,"GoldShortswordOld","","",7,null],[13,"GoldBroadswordOld","","",7,null],[13,"GoldPickaxeOld","","",7,null],[13,"None","","",7,null],[13,"IronPickaxe","","",7,null],[13,"DirtBlock","","",7,null],[13,"StoneBlock","","",7,null],[13,"IronBroadsword","","",7,null],[13,"Mushroom","","",7,null],[13,"IronShortsword","","",7,null],[13,"IronHammer","","",7,null],[13,"Torch","","",7,null],[13,"Wood","","",7,null],[13,"IronAxe","","",7,null],[13,"IronOre","","",7,null],[13,"CopperOre","","",7,null],[13,"GoldOre","","",7,null],[13,"SilverOre","","",7,null],[13,"CopperWatch","","",7,null],[13,"SilverWatch","","",7,null],[13,"GoldWatch","","",7,null],[13,"DepthMeter","","",7,null],[13,"GoldBar","","",7,null],[13,"CopperBar","","",7,null],[13,"SilverBar","","",7,null],[13,"IronBar","","",7,null],[13,"Gel","","",7,null],[13,"WoodenSword","","",7,null],[13,"WoodenDoor","","",7,null],[13,"StoneWall","","",7,null],[13,"Acorn","","",7,null],[13,"LesserHealingPotion","","",7,null],[13,"LifeCrystal","","",7,null],[13,"DirtWall","","",7,null],[13,"Bottle","","",7,null],[13,"WoodenTable","","",7,null],[13,"Furnace","","",7,null],[13,"WoodenChair","","",7,null],[13,"IronAnvil","","",7,null],[13,"WorkBench","","",7,null],[13,"Goggles","","",7,null],[13,"Lens","","",7,null],[13,"WoodenBow","","",7,null],[13,"WoodenArrow","","",7,null],[13,"FlamingArrow","","",7,null],[13,"Shuriken","","",7,null],[13,"SuspiciousLookingEye","","",7,null],[13,"DemonBow","","",7,null],[13,"WarAxeoftheNight","","",7,null],[13,"LightsBane","","",7,null],[13,"UnholyArrow","","",7,null],[13,"Chest","","",7,null],[13,"BandofRegeneration","","",7,null],[13,"MagicMirror","","",7,null],[13,"JestersArrow","","",7,null],[13,"AngelStatue","","",7,null],[13,"CloudinaBottle","","",7,null],[13,"HermesBoots","","",7,null],[13,"EnchantedBoomerang","","",7,null],[13,"DemoniteOre","","",7,null],[13,"DemoniteBar","","",7,null],[13,"Heart","","",7,null],[13,"CorruptSeeds","","",7,null],[13,"VileMushroom","","",7,null],[13,"EbonstoneBlock","","",7,null],[13,"GrassSeeds","","",7,null],[13,"Sunflower","","",7,null],[13,"Vilethorn","","",7,null],[13,"Starfury","","",7,null],[13,"PurificationPowder","","",7,null],[13,"VilePowder","","",7,null],[13,"RottenChunk","","",7,null],[13,"WormTooth","","",7,null],[13,"WormFood","","",7,null],[13,"CopperCoin","","",7,null],[13,"SilverCoin","","",7,null],[13,"GoldCoin","","",7,null],[13,"PlatinumCoin","","",7,null],[13,"FallenStar","","",7,null],[13,"CopperGreaves","","",7,null],[13,"IronGreaves","","",7,null],[13,"SilverGreaves","","",7,null],[13,"GoldGreaves","","",7,null],[13,"CopperChainmail","","",7,null],[13,"IronChainmail","","",7,null],[13,"SilverChainmail","","",7,null],[13,"GoldChainmail","","",7,null],[13,"GrapplingHook","","",7,null],[13,"Chain","","",7,null],[13,"ShadowScale","","",7,null],[13,"PiggyBank","","",7,null],[13,"MiningHelmet","","",7,null],[13,"CopperHelmet","","",7,null],[13,"IronHelmet","","",7,null],[13,"SilverHelmet","","",7,null],[13,"GoldHelmet","","",7,null],[13,"WoodWall","","",7,null],[13,"WoodPlatform","","",7,null],[13,"FlintlockPistol","","",7,null],[13,"Musket","","",7,null],[13,"MusketBall","","",7,null],[13,"Minishark","","",7,null],[13,"IronBow","","",7,null],[13,"ShadowGreaves","","",7,null],[13,"ShadowScalemail","","",7,null],[13,"ShadowHelmet","","",7,null],[13,"NightmarePickaxe","","",7,null],[13,"TheBreaker","","",7,null],[13,"Candle","","",7,null],[13,"CopperChandelier","","",7,null],[13,"SilverChandelier","","",7,null],[13,"GoldChandelier","","",7,null],[13,"ManaCrystal","","",7,null],[13,"LesserManaPotion","","",7,null],[13,"BandofStarpower","","",7,null],[13,"FlowerofFire","","",7,null],[13,"MagicMissile","","",7,null],[13,"DirtRod","","",7,null],[13,"ShadowOrb","","",7,null],[13,"Meteorite","","",7,null],[13,"MeteoriteBar","","",7,null],[13,"Hook","","",7,null],[13,"Flamarang","","",7,null],[13,"MoltenFury","","",7,null],[13,"FieryGreatsword","","",7,null],[13,"MoltenPickaxe","","",7,null],[13,"MeteorHelmet","","",7,null],[13,"MeteorSuit","","",7,null],[13,"MeteorLeggings","","",7,null],[13,"BottledWater","","",7,null],[13,"SpaceGun","","",7,null],[13,"RocketBoots","","",7,null],[13,"GrayBrick","","",7,null],[13,"GrayBrickWall","","",7,null],[13,"RedBrick","","",7,null],[13,"RedBrickWall","","",7,null],[13,"ClayBlock","","",7,null],[13,"BlueBrick","","",7,null],[13,"BlueBrickWall","","",7,null],[13,"ChainLantern","","",7,null],[13,"GreenBrick","","",7,null],[13,"GreenBrickWall","","",7,null],[13,"PinkBrick","","",7,null],[13,"PinkBrickWall","","",7,null],[13,"GoldBrick","","",7,null],[13,"GoldBrickWall","","",7,null],[13,"SilverBrick","","",7,null],[13,"SilverBrickWall","","",7,null],[13,"CopperBrick","","",7,null],[13,"CopperBrickWall","","",7,null],[13,"Spike","","",7,null],[13,"WaterCandle","","",7,null],[13,"Book","","",7,null],[13,"Cobweb","","",7,null],[13,"NecroHelmet","","",7,null],[13,"NecroBreastplate","","",7,null],[13,"NecroGreaves","","",7,null],[13,"Bone","","",7,null],[13,"Muramasa","","",7,null],[13,"CobaltShield","","",7,null],[13,"AquaScepter","","",7,null],[13,"LuckyHorseshoe","","",7,null],[13,"ShinyRedBalloon","","",7,null],[13,"Harpoon","","",7,null],[13,"SpikyBall","","",7,null],[13,"BallOhurt","","",7,null],[13,"BlueMoon","","",7,null],[13,"Handgun","","",7,null],[13,"WaterBolt","","",7,null],[13,"Bomb","","",7,null],[13,"Dynamite","","",7,null],[13,"Grenade","","",7,null],[13,"SandBlock","","",7,null],[13,"Glass","","",7,null],[13,"Sign","","",7,null],[13,"AshBlock","","",7,null],[13,"Obsidian","","",7,null],[13,"Hellstone","","",7,null],[13,"HellstoneBar","","",7,null],[13,"MudBlock","","",7,null],[13,"Sapphire","","",7,null],[13,"Ruby","","",7,null],[13,"Emerald","","",7,null],[13,"Topaz","","",7,null],[13,"Amethyst","","",7,null],[13,"Diamond","","",7,null],[13,"GlowingMushroom","","",7,null],[13,"Star","","",7,null],[13,"IvyWhip","","",7,null],[13,"BreathingReed","","",7,null],[13,"Flipper","","",7,null],[13,"HealingPotion","","",7,null],[13,"ManaPotion","","",7,null],[13,"BladeofGrass","","",7,null],[13,"ThornChakram","","",7,null],[13,"ObsidianBrick","","",7,null],[13,"ObsidianSkull","","",7,null],[13,"MushroomGrassSeeds","","",7,null],[13,"JungleGrassSeeds","","",7,null],[13,"WoodenHammer","","",7,null],[13,"StarCannon","","",7,null],[13,"BluePhaseblade","","",7,null],[13,"RedPhaseblade","","",7,null],[13,"GreenPhaseblade","","",7,null],[13,"PurplePhaseblade","","",7,null],[13,"WhitePhaseblade","","",7,null],[13,"YellowPhaseblade","","",7,null],[13,"MeteorHamaxe","","",7,null],[13,"EmptyBucket","","",7,null],[13,"WaterBucket","","",7,null],[13,"LavaBucket","","",7,null],[13,"JungleRose","","",7,null],[13,"Stinger","","",7,null],[13,"Vine","","",7,null],[13,"FeralClaws","","",7,null],[13,"AnkletoftheWind","","",7,null],[13,"StaffofRegrowth","","",7,null],[13,"HellstoneBrick","","",7,null],[13,"WhoopieCushion","","",7,null],[13,"Shackle","","",7,null],[13,"MoltenHamaxe","","",7,null],[13,"Flamelash","","",7,null],[13,"PhoenixBlaster","","",7,null],[13,"Sunfury","","",7,null],[13,"Hellforge","","",7,null],[13,"ClayPot","","",7,null],[13,"NaturesGift","","",7,null],[13,"Bed","","",7,null],[13,"Silk","","",7,null],[13,"LesserRestorationPotion","","",7,null],[13,"RestorationPotion","","",7,null],[13,"JungleHat","","",7,null],[13,"JungleShirt","","",7,null],[13,"JunglePants","","",7,null],[13,"MoltenHelmet","","",7,null],[13,"MoltenBreastplate","","",7,null],[13,"MoltenGreaves","","",7,null],[13,"MeteorShot","","",7,null],[13,"StickyBomb","","",7,null],[13,"BlackLens","","",7,null],[13,"Sunglasses","","",7,null],[13,"WizardHat","","",7,null],[13,"TopHat","","",7,null],[13,"TuxedoShirt","","",7,null],[13,"TuxedoPants","","",7,null],[13,"SummerHat","","",7,null],[13,"BunnyHood","","",7,null],[13,"PlumbersHat","","",7,null],[13,"PlumbersShirt","","",7,null],[13,"PlumbersPants","","",7,null],[13,"HerosHat","","",7,null],[13,"HerosShirt","","",7,null],[13,"HerosPants","","",7,null],[13,"FishBowl","","",7,null],[13,"ArchaeologistsHat","","",7,null],[13,"ArchaeologistsJacket","","",7,null],[13,"ArchaeologistsPants","","",7,null],[13,"BlackThread","","",7,null],[13,"GreenThread","","",7,null],[13,"NinjaHood","","",7,null],[13,"NinjaShirt","","",7,null],[13,"NinjaPants","","",7,null],[13,"Leather","","",7,null],[13,"RedHat","","",7,null],[13,"Goldfish","","",7,null],[13,"Robe","","",7,null],[13,"RobotHat","","",7,null],[13,"GoldCrown","","",7,null],[13,"HellfireArrow","","",7,null],[13,"Sandgun","","",7,null],[13,"GuideVoodooDoll","","",7,null],[13,"DivingHelmet","","",7,null],[13,"FamiliarShirt","","",7,null],[13,"FamiliarPants","","",7,null],[13,"FamiliarWig","","",7,null],[13,"DemonScythe","","",7,null],[13,"NightsEdge","","",7,null],[13,"DarkLance","","",7,null],[13,"Coral","","",7,null],[13,"Cactus","","",7,null],[13,"Trident","","",7,null],[13,"SilverBullet","","",7,null],[13,"ThrowingKnife","","",7,null],[13,"Spear","","",7,null],[13,"Blowpipe","","",7,null],[13,"Glowstick","","",7,null],[13,"Seed","","",7,null],[13,"WoodenBoomerang","","",7,null],[13,"Aglet","","",7,null],[13,"StickyGlowstick","","",7,null],[13,"PoisonedKnife","","",7,null],[13,"ObsidianSkinPotion","","",7,null],[13,"RegenerationPotion","","",7,null],[13,"SwiftnessPotion","","",7,null],[13,"GillsPotion","","",7,null],[13,"IronskinPotion","","",7,null],[13,"ManaRegenerationPotion","","",7,null],[13,"MagicPowerPotion","","",7,null],[13,"FeatherfallPotion","","",7,null],[13,"SpelunkerPotion","","",7,null],[13,"InvisibilityPotion","","",7,null],[13,"ShinePotion","","",7,null],[13,"NightOwlPotion","","",7,null],[13,"BattlePotion","","",7,null],[13,"ThornsPotion","","",7,null],[13,"WaterWalkingPotion","","",7,null],[13,"ArcheryPotion","","",7,null],[13,"HunterPotion","","",7,null],[13,"GravitationPotion","","",7,null],[13,"GoldChest","","",7,null],[13,"DaybloomSeeds","","",7,null],[13,"MoonglowSeeds","","",7,null],[13,"BlinkrootSeeds","","",7,null],[13,"DeathweedSeeds","","",7,null],[13,"WaterleafSeeds","","",7,null],[13,"FireblossomSeeds","","",7,null],[13,"Daybloom","","",7,null],[13,"Moonglow","","",7,null],[13,"Blinkroot","","",7,null],[13,"Deathweed","","",7,null],[13,"Waterleaf","","",7,null],[13,"Fireblossom","","",7,null],[13,"SharkFin","","",7,null],[13,"Feather","","",7,null],[13,"Tombstone","","",7,null],[13,"MimeMask","","",7,null],[13,"AntlionMandible","","",7,null],[13,"IllegalGunParts","","",7,null],[13,"TheDoctorsShirt","","",7,null],[13,"TheDoctorsPants","","",7,null],[13,"GoldenKey","","",7,null],[13,"ShadowChest","","",7,null],[13,"ShadowKey","","",7,null],[13,"ObsidianBrickWall","","",7,null],[13,"JungleSpores","","",7,null],[13,"Loom","","",7,null],[13,"Piano","","",7,null],[13,"Dresser","","",7,null],[13,"Bench","","",7,null],[13,"Bathtub","","",7,null],[13,"RedBanner","","",7,null],[13,"GreenBanner","","",7,null],[13,"BlueBanner","","",7,null],[13,"YellowBanner","","",7,null],[13,"LampPost","","",7,null],[13,"TikiTorch","","",7,null],[13,"Barrel","","",7,null],[13,"ChineseLantern","","",7,null],[13,"CookingPot","","",7,null],[13,"Safe","","",7,null],[13,"SkullLantern","","",7,null],[13,"TrashCan","","",7,null],[13,"Candelabra","","",7,null],[13,"PinkVase","","",7,null],[13,"Mug","","",7,null],[13,"Keg","","",7,null],[13,"Ale","","",7,null],[13,"Bookcase","","",7,null],[13,"Throne","","",7,null],[13,"Bowl","","",7,null],[13,"BowlofSoup","","",7,null],[13,"Toilet","","",7,null],[13,"GrandfatherClock","","",7,null],[13,"ArmorStatue","","",7,null],[13,"GoblinBattleStandard","","",7,null],[13,"TatteredCloth","","",7,null],[13,"Sawmill","","",7,null],[13,"CobaltOre","","",7,null],[13,"MythrilOre","","",7,null],[13,"AdamantiteOre","","",7,null],[13,"Pwnhammer","","",7,null],[13,"Excalibur","","",7,null],[13,"HallowedSeeds","","",7,null],[13,"EbonsandBlock","","",7,null],[13,"CobaltHat","","",7,null],[13,"CobaltHelmet","","",7,null],[13,"CobaltMask","","",7,null],[13,"CobaltBreastplate","","",7,null],[13,"CobaltLeggings","","",7,null],[13,"MythrilHood","","",7,null],[13,"MythrilHelmet","","",7,null],[13,"MythrilHat","","",7,null],[13,"MythrilChainmail","","",7,null],[13,"MythrilGreaves","","",7,null],[13,"CobaltBar","","",7,null],[13,"MythrilBar","","",7,null],[13,"CobaltChainsaw","","",7,null],[13,"MythrilChainsaw","","",7,null],[13,"CobaltDrill","","",7,null],[13,"MythrilDrill","","",7,null],[13,"AdamantiteChainsaw","","",7,null],[13,"AdamantiteDrill","","",7,null],[13,"DaoofPow","","",7,null],[13,"MythrilHalberd","","",7,null],[13,"AdamantiteBar","","",7,null],[13,"GlassWall","","",7,null],[13,"Compass","","",7,null],[13,"DivingGear","","",7,null],[13,"Gps","","",7,null],[13,"ObsidianHorseshoe","","",7,null],[13,"ObsidianShield","","",7,null],[13,"TinkerersWorkshop","","",7,null],[13,"CloudinaBalloon","","",7,null],[13,"AdamantiteHeadgear","","",7,null],[13,"AdamantiteHelmet","","",7,null],[13,"AdamantiteMask","","",7,null],[13,"AdamantiteBreastplate","","",7,null],[13,"AdamantiteLeggings","","",7,null],[13,"SpectreBoots","","",7,null],[13,"AdamantiteGlaive","","",7,null],[13,"Toolbelt","","",7,null],[13,"PearlsandBlock","","",7,null],[13,"PearlstoneBlock","","",7,null],[13,"MiningShirt","","",7,null],[13,"MiningPants","","",7,null],[13,"PearlstoneBrick","","",7,null],[13,"IridescentBrick","","",7,null],[13,"MudstoneBlock","","",7,null],[13,"CobaltBrick","","",7,null],[13,"MythrilBrick","","",7,null],[13,"PearlstoneBrickWall","","",7,null],[13,"IridescentBrickWall","","",7,null],[13,"MudstoneBrickWall","","",7,null],[13,"CobaltBrickWall","","",7,null],[13,"MythrilBrickWall","","",7,null],[13,"HolyWater","","",7,null],[13,"UnholyWater","","",7,null],[13,"SiltBlock","","",7,null],[13,"FairyBell","","",7,null],[13,"BreakerBlade","","",7,null],[13,"BlueTorch","","",7,null],[13,"RedTorch","","",7,null],[13,"GreenTorch","","",7,null],[13,"PurpleTorch","","",7,null],[13,"WhiteTorch","","",7,null],[13,"YellowTorch","","",7,null],[13,"DemonTorch","","",7,null],[13,"ClockworkAssaultRifle","","",7,null],[13,"CobaltRepeater","","",7,null],[13,"MythrilRepeater","","",7,null],[13,"DualHook","","",7,null],[13,"StarStatue","","",7,null],[13,"SwordStatue","","",7,null],[13,"SlimeStatue","","",7,null],[13,"GoblinStatue","","",7,null],[13,"ShieldStatue","","",7,null],[13,"BatStatue","","",7,null],[13,"FishStatue","","",7,null],[13,"BunnyStatue","","",7,null],[13,"SkeletonStatue","","",7,null],[13,"ReaperStatue","","",7,null],[13,"WomanStatue","","",7,null],[13,"ImpStatue","","",7,null],[13,"GargoyleStatue","","",7,null],[13,"GloomStatue","","",7,null],[13,"HornetStatue","","",7,null],[13,"BombStatue","","",7,null],[13,"CrabStatue","","",7,null],[13,"HammerStatue","","",7,null],[13,"PotionStatue","","",7,null],[13,"SpearStatue","","",7,null],[13,"CrossStatue","","",7,null],[13,"JellyfishStatue","","",7,null],[13,"BowStatue","","",7,null],[13,"BoomerangStatue","","",7,null],[13,"BootStatue","","",7,null],[13,"ChestStatue","","",7,null],[13,"BirdStatue","","",7,null],[13,"AxeStatue","","",7,null],[13,"CorruptStatue","","",7,null],[13,"TreeStatue","","",7,null],[13,"AnvilStatue","","",7,null],[13,"PickaxeStatue","","",7,null],[13,"MushroomStatue","","",7,null],[13,"EyeballStatue","","",7,null],[13,"PillarStatue","","",7,null],[13,"HeartStatue","","",7,null],[13,"PotStatue","","",7,null],[13,"SunflowerStatue","","",7,null],[13,"KingStatue","","",7,null],[13,"QueenStatue","","",7,null],[13,"PiranhaStatue","","",7,null],[13,"PlankedWall","","",7,null],[13,"WoodenBeam","","",7,null],[13,"AdamantiteRepeater","","",7,null],[13,"AdamantiteSword","","",7,null],[13,"CobaltSword","","",7,null],[13,"MythrilSword","","",7,null],[13,"MoonCharm","","",7,null],[13,"Ruler","","",7,null],[13,"CrystalBall","","",7,null],[13,"DiscoBall","","",7,null],[13,"SorcererEmblem","","",7,null],[13,"WarriorEmblem","","",7,null],[13,"RangerEmblem","","",7,null],[13,"DemonWings","","",7,null],[13,"AngelWings","","",7,null],[13,"MagicalHarp","","",7,null],[13,"RainbowRod","","",7,null],[13,"IceRod","","",7,null],[13,"NeptunesShell","","",7,null],[13,"Mannequin","","",7,null],[13,"GreaterHealingPotion","","",7,null],[13,"GreaterManaPotion","","",7,null],[13,"PixieDust","","",7,null],[13,"CrystalShard","","",7,null],[13,"ClownHat","","",7,null],[13,"ClownShirt","","",7,null],[13,"ClownPants","","",7,null],[13,"Flamethrower","","",7,null],[13,"Bell","","",7,null],[13,"Harp","","",7,null],[13,"Wrench","","",7,null],[13,"WireCutter","","",7,null],[13,"ActiveStoneBlock","","",7,null],[13,"InactiveStoneBlock","","",7,null],[13,"Lever","","",7,null],[13,"LaserRifle","","",7,null],[13,"CrystalBullet","","",7,null],[13,"HolyArrow","","",7,null],[13,"MagicDagger","","",7,null],[13,"CrystalStorm","","",7,null],[13,"CursedFlames","","",7,null],[13,"SoulofLight","","",7,null],[13,"SoulofNight","","",7,null],[13,"CursedFlame","","",7,null],[13,"CursedTorch","","",7,null],[13,"AdamantiteForge","","",7,null],[13,"MythrilAnvil","","",7,null],[13,"UnicornHorn","","",7,null],[13,"DarkShard","","",7,null],[13,"LightShard","","",7,null],[13,"RedPressurePlate","","",7,null],[13,"Wire","","",7,null],[13,"SpellTome","","",7,null],[13,"StarCloak","","",7,null],[13,"Megashark","","",7,null],[13,"Shotgun","","",7,null],[13,"PhilosophersStone","","",7,null],[13,"TitanGlove","","",7,null],[13,"CobaltNaginata","","",7,null],[13,"Switch","","",7,null],[13,"DartTrap","","",7,null],[13,"Boulder","","",7,null],[13,"GreenPressurePlate","","",7,null],[13,"GrayPressurePlate","","",7,null],[13,"BrownPressurePlate","","",7,null],[13,"MechanicalEye","","",7,null],[13,"CursedArrow","","",7,null],[13,"CursedBullet","","",7,null],[13,"SoulofFright","","",7,null],[13,"SoulofMight","","",7,null],[13,"SoulofSight","","",7,null],[13,"Gungnir","","",7,null],[13,"HallowedPlateMail","","",7,null],[13,"HallowedGreaves","","",7,null],[13,"HallowedHelmet","","",7,null],[13,"CrossNecklace","","",7,null],[13,"ManaFlower","","",7,null],[13,"MechanicalWorm","","",7,null],[13,"MechanicalSkull","","",7,null],[13,"HallowedHeadgear","","",7,null],[13,"HallowedMask","","",7,null],[13,"SlimeCrown","","",7,null],[13,"LightDisc","","",7,null],[13,"MusicBoxOverworldDay","","",7,null],[13,"MusicBoxEerie","","",7,null],[13,"MusicBoxNight","","",7,null],[13,"MusicBoxTitle","","",7,null],[13,"MusicBoxUnderground","","",7,null],[13,"MusicBoxBoss1","","",7,null],[13,"MusicBoxJungle","","",7,null],[13,"MusicBoxCorruption","","",7,null],[13,"MusicBoxUndergroundCorruption","","",7,null],[13,"MusicBoxTheHallow","","",7,null],[13,"MusicBoxBoss2","","",7,null],[13,"MusicBoxUndergroundHallow","","",7,null],[13,"MusicBoxBoss3","","",7,null],[13,"SoulofFlight","","",7,null],[13,"MusicBox","","",7,null],[13,"DemoniteBrick","","",7,null],[13,"HallowedRepeater","","",7,null],[13,"Drax","","",7,null],[13,"Explosives","","",7,null],[13,"InletPump","","",7,null],[13,"OutletPump","","",7,null],[13,"Timer1second","","",7,null],[13,"Timer3second","","",7,null],[13,"Timer5second","","",7,null],[13,"CandyCaneBlock","","",7,null],[13,"CandyCaneWall","","",7,null],[13,"SantaHat","","",7,null],[13,"SantaShirt","","",7,null],[13,"SantaPants","","",7,null],[13,"GreenCandyCaneBlock","","",7,null],[13,"GreenCandyCaneWall","","",7,null],[13,"SnowBlock","","",7,null],[13,"SnowBrick","","",7,null],[13,"SnowBrickWall","","",7,null],[13,"BlueLight","","",7,null],[13,"RedLight","","",7,null],[13,"GreenLight","","",7,null],[13,"BluePresent","","",7,null],[13,"GreenPresent","","",7,null],[13,"YellowPresent","","",7,null],[13,"SnowGlobe","","",7,null],[13,"Carrot","","",7,null],[13,"AdamantiteBeam","","",7,null],[13,"AdamantiteBeamWall","","",7,null],[13,"DemoniteBrickWall","","",7,null],[13,"SandstoneBrick","","",7,null],[13,"SandstoneBrickWall","","",7,null],[13,"EbonstoneBrick","","",7,null],[13,"EbonstoneBrickWall","","",7,null],[13,"RedStucco","","",7,null],[13,"YellowStucco","","",7,null],[13,"GreenStucco","","",7,null],[13,"GrayStucco","","",7,null],[13,"RedStuccoWall","","",7,null],[13,"YellowStuccoWall","","",7,null],[13,"GreenStuccoWall","","",7,null],[13,"GrayStuccoWall","","",7,null],[13,"Ebonwood","","",7,null],[13,"RichMahogany","","",7,null],[13,"Pearlwood","","",7,null],[13,"EbonwoodWall","","",7,null],[13,"RichMahoganyWall","","",7,null],[13,"PearlwoodWall","","",7,null],[13,"EbonwoodChest","","",7,null],[13,"RichMahoganyChest","","",7,null],[13,"PearlwoodChest","","",7,null],[13,"EbonwoodChair","","",7,null],[13,"RichMahoganyChair","","",7,null],[13,"PearlwoodChair","","",7,null],[13,"EbonwoodPlatform","","",7,null],[13,"RichMahoganyPlatform","","",7,null],[13,"PearlwoodPlatform","","",7,null],[13,"BonePlatform","","",7,null],[13,"EbonwoodWorkBench","","",7,null],[13,"RichMahoganyWorkBench","","",7,null],[13,"PearlwoodWorkBench","","",7,null],[13,"EbonwoodTable","","",7,null],[13,"RichMahoganyTable","","",7,null],[13,"PearlwoodTable","","",7,null],[13,"EbonwoodPiano","","",7,null],[13,"RichMahoganyPiano","","",7,null],[13,"PearlwoodPiano","","",7,null],[13,"EbonwoodBed","","",7,null],[13,"RichMahoganyBed","","",7,null],[13,"PearlwoodBed","","",7,null],[13,"EbonwoodDresser","","",7,null],[13,"RichMahoganyDresser","","",7,null],[13,"PearlwoodDresser","","",7,null],[13,"EbonwoodDoor","","",7,null],[13,"RichMahoganyDoor","","",7,null],[13,"PearlwoodDoor","","",7,null],[13,"EbonwoodSword","","",7,null],[13,"EbonwoodHammer","","",7,null],[13,"EbonwoodBow","","",7,null],[13,"RichMahoganySword","","",7,null],[13,"RichMahoganyHammer","","",7,null],[13,"RichMahoganyBow","","",7,null],[13,"PearlwoodSword","","",7,null],[13,"PearlwoodHammer","","",7,null],[13,"PearlwoodBow","","",7,null],[13,"RainbowBrick","","",7,null],[13,"RainbowBrickWall","","",7,null],[13,"IceBlock","","",7,null],[13,"RedsWings","","",7,null],[13,"RedsHelmet","","",7,null],[13,"RedsBreastplate","","",7,null],[13,"RedsLeggings","","",7,null],[13,"Fish","","",7,null],[13,"IceBoomerang","","",7,null],[13,"Keybrand","","",7,null],[13,"Cutlass","","",7,null],[13,"BorealWoodWorkBench","","",7,null],[13,"TrueExcalibur","","",7,null],[13,"TrueNightsEdge","","",7,null],[13,"Frostbrand","","",7,null],[13,"BorealWoodTable","","",7,null],[13,"RedPotion","","",7,null],[13,"TacticalShotgun","","",7,null],[13,"IvyChest","","",7,null],[13,"IceChest","","",7,null],[13,"Marrow","","",7,null],[13,"UnholyTrident","","",7,null],[13,"FrostHelmet","","",7,null],[13,"FrostBreastplate","","",7,null],[13,"FrostLeggings","","",7,null],[13,"TinHelmet","","",7,null],[13,"TinChainmail","","",7,null],[13,"TinGreaves","","",7,null],[13,"LeadHelmet","","",7,null],[13,"LeadChainmail","","",7,null],[13,"LeadGreaves","","",7,null],[13,"TungstenHelmet","","",7,null],[13,"TungstenChainmail","","",7,null],[13,"TungstenGreaves","","",7,null],[13,"PlatinumHelmet","","",7,null],[13,"PlatinumChainmail","","",7,null],[13,"PlatinumGreaves","","",7,null],[13,"TinOre","","",7,null],[13,"LeadOre","","",7,null],[13,"TungstenOre","","",7,null],[13,"PlatinumOre","","",7,null],[13,"TinBar","","",7,null],[13,"LeadBar","","",7,null],[13,"TungstenBar","","",7,null],[13,"PlatinumBar","","",7,null],[13,"TinWatch","","",7,null],[13,"TungstenWatch","","",7,null],[13,"PlatinumWatch","","",7,null],[13,"TinChandelier","","",7,null],[13,"TungstenChandelier","","",7,null],[13,"PlatinumChandelier","","",7,null],[13,"PlatinumCandle","","",7,null],[13,"PlatinumCandelabra","","",7,null],[13,"PlatinumCrown","","",7,null],[13,"LeadAnvil","","",7,null],[13,"TinBrick","","",7,null],[13,"TungstenBrick","","",7,null],[13,"PlatinumBrick","","",7,null],[13,"TinBrickWall","","",7,null],[13,"TungstenBrickWall","","",7,null],[13,"PlatinumBrickWall","","",7,null],[13,"BeamSword","","",7,null],[13,"IceBlade","","",7,null],[13,"IceBow","","",7,null],[13,"FrostStaff","","",7,null],[13,"WoodHelmet","","",7,null],[13,"WoodBreastplate","","",7,null],[13,"WoodGreaves","","",7,null],[13,"EbonwoodHelmet","","",7,null],[13,"EbonwoodBreastplate","","",7,null],[13,"EbonwoodGreaves","","",7,null],[13,"RichMahoganyHelmet","","",7,null],[13,"RichMahoganyBreastplate","","",7,null],[13,"RichMahoganyGreaves","","",7,null],[13,"PearlwoodHelmet","","",7,null],[13,"PearlwoodBreastplate","","",7,null],[13,"PearlwoodGreaves","","",7,null],[13,"AmethystStaff","","",7,null],[13,"TopazStaff","","",7,null],[13,"SapphireStaff","","",7,null],[13,"EmeraldStaff","","",7,null],[13,"RubyStaff","","",7,null],[13,"DiamondStaff","","",7,null],[13,"GrassWall","","",7,null],[13,"JungleWall","","",7,null],[13,"FlowerWall","","",7,null],[13,"Jetpack","","",7,null],[13,"ButterflyWings","","",7,null],[13,"CactusWall","","",7,null],[13,"Cloud","","",7,null],[13,"CloudWall","","",7,null],[13,"Seaweed","","",7,null],[13,"RuneHat","","",7,null],[13,"RuneRobe","","",7,null],[13,"MushroomSpear","","",7,null],[13,"TerraBlade","","",7,null],[13,"GrenadeLauncher","","",7,null],[13,"RocketLauncher","","",7,null],[13,"ProximityMineLauncher","","",7,null],[13,"FairyWings","","",7,null],[13,"SlimeBlock","","",7,null],[13,"FleshBlock","","",7,null],[13,"MushroomWall","","",7,null],[13,"RainCloud","","",7,null],[13,"BoneBlock","","",7,null],[13,"FrozenSlimeBlock","","",7,null],[13,"BoneBlockWall","","",7,null],[13,"SlimeBlockWall","","",7,null],[13,"FleshBlockWall","","",7,null],[13,"RocketI","","",7,null],[13,"RocketIi","","",7,null],[13,"RocketIii","","",7,null],[13,"RocketIv","","",7,null],[13,"AsphaltBlock","","",7,null],[13,"CobaltPickaxe","","",7,null],[13,"MythrilPickaxe","","",7,null],[13,"AdamantitePickaxe","","",7,null],[13,"Clentaminator","","",7,null],[13,"GreenSolution","","",7,null],[13,"BlueSolution","","",7,null],[13,"PurpleSolution","","",7,null],[13,"DarkBlueSolution","","",7,null],[13,"RedSolution","","",7,null],[13,"HarpyWings","","",7,null],[13,"BoneWings","","",7,null],[13,"Hammush","","",7,null],[13,"NettleBurst","","",7,null],[13,"AnkhBanner","","",7,null],[13,"SnakeBanner","","",7,null],[13,"OmegaBanner","","",7,null],[13,"CrimsonHelmet","","",7,null],[13,"CrimsonScalemail","","",7,null],[13,"CrimsonGreaves","","",7,null],[13,"BloodButcherer","","",7,null],[13,"TendonBow","","",7,null],[13,"FleshGrinder","","",7,null],[13,"DeathbringerPickaxe","","",7,null],[13,"BloodLustCluster","","",7,null],[13,"TheUndertaker","","",7,null],[13,"TheMeatball","","",7,null],[13,"TheRottedFork","","",7,null],[13,"EskimoHood","","",7,null],[13,"EskimoCoat","","",7,null],[13,"EskimoPants","","",7,null],[13,"LivingWoodChair","","",7,null],[13,"CactusChair","","",7,null],[13,"BoneChair","","",7,null],[13,"FleshChair","","",7,null],[13,"MushroomChair","","",7,null],[13,"BoneWorkBench","","",7,null],[13,"CactusWorkBench","","",7,null],[13,"FleshWorkBench","","",7,null],[13,"MushroomWorkBench","","",7,null],[13,"SlimeWorkBench","","",7,null],[13,"CactusDoor","","",7,null],[13,"FleshDoor","","",7,null],[13,"MushroomDoor","","",7,null],[13,"LivingWoodDoor","","",7,null],[13,"BoneDoor","","",7,null],[13,"FlameWings","","",7,null],[13,"FrozenWings","","",7,null],[13,"GhostWings","","",7,null],[13,"SunplateBlock","","",7,null],[13,"DiscWall","","",7,null],[13,"SkywareChair","","",7,null],[13,"BoneTable","","",7,null],[13,"FleshTable","","",7,null],[13,"LivingWoodTable","","",7,null],[13,"SkywareTable","","",7,null],[13,"LivingWoodChest","","",7,null],[13,"LivingWoodWand","","",7,null],[13,"PurpleIceBlock","","",7,null],[13,"PinkIceBlock","","",7,null],[13,"RedIceBlock","","",7,null],[13,"CrimstoneBlock","","",7,null],[13,"SkywareDoor","","",7,null],[13,"SkywareChest","","",7,null],[13,"SteampunkHat","","",7,null],[13,"SteampunkShirt","","",7,null],[13,"SteampunkPants","","",7,null],[13,"BeeHat","","",7,null],[13,"BeeShirt","","",7,null],[13,"BeePants","","",7,null],[13,"WorldBanner","","",7,null],[13,"SunBanner","","",7,null],[13,"GravityBanner","","",7,null],[13,"PharaohsMask","","",7,null],[13,"Actuator","","",7,null],[13,"BlueWrench","","",7,null],[13,"GreenWrench","","",7,null],[13,"BluePressurePlate","","",7,null],[13,"YellowPressurePlate","","",7,null],[13,"DiscountCard","","",7,null],[13,"LuckyCoin","","",7,null],[13,"UnicornonaStick","","",7,null],[13,"SandstorminaBottle","","",7,null],[13,"BorealWoodSofa","","",7,null],[13,"BeachBall","","",7,null],[13,"CharmofMyths","","",7,null],[13,"MoonShell","","",7,null],[13,"StarVeil","","",7,null],[13,"WaterWalkingBoots","","",7,null],[13,"Tiara","","",7,null],[13,"PrincessDress","","",7,null],[13,"PharaohsRobe","","",7,null],[13,"GreenCap","","",7,null],[13,"MushroomCap","","",7,null],[13,"TamOshanter","","",7,null],[13,"MummyMask","","",7,null],[13,"MummyShirt","","",7,null],[13,"MummyPants","","",7,null],[13,"CowboyHat","","",7,null],[13,"CowboyJacket","","",7,null],[13,"CowboyPants","","",7,null],[13,"PirateHat","","",7,null],[13,"PirateShirt","","",7,null],[13,"PiratePants","","",7,null],[13,"VikingHelmet","","",7,null],[13,"CrimtaneOre","","",7,null],[13,"CactusSword","","",7,null],[13,"CactusPickaxe","","",7,null],[13,"IceBrick","","",7,null],[13,"IceBrickWall","","",7,null],[13,"AdhesiveBandage","","",7,null],[13,"ArmorPolish","","",7,null],[13,"Bezoar","","",7,null],[13,"Blindfold","","",7,null],[13,"FastClock","","",7,null],[13,"Megaphone","","",7,null],[13,"Nazar","","",7,null],[13,"Vitamins","","",7,null],[13,"TrifoldMap","","",7,null],[13,"CactusHelmet","","",7,null],[13,"CactusBreastplate","","",7,null],[13,"CactusLeggings","","",7,null],[13,"PowerGlove","","",7,null],[13,"LightningBoots","","",7,null],[13,"SunStone","","",7,null],[13,"MoonStone","","",7,null],[13,"ArmorBracing","","",7,null],[13,"MedicatedBandage","","",7,null],[13,"ThePlan","","",7,null],[13,"CountercurseMantra","","",7,null],[13,"CoinGun","","",7,null],[13,"LavaCharm","","",7,null],[13,"ObsidianWaterWalkingBoots","","",7,null],[13,"LavaWaders","","",7,null],[13,"PureWaterFountain","","",7,null],[13,"DesertWaterFountain","","",7,null],[13,"Shadewood","","",7,null],[13,"ShadewoodDoor","","",7,null],[13,"ShadewoodPlatform","","",7,null],[13,"ShadewoodChest","","",7,null],[13,"ShadewoodChair","","",7,null],[13,"ShadewoodWorkBench","","",7,null],[13,"ShadewoodTable","","",7,null],[13,"ShadewoodDresser","","",7,null],[13,"ShadewoodPiano","","",7,null],[13,"ShadewoodBed","","",7,null],[13,"ShadewoodSword","","",7,null],[13,"ShadewoodHammer","","",7,null],[13,"ShadewoodBow","","",7,null],[13,"ShadewoodHelmet","","",7,null],[13,"ShadewoodBreastplate","","",7,null],[13,"ShadewoodGreaves","","",7,null],[13,"ShadewoodWall","","",7,null],[13,"Cannon","","",7,null],[13,"Cannonball","","",7,null],[13,"FlareGun","","",7,null],[13,"Flare","","",7,null],[13,"BoneWand","","",7,null],[13,"LeafWand","","",7,null],[13,"FlyingCarpet","","",7,null],[13,"AvengerEmblem","","",7,null],[13,"MechanicalGlove","","",7,null],[13,"LandMine","","",7,null],[13,"PaladinsShield","","",7,null],[13,"WebSlinger","","",7,null],[13,"JungleWaterFountain","","",7,null],[13,"IcyWaterFountain","","",7,null],[13,"CorruptWaterFountain","","",7,null],[13,"CrimsonWaterFountain","","",7,null],[13,"HallowedWaterFountain","","",7,null],[13,"BloodWaterFountain","","",7,null],[13,"Umbrella","","",7,null],[13,"ChlorophyteOre","","",7,null],[13,"SteampunkWings","","",7,null],[13,"Snowball","","",7,null],[13,"IceSkates","","",7,null],[13,"SnowballLauncher","","",7,null],[13,"WebCoveredChest","","",7,null],[13,"ClimbingClaws","","",7,null],[13,"AncientIronHelmet","","",7,null],[13,"AncientGoldHelmet","","",7,null],[13,"AncientShadowHelmet","","",7,null],[13,"AncientShadowScalemail","","",7,null],[13,"AncientShadowGreaves","","",7,null],[13,"AncientNecroHelmet","","",7,null],[13,"AncientCobaltHelmet","","",7,null],[13,"AncientCobaltBreastplate","","",7,null],[13,"AncientCobaltLeggings","","",7,null],[13,"BlackBelt","","",7,null],[13,"Boomstick","","",7,null],[13,"Rope","","",7,null],[13,"Campfire","","",7,null],[13,"Marshmallow","","",7,null],[13,"MarshmallowonaStick","","",7,null],[13,"CookedMarshmallow","","",7,null],[13,"RedRocket","","",7,null],[13,"GreenRocket","","",7,null],[13,"BlueRocket","","",7,null],[13,"YellowRocket","","",7,null],[13,"IceTorch","","",7,null],[13,"ShoeSpikes","","",7,null],[13,"TigerClimbingGear","","",7,null],[13,"Tabi","","",7,null],[13,"PinkEskimoHood","","",7,null],[13,"PinkEskimoCoat","","",7,null],[13,"PinkEskimoPants","","",7,null],[13,"PinkThread","","",7,null],[13,"ManaRegenerationBand","","",7,null],[13,"SandstorminaBalloon","","",7,null],[13,"MasterNinjaGear","","",7,null],[13,"RopeCoil","","",7,null],[13,"Blowgun","","",7,null],[13,"BlizzardinaBottle","","",7,null],[13,"FrostburnArrow","","",7,null],[13,"EnchantedSword","","",7,null],[13,"PickaxeAxe","","",7,null],[13,"CobaltWaraxe","","",7,null],[13,"MythrilWaraxe","","",7,null],[13,"AdamantiteWaraxe","","",7,null],[13,"EatersBone","","",7,null],[13,"BlendOmatic","","",7,null],[13,"MeatGrinder","","",7,null],[13,"Extractinator","","",7,null],[13,"Solidifier","","",7,null],[13,"Amber","","",7,null],[13,"ConfettiGun","","",7,null],[13,"ChlorophyteMask","","",7,null],[13,"ChlorophyteHelmet","","",7,null],[13,"ChlorophyteHeadgear","","",7,null],[13,"ChlorophytePlateMail","","",7,null],[13,"ChlorophyteGreaves","","",7,null],[13,"ChlorophyteBar","","",7,null],[13,"RedDye","","",7,null],[13,"OrangeDye","","",7,null],[13,"YellowDye","","",7,null],[13,"LimeDye","","",7,null],[13,"GreenDye","","",7,null],[13,"TealDye","","",7,null],[13,"CyanDye","","",7,null],[13,"SkyBlueDye","","",7,null],[13,"BlueDye","","",7,null],[13,"PurpleDye","","",7,null],[13,"VioletDye","","",7,null],[13,"PinkDye","","",7,null],[13,"RedandBlackDye","","",7,null],[13,"OrangeandBlackDye","","",7,null],[13,"YellowandBlackDye","","",7,null],[13,"LimeandBlackDye","","",7,null],[13,"GreenandBlackDye","","",7,null],[13,"TealandBlackDye","","",7,null],[13,"CyanandBlackDye","","",7,null],[13,"SkyBlueandBlackDye","","",7,null],[13,"BlueandBlackDye","","",7,null],[13,"PurpleandBlackDye","","",7,null],[13,"VioletandBlackDye","","",7,null],[13,"PinkandBlackDye","","",7,null],[13,"FlameDye","","",7,null],[13,"FlameAndBlackDye","","",7,null],[13,"GreenFlameDye","","",7,null],[13,"GreenFlameAndBlackDye","","",7,null],[13,"BlueFlameDye","","",7,null],[13,"BlueFlameAndBlackDye","","",7,null],[13,"SilverDye","","",7,null],[13,"BrightRedDye","","",7,null],[13,"BrightOrangeDye","","",7,null],[13,"BrightYellowDye","","",7,null],[13,"BrightLimeDye","","",7,null],[13,"BrightGreenDye","","",7,null],[13,"BrightTealDye","","",7,null],[13,"BrightCyanDye","","",7,null],[13,"BrightSkyBlueDye","","",7,null],[13,"BrightBlueDye","","",7,null],[13,"BrightPurpleDye","","",7,null],[13,"BrightVioletDye","","",7,null],[13,"BrightPinkDye","","",7,null],[13,"BlackDye","","",7,null],[13,"RedandSilverDye","","",7,null],[13,"OrangeandSilverDye","","",7,null],[13,"YellowandSilverDye","","",7,null],[13,"LimeandSilverDye","","",7,null],[13,"GreenandSilverDye","","",7,null],[13,"TealandSilverDye","","",7,null],[13,"CyanandSilverDye","","",7,null],[13,"SkyBlueandSilverDye","","",7,null],[13,"BlueandSilverDye","","",7,null],[13,"PurpleandSilverDye","","",7,null],[13,"VioletandSilverDye","","",7,null],[13,"PinkandSilverDye","","",7,null],[13,"IntenseFlameDye","","",7,null],[13,"IntenseGreenFlameDye","","",7,null],[13,"IntenseBlueFlameDye","","",7,null],[13,"RainbowDye","","",7,null],[13,"IntenseRainbowDye","","",7,null],[13,"YellowGradientDye","","",7,null],[13,"CyanGradientDye","","",7,null],[13,"VioletGradientDye","","",7,null],[13,"Paintbrush","","",7,null],[13,"PaintRoller","","",7,null],[13,"RedPaint","","",7,null],[13,"OrangePaint","","",7,null],[13,"YellowPaint","","",7,null],[13,"LimePaint","","",7,null],[13,"GreenPaint","","",7,null],[13,"TealPaint","","",7,null],[13,"CyanPaint","","",7,null],[13,"SkyBluePaint","","",7,null],[13,"BluePaint","","",7,null],[13,"PurplePaint","","",7,null],[13,"VioletPaint","","",7,null],[13,"PinkPaint","","",7,null],[13,"DeepRedPaint","","",7,null],[13,"DeepOrangePaint","","",7,null],[13,"DeepYellowPaint","","",7,null],[13,"DeepLimePaint","","",7,null],[13,"DeepGreenPaint","","",7,null],[13,"DeepTealPaint","","",7,null],[13,"DeepCyanPaint","","",7,null],[13,"DeepSkyBluePaint","","",7,null],[13,"DeepBluePaint","","",7,null],[13,"DeepPurplePaint","","",7,null],[13,"DeepVioletPaint","","",7,null],[13,"DeepPinkPaint","","",7,null],[13,"BlackPaint","","",7,null],[13,"WhitePaint","","",7,null],[13,"GrayPaint","","",7,null],[13,"PaintScraper","","",7,null],[13,"LihzahrdBrick","","",7,null],[13,"LihzahrdBrickWall","","",7,null],[13,"SlushBlock","","",7,null],[13,"PalladiumOre","","",7,null],[13,"OrichalcumOre","","",7,null],[13,"TitaniumOre","","",7,null],[13,"TealMushroom","","",7,null],[13,"GreenMushroom","","",7,null],[13,"SkyBlueFlower","","",7,null],[13,"YellowMarigold","","",7,null],[13,"BlueBerries","","",7,null],[13,"LimeKelp","","",7,null],[13,"PinkPricklyPear","","",7,null],[13,"OrangeBloodroot","","",7,null],[13,"RedHusk","","",7,null],[13,"CyanHusk","","",7,null],[13,"VioletHusk","","",7,null],[13,"PurpleMucos","","",7,null],[13,"BlackInk","","",7,null],[13,"DyeVat","","",7,null],[13,"BeeGun","","",7,null],[13,"PossessedHatchet","","",7,null],[13,"BeeKeeper","","",7,null],[13,"Hive","","",7,null],[13,"HoneyBlock","","",7,null],[13,"HiveWall","","",7,null],[13,"CrispyHoneyBlock","","",7,null],[13,"HoneyBucket","","",7,null],[13,"HiveWand","","",7,null],[13,"Beenade","","",7,null],[13,"GravityGlobe","","",7,null],[13,"HoneyComb","","",7,null],[13,"Abeemination","","",7,null],[13,"BottledHoney","","",7,null],[13,"RainHat","","",7,null],[13,"RainCoat","","",7,null],[13,"LihzahrdDoor","","",7,null],[13,"DungeonDoor","","",7,null],[13,"LeadDoor","","",7,null],[13,"IronDoor","","",7,null],[13,"TempleKey","","",7,null],[13,"LihzahrdChest","","",7,null],[13,"LihzahrdChair","","",7,null],[13,"LihzahrdTable","","",7,null],[13,"LihzahrdWorkBench","","",7,null],[13,"SuperDartTrap","","",7,null],[13,"FlameTrap","","",7,null],[13,"SpikyBallTrap","","",7,null],[13,"SpearTrap","","",7,null],[13,"WoodenSpike","","",7,null],[13,"LihzahrdPressurePlate","","",7,null],[13,"LihzahrdStatue","","",7,null],[13,"LihzahrdWatcherStatue","","",7,null],[13,"LihzahrdGuardianStatue","","",7,null],[13,"WaspGun","","",7,null],[13,"PiranhaGun","","",7,null],[13,"PygmyStaff","","",7,null],[13,"PygmyNecklace","","",7,null],[13,"TikiMask","","",7,null],[13,"TikiShirt","","",7,null],[13,"TikiPants","","",7,null],[13,"LeafWings","","",7,null],[13,"BlizzardinaBalloon","","",7,null],[13,"BundleofBalloons","","",7,null],[13,"BatWings","","",7,null],[13,"BoneSword","","",7,null],[13,"HerculesBeetle","","",7,null],[13,"SmokeBomb","","",7,null],[13,"BoneKey","","",7,null],[13,"Nectar","","",7,null],[13,"TikiTotem","","",7,null],[13,"LizardEgg","","",7,null],[13,"GraveMarker","","",7,null],[13,"CrossGraveMarker","","",7,null],[13,"Headstone","","",7,null],[13,"Gravestone","","",7,null],[13,"Obelisk","","",7,null],[13,"LeafBlower","","",7,null],[13,"ChlorophyteBullet","","",7,null],[13,"ParrotCracker","","",7,null],[13,"StrangeGlowingMushroom","","",7,null],[13,"Seedling","","",7,null],[13,"WispinaBottle","","",7,null],[13,"PalladiumBar","","",7,null],[13,"PalladiumSword","","",7,null],[13,"PalladiumPike","","",7,null],[13,"PalladiumRepeater","","",7,null],[13,"PalladiumPickaxe","","",7,null],[13,"PalladiumDrill","","",7,null],[13,"PalladiumChainsaw","","",7,null],[13,"OrichalcumBar","","",7,null],[13,"OrichalcumSword","","",7,null],[13,"OrichalcumHalberd","","",7,null],[13,"OrichalcumRepeater","","",7,null],[13,"OrichalcumPickaxe","","",7,null],[13,"OrichalcumDrill","","",7,null],[13,"OrichalcumChainsaw","","",7,null],[13,"TitaniumBar","","",7,null],[13,"TitaniumSword","","",7,null],[13,"TitaniumTrident","","",7,null],[13,"TitaniumRepeater","","",7,null],[13,"TitaniumPickaxe","","",7,null],[13,"TitaniumDrill","","",7,null],[13,"TitaniumChainsaw","","",7,null],[13,"PalladiumMask","","",7,null],[13,"PalladiumHelmet","","",7,null],[13,"PalladiumHeadgear","","",7,null],[13,"PalladiumBreastplate","","",7,null],[13,"PalladiumLeggings","","",7,null],[13,"OrichalcumMask","","",7,null],[13,"OrichalcumHelmet","","",7,null],[13,"OrichalcumHeadgear","","",7,null],[13,"OrichalcumBreastplate","","",7,null],[13,"OrichalcumLeggings","","",7,null],[13,"TitaniumMask","","",7,null],[13,"TitaniumHelmet","","",7,null],[13,"TitaniumHeadgear","","",7,null],[13,"TitaniumBreastplate","","",7,null],[13,"TitaniumLeggings","","",7,null],[13,"OrichalcumAnvil","","",7,null],[13,"TitaniumForge","","",7,null],[13,"PalladiumWaraxe","","",7,null],[13,"OrichalcumWaraxe","","",7,null],[13,"TitaniumWaraxe","","",7,null],[13,"HallowedBar","","",7,null],[13,"ChlorophyteClaymore","","",7,null],[13,"ChlorophyteSaber","","",7,null],[13,"ChlorophytePartisan","","",7,null],[13,"ChlorophyteShotbow","","",7,null],[13,"ChlorophytePickaxe","","",7,null],[13,"ChlorophyteDrill","","",7,null],[13,"ChlorophyteChainsaw","","",7,null],[13,"ChlorophyteGreataxe","","",7,null],[13,"ChlorophyteWarhammer","","",7,null],[13,"ChlorophyteArrow","","",7,null],[13,"AmethystHook","","",7,null],[13,"TopazHook","","",7,null],[13,"SapphireHook","","",7,null],[13,"EmeraldHook","","",7,null],[13,"RubyHook","","",7,null],[13,"DiamondHook","","",7,null],[13,"AmberMosquito","","",7,null],[13,"UmbrellaHat","","",7,null],[13,"NimbusRod","","",7,null],[13,"OrangeTorch","","",7,null],[13,"CrimsandBlock","","",7,null],[13,"BeeCloak","","",7,null],[13,"EyeoftheGolem","","",7,null],[13,"HoneyBalloon","","",7,null],[13,"BlueHorseshoeBalloon","","",7,null],[13,"WhiteHorseshoeBalloon","","",7,null],[13,"YellowHorseshoeBalloon","","",7,null],[13,"FrozenTurtleShell","","",7,null],[13,"SniperRifle","","",7,null],[13,"VenusMagnum","","",7,null],[13,"CrimsonRod","","",7,null],[13,"CrimtaneBar","","",7,null],[13,"Stynger","","",7,null],[13,"FlowerPow","","",7,null],[13,"RainbowGun","","",7,null],[13,"StyngerBolt","","",7,null],[13,"ChlorophyteJackhammer","","",7,null],[13,"Teleporter","","",7,null],[13,"FlowerofFrost","","",7,null],[13,"Uzi","","",7,null],[13,"MagnetSphere","","",7,null],[13,"PurpleStainedGlass","","",7,null],[13,"YellowStainedGlass","","",7,null],[13,"BlueStainedGlass","","",7,null],[13,"GreenStainedGlass","","",7,null],[13,"RedStainedGlass","","",7,null],[13,"MulticoloredStainedGlass","","",7,null],[13,"SkeletronHand","","",7,null],[13,"Skull","","",7,null],[13,"BallaHat","","",7,null],[13,"GangstaHat","","",7,null],[13,"SailorHat","","",7,null],[13,"EyePatch","","",7,null],[13,"SailorShirt","","",7,null],[13,"SailorPants","","",7,null],[13,"SkeletronMask","","",7,null],[13,"AmethystRobe","","",7,null],[13,"TopazRobe","","",7,null],[13,"SapphireRobe","","",7,null],[13,"EmeraldRobe","","",7,null],[13,"RubyRobe","","",7,null],[13,"DiamondRobe","","",7,null],[13,"WhiteTuxedoShirt","","",7,null],[13,"WhiteTuxedoPants","","",7,null],[13,"PanicNecklace","","",7,null],[13,"LifeFruit","","",7,null],[13,"LihzahrdAltar","","",7,null],[13,"LihzahrdPowerCell","","",7,null],[13,"Picksaw","","",7,null],[13,"HeatRay","","",7,null],[13,"StaffofEarth","","",7,null],[13,"GolemFist","","",7,null],[13,"WaterChest","","",7,null],[13,"Binoculars","","",7,null],[13,"RifleScope","","",7,null],[13,"DestroyerEmblem","","",7,null],[13,"HighVelocityBullet","","",7,null],[13,"JellyfishNecklace","","",7,null],[13,"ZombieArm","","",7,null],[13,"TheAxe","","",7,null],[13,"IceSickle","","",7,null],[13,"ClothierVoodooDoll","","",7,null],[13,"PoisonStaff","","",7,null],[13,"SlimeStaff","","",7,null],[13,"PoisonDart","","",7,null],[13,"EyeSpring","","",7,null],[13,"ToySled","","",7,null],[13,"BookofSkulls","","",7,null],[13,"Kocannon","","",7,null],[13,"PirateMap","","",7,null],[13,"TurtleHelmet","","",7,null],[13,"TurtleScaleMail","","",7,null],[13,"TurtleLeggings","","",7,null],[13,"SnowballCannon","","",7,null],[13,"BonePickaxe","","",7,null],[13,"MagicQuiver","","",7,null],[13,"MagmaStone","","",7,null],[13,"ObsidianRose","","",7,null],[13,"Bananarang","","",7,null],[13,"ChainKnife","","",7,null],[13,"RodofDiscord","","",7,null],[13,"DeathSickle","","",7,null],[13,"TurtleShell","","",7,null],[13,"TissueSample","","",7,null],[13,"Vertebrae","","",7,null],[13,"BloodySpine","","",7,null],[13,"Ichor","","",7,null],[13,"IchorTorch","","",7,null],[13,"IchorArrow","","",7,null],[13,"IchorBullet","","",7,null],[13,"GoldenShower","","",7,null],[13,"BunnyCannon","","",7,null],[13,"ExplosiveBunny","","",7,null],[13,"VialofVenom","","",7,null],[13,"FlaskofVenom","","",7,null],[13,"VenomArrow","","",7,null],[13,"VenomBullet","","",7,null],[13,"FireGauntlet","","",7,null],[13,"Cog","","",7,null],[13,"Confetti","","",7,null],[13,"Nanites","","",7,null],[13,"ExplosivePowder","","",7,null],[13,"GoldDust","","",7,null],[13,"PartyBullet","","",7,null],[13,"NanoBullet","","",7,null],[13,"ExplodingBullet","","",7,null],[13,"GoldenBullet","","",7,null],[13,"FlaskofCursedFlames","","",7,null],[13,"FlaskofFire","","",7,null],[13,"FlaskofGold","","",7,null],[13,"FlaskofIchor","","",7,null],[13,"FlaskofNanites","","",7,null],[13,"FlaskofParty","","",7,null],[13,"FlaskofPoison","","",7,null],[13,"EyeofCthulhuTrophy","","",7,null],[13,"EaterofWorldsTrophy","","",7,null],[13,"BrainofCthulhuTrophy","","",7,null],[13,"SkeletronTrophy","","",7,null],[13,"QueenBeeTrophy","","",7,null],[13,"WallofFleshTrophy","","",7,null],[13,"DestroyerTrophy","","",7,null],[13,"SkeletronPrimeTrophy","","",7,null],[13,"RetinazerTrophy","","",7,null],[13,"SpazmatismTrophy","","",7,null],[13,"PlanteraTrophy","","",7,null],[13,"GolemTrophy","","",7,null],[13,"BloodMoonRising","","",7,null],[13,"TheHangedMan","","",7,null],[13,"GloryoftheFire","","",7,null],[13,"BoneWarp","","",7,null],[13,"WallSkeleton","","",7,null],[13,"HangingSkeleton","","",7,null],[13,"BlueSlabWall","","",7,null],[13,"BlueTiledWall","","",7,null],[13,"PinkSlabWall","","",7,null],[13,"PinkTiledWall","","",7,null],[13,"GreenSlabWall","","",7,null],[13,"GreenTiledWall","","",7,null],[13,"BlueBrickPlatform","","",7,null],[13,"PinkBrickPlatform","","",7,null],[13,"GreenBrickPlatform","","",7,null],[13,"MetalShelf","","",7,null],[13,"BrassShelf","","",7,null],[13,"WoodShelf","","",7,null],[13,"BrassLantern","","",7,null],[13,"CagedLantern","","",7,null],[13,"CarriageLantern","","",7,null],[13,"AlchemyLantern","","",7,null],[13,"DiablostLamp","","",7,null],[13,"OilRagSconse","","",7,null],[13,"BlueDungeonChair","","",7,null],[13,"BlueDungeonTable","","",7,null],[13,"BlueDungeonWorkBench","","",7,null],[13,"GreenDungeonChair","","",7,null],[13,"GreenDungeonTable","","",7,null],[13,"GreenDungeonWorkBench","","",7,null],[13,"PinkDungeonChair","","",7,null],[13,"PinkDungeonTable","","",7,null],[13,"PinkDungeonWorkBench","","",7,null],[13,"BlueDungeonCandle","","",7,null],[13,"GreenDungeonCandle","","",7,null],[13,"PinkDungeonCandle","","",7,null],[13,"BlueDungeonVase","","",7,null],[13,"GreenDungeonVase","","",7,null],[13,"PinkDungeonVase","","",7,null],[13,"BlueDungeonDoor","","",7,null],[13,"GreenDungeonDoor","","",7,null],[13,"PinkDungeonDoor","","",7,null],[13,"BlueDungeonBookcase","","",7,null],[13,"GreenDungeonBookcase","","",7,null],[13,"PinkDungeonBookcase","","",7,null],[13,"Catacomb","","",7,null],[13,"DungeonShelf","","",7,null],[13,"SkellingtonJskellingsworth","","",7,null],[13,"TheCursedMan","","",7,null],[13,"TheEyeSeestheEnd","","",7,null],[13,"SomethingEvilisWatchingYou","","",7,null],[13,"TheTwinsHaveAwoken","","",7,null],[13,"TheScreamer","","",7,null],[13,"GoblinsPlayingPoker","","",7,null],[13,"Dryadisque","","",7,null],[13,"Sunflowers","","",7,null],[13,"TerrarianGothic","","",7,null],[13,"Beanie","","",7,null],[13,"ImbuingStation","","",7,null],[13,"StarinaBottle","","",7,null],[13,"EmptyBullet","","",7,null],[13,"Impact","","",7,null],[13,"PoweredbyBirds","","",7,null],[13,"TheDestroyer","","",7,null],[13,"ThePersistencyofEyes","","",7,null],[13,"UnicornCrossingtheHallows","","",7,null],[13,"GreatWave","","",7,null],[13,"StarryNight","","",7,null],[13,"GuidePicasso","","",7,null],[13,"TheGuardiansGaze","","",7,null],[13,"FatherofSomeone","","",7,null],[13,"NurseLisa","","",7,null],[13,"ShadowbeamStaff","","",7,null],[13,"InfernoFork","","",7,null],[13,"SpectreStaff","","",7,null],[13,"WoodenFence","","",7,null],[13,"LeadFence","","",7,null],[13,"BubbleMachine","","",7,null],[13,"BubbleWand","","",7,null],[13,"MarchingBonesBanner","","",7,null],[13,"NecromanticSign","","",7,null],[13,"RustedCompanyStandard","","",7,null],[13,"RaggedBrotherhoodSigil","","",7,null],[13,"MoltenLegionFlag","","",7,null],[13,"DiabolicSigil","","",7,null],[13,"ObsidianPlatform","","",7,null],[13,"ObsidianDoor","","",7,null],[13,"ObsidianChair","","",7,null],[13,"ObsidianTable","","",7,null],[13,"ObsidianWorkBench","","",7,null],[13,"ObsidianVase","","",7,null],[13,"ObsidianBookcase","","",7,null],[13,"HellboundBanner","","",7,null],[13,"HellHammerBanner","","",7,null],[13,"HelltowerBanner","","",7,null],[13,"LostHopesofManBanner","","",7,null],[13,"ObsidianWatcherBanner","","",7,null],[13,"LavaEruptsBanner","","",7,null],[13,"BlueDungeonBed","","",7,null],[13,"GreenDungeonBed","","",7,null],[13,"PinkDungeonBed","","",7,null],[13,"ObsidianBed","","",7,null],[13,"Waldo","","",7,null],[13,"Darkness","","",7,null],[13,"DarkSoulReaper","","",7,null],[13,"Land","","",7,null],[13,"TrappedGhost","","",7,null],[13,"DemonsEye","","",7,null],[13,"FindingGold","","",7,null],[13,"FirstEncounter","","",7,null],[13,"GoodMorning","","",7,null],[13,"UndergroundReward","","",7,null],[13,"ThroughtheWindow","","",7,null],[13,"PlaceAbovetheClouds","","",7,null],[13,"DoNotStepontheGrass","","",7,null],[13,"ColdWatersintheWhiteLand","","",7,null],[13,"LightlessChasms","","",7,null],[13,"TheLandofDeceivingLooks","","",7,null],[13,"Daylight","","",7,null],[13,"SecretoftheSands","","",7,null],[13,"DeadlandComesAlive","","",7,null],[13,"EvilPresence","","",7,null],[13,"SkyGuardian","","",7,null],[13,"AmericanExplosive","","",7,null],[13,"Discover","","",7,null],[13,"HandEarth","","",7,null],[13,"OldMiner","","",7,null],[13,"Skelehead","","",7,null],[13,"FacingtheCerebralMastermind","","",7,null],[13,"LakeofFire","","",7,null],[13,"TrioSuperHeroes","","",7,null],[13,"SpectreHood","","",7,null],[13,"SpectreRobe","","",7,null],[13,"SpectrePants","","",7,null],[13,"SpectrePickaxe","","",7,null],[13,"SpectreHamaxe","","",7,null],[13,"Ectoplasm","","",7,null],[13,"GothicChair","","",7,null],[13,"GothicTable","","",7,null],[13,"GothicWorkBench","","",7,null],[13,"GothicBookcase","","",7,null],[13,"PaladinsHammer","","",7,null],[13,"Swathelmet","","",7,null],[13,"BeeWings","","",7,null],[13,"GiantHarpyFeather","","",7,null],[13,"BoneFeather","","",7,null],[13,"FireFeather","","",7,null],[13,"IceFeather","","",7,null],[13,"BrokenBatWing","","",7,null],[13,"TatteredBeeWing","","",7,null],[13,"LargeAmethyst","","",7,null],[13,"LargeTopaz","","",7,null],[13,"LargeSapphire","","",7,null],[13,"LargeEmerald","","",7,null],[13,"LargeRuby","","",7,null],[13,"LargeDiamond","","",7,null],[13,"JungleChest","","",7,null],[13,"CorruptionChest","","",7,null],[13,"CrimsonChest","","",7,null],[13,"HallowedChest","","",7,null],[13,"FrozenChest","","",7,null],[13,"JungleKey","","",7,null],[13,"CorruptionKey","","",7,null],[13,"CrimsonKey","","",7,null],[13,"HallowedKey","","",7,null],[13,"FrozenKey","","",7,null],[13,"ImpFace","","",7,null],[13,"OminousPresence","","",7,null],[13,"ShiningMoon","","",7,null],[13,"LivingGore","","",7,null],[13,"FlowingMagma","","",7,null],[13,"SpectrePaintbrush","","",7,null],[13,"SpectrePaintRoller","","",7,null],[13,"SpectrePaintScraper","","",7,null],[13,"ShroomiteHeadgear","","",7,null],[13,"ShroomiteMask","","",7,null],[13,"ShroomiteHelmet","","",7,null],[13,"ShroomiteBreastplate","","",7,null],[13,"ShroomiteLeggings","","",7,null],[13,"Autohammer","","",7,null],[13,"ShroomiteBar","","",7,null],[13,"Sdmg","","",7,null],[13,"CenxsTiara","","",7,null],[13,"CenxsBreastplate","","",7,null],[13,"CenxsLeggings","","",7,null],[13,"CrownosMask","","",7,null],[13,"CrownosBreastplate","","",7,null],[13,"CrownosLeggings","","",7,null],[13,"WillsHelmet","","",7,null],[13,"WillsBreastplate","","",7,null],[13,"WillsLeggings","","",7,null],[13,"JimsHelmet","","",7,null],[13,"JimsBreastplate","","",7,null],[13,"JimsLeggings","","",7,null],[13,"AaronsHelmet","","",7,null],[13,"AaronsBreastplate","","",7,null],[13,"AaronsLeggings","","",7,null],[13,"VampireKnives","","",7,null],[13,"BrokenHeroSword","","",7,null],[13,"ScourgeoftheCorruptor","","",7,null],[13,"StaffoftheFrostHydra","","",7,null],[13,"TheCreationoftheGuide","","",7,null],[13,"TheMerchant","","",7,null],[13,"CrownoDevoursHisLunch","","",7,null],[13,"RareEnchantment","","",7,null],[13,"GloriousNight","","",7,null],[13,"SweetheartNecklace","","",7,null],[13,"FlurryBoots","","",7,null],[13,"DtownsHelmet","","",7,null],[13,"DtownsBreastplate","","",7,null],[13,"DtownsLeggings","","",7,null],[13,"DtownsWings","","",7,null],[13,"WillsWings","","",7,null],[13,"CrownosWings","","",7,null],[13,"CenxsWings","","",7,null],[13,"CenxsDress","","",7,null],[13,"CenxsDressPants","","",7,null],[13,"PalladiumColumn","","",7,null],[13,"PalladiumColumnWall","","",7,null],[13,"BubblegumBlock","","",7,null],[13,"BubblegumBlockWall","","",7,null],[13,"TitanstoneBlock","","",7,null],[13,"TitanstoneBlockWall","","",7,null],[13,"MagicCuffs","","",7,null],[13,"MusicBoxSnow","","",7,null],[13,"MusicBoxSpace","","",7,null],[13,"MusicBoxCrimson","","",7,null],[13,"MusicBoxBoss4","","",7,null],[13,"MusicBoxAltOverworldDay","","",7,null],[13,"MusicBoxRain","","",7,null],[13,"MusicBoxIce","","",7,null],[13,"MusicBoxDesert","","",7,null],[13,"MusicBoxOcean","","",7,null],[13,"MusicBoxDungeon","","",7,null],[13,"MusicBoxPlantera","","",7,null],[13,"MusicBoxBoss5","","",7,null],[13,"MusicBoxTemple","","",7,null],[13,"MusicBoxEclipse","","",7,null],[13,"MusicBoxMushrooms","","",7,null],[13,"ButterflyDust","","",7,null],[13,"AnkhCharm","","",7,null],[13,"AnkhShield","","",7,null],[13,"BlueFlare","","",7,null],[13,"AnglerFishBanner","","",7,null],[13,"AngryNimbusBanner","","",7,null],[13,"AnomuraFungusBanner","","",7,null],[13,"AntlionBanner","","",7,null],[13,"ArapaimaBanner","","",7,null],[13,"ArmoredSkeletonBanner","","",7,null],[13,"BatBanner","","",7,null],[13,"BirdBanner","","",7,null],[13,"BlackRecluseBanner","","",7,null],[13,"BloodFeederBanner","","",7,null],[13,"BloodJellyBanner","","",7,null],[13,"BloodCrawlerBanner","","",7,null],[13,"BoneSerpentBanner","","",7,null],[13,"BunnyBanner","","",7,null],[13,"ChaosElementalBanner","","",7,null],[13,"MimicBanner","","",7,null],[13,"ClownBanner","","",7,null],[13,"CorruptBunnyBanner","","",7,null],[13,"CorruptGoldfishBanner","","",7,null],[13,"CrabBanner","","",7,null],[13,"CrimeraBanner","","",7,null],[13,"CrimsonAxeBanner","","",7,null],[13,"CursedHammerBanner","","",7,null],[13,"DemonBanner","","",7,null],[13,"DemonEyeBanner","","",7,null],[13,"DerplingBanner","","",7,null],[13,"EaterofSoulsBanner","","",7,null],[13,"EnchantedSwordBanner","","",7,null],[13,"ZombieEskimoBanner","","",7,null],[13,"FaceMonsterBanner","","",7,null],[13,"FloatyGrossBanner","","",7,null],[13,"FlyingFishBanner","","",7,null],[13,"FlyingSnakeBanner","","",7,null],[13,"FrankensteinBanner","","",7,null],[13,"FungiBulbBanner","","",7,null],[13,"FungoFishBanner","","",7,null],[13,"GastropodBanner","","",7,null],[13,"GoblinThiefBanner","","",7,null],[13,"GoblinSorcererBanner","","",7,null],[13,"GoblinPeonBanner","","",7,null],[13,"GoblinScoutBanner","","",7,null],[13,"GoblinWarriorBanner","","",7,null],[13,"GoldfishBanner","","",7,null],[13,"HarpyBanner","","",7,null],[13,"HellbatBanner","","",7,null],[13,"HerplingBanner","","",7,null],[13,"HornetBanner","","",7,null],[13,"IceElementalBanner","","",7,null],[13,"IcyMermanBanner","","",7,null],[13,"FireImpBanner","","",7,null],[13,"JellyfishBanner","","",7,null],[13,"JungleCreeperBanner","","",7,null],[13,"LihzahrdBanner","","",7,null],[13,"ManEaterBanner","","",7,null],[13,"MeteorHeadBanner","","",7,null],[13,"MothBanner","","",7,null],[13,"MummyBanner","","",7,null],[13,"MushiLadybugBanner","","",7,null],[13,"ParrotBanner","","",7,null],[13,"PigronBanner","","",7,null],[13,"PiranhaBanner","","",7,null],[13,"PirateBanner","","",7,null],[13,"PixieBanner","","",7,null],[13,"RaincoatZombieBanner","","",7,null],[13,"ReaperBanner","","",7,null],[13,"SharkBanner","","",7,null],[13,"SkeletonBanner","","",7,null],[13,"SkeletonMageBanner","","",7,null],[13,"SlimeBanner","","",7,null],[13,"SnowFlinxBanner","","",7,null],[13,"SpiderBanner","","",7,null],[13,"SporeZombieBanner","","",7,null],[13,"SwampThingBanner","","",7,null],[13,"TortoiseBanner","","",7,null],[13,"ToxicSludgeBanner","","",7,null],[13,"UmbrellaSlimeBanner","","",7,null],[13,"UnicornBanner","","",7,null],[13,"VampireBanner","","",7,null],[13,"VultureBanner","","",7,null],[13,"NypmhBanner","","",7,null],[13,"WerewolfBanner","","",7,null],[13,"WolfBanner","","",7,null],[13,"WorldFeederBanner","","",7,null],[13,"WormBanner","","",7,null],[13,"WraithBanner","","",7,null],[13,"WyvernBanner","","",7,null],[13,"ZombieBanner","","",7,null],[13,"GlassPlatform","","",7,null],[13,"GlassChair","","",7,null],[13,"GoldenChair","","",7,null],[13,"GoldenToilet","","",7,null],[13,"BarStool","","",7,null],[13,"HoneyChair","","",7,null],[13,"SteampunkChair","","",7,null],[13,"GlassDoor","","",7,null],[13,"GoldenDoor","","",7,null],[13,"HoneyDoor","","",7,null],[13,"SteampunkDoor","","",7,null],[13,"GlassTable","","",7,null],[13,"BanquetTable","","",7,null],[13,"Bar","","",7,null],[13,"GoldenTable","","",7,null],[13,"HoneyTable","","",7,null],[13,"SteampunkTable","","",7,null],[13,"GlassBed","","",7,null],[13,"GoldenBed","","",7,null],[13,"HoneyBed","","",7,null],[13,"SteampunkBed","","",7,null],[13,"LivingWoodWall","","",7,null],[13,"FartinaJar","","",7,null],[13,"Pumpkin","","",7,null],[13,"PumpkinWall","","",7,null],[13,"Hay","","",7,null],[13,"HayWall","","",7,null],[13,"SpookyWood","","",7,null],[13,"SpookyWoodWall","","",7,null],[13,"PumpkinHelmet","","",7,null],[13,"PumpkinBreastplate","","",7,null],[13,"PumpkinLeggings","","",7,null],[13,"CandyApple","","",7,null],[13,"SoulCake","","",7,null],[13,"NurseHat","","",7,null],[13,"NurseShirt","","",7,null],[13,"NursePants","","",7,null],[13,"WizardsHat","","",7,null],[13,"GuyFawkesMask","","",7,null],[13,"DyeTraderRobe","","",7,null],[13,"SteampunkGoggles","","",7,null],[13,"CyborgHelmet","","",7,null],[13,"CyborgShirt","","",7,null],[13,"CyborgPants","","",7,null],[13,"CreeperMask","","",7,null],[13,"CreeperShirt","","",7,null],[13,"CreeperPants","","",7,null],[13,"CatMask","","",7,null],[13,"CatShirt","","",7,null],[13,"CatPants","","",7,null],[13,"GhostMask","","",7,null],[13,"GhostShirt","","",7,null],[13,"PumpkinMask","","",7,null],[13,"PumpkinShirt","","",7,null],[13,"PumpkinPants","","",7,null],[13,"RobotMask","","",7,null],[13,"RobotShirt","","",7,null],[13,"RobotPants","","",7,null],[13,"UnicornMask","","",7,null],[13,"UnicornShirt","","",7,null],[13,"UnicornPants","","",7,null],[13,"VampireMask","","",7,null],[13,"VampireShirt","","",7,null],[13,"VampirePants","","",7,null],[13,"WitchHat","","",7,null],[13,"LeprechaunHat","","",7,null],[13,"LeprechaunShirt","","",7,null],[13,"LeprechaunPants","","",7,null],[13,"PixieShirt","","",7,null],[13,"PixiePants","","",7,null],[13,"PrincessHat","","",7,null],[13,"PrincessDressNew","","",7,null],[13,"GoodieBag","","",7,null],[13,"WitchDress","","",7,null],[13,"WitchBoots","","",7,null],[13,"BrideofFrankensteinMask","","",7,null],[13,"BrideofFrankensteinDress","","",7,null],[13,"KarateTortoiseMask","","",7,null],[13,"KarateTortoiseShirt","","",7,null],[13,"KarateTortoisePants","","",7,null],[13,"CandyCornRifle","","",7,null],[13,"CandyCorn","","",7,null],[13,"JackOlanternLauncher","","",7,null],[13,"ExplosiveJackOlantern","","",7,null],[13,"Sickle","","",7,null],[13,"PumpkinPie","","",7,null],[13,"ScarecrowHat","","",7,null],[13,"ScarecrowShirt","","",7,null],[13,"ScarecrowPants","","",7,null],[13,"Cauldron","","",7,null],[13,"PumpkinChair","","",7,null],[13,"PumpkinDoor","","",7,null],[13,"PumpkinTable","","",7,null],[13,"PumpkinWorkBench","","",7,null],[13,"PumpkinPlatform","","",7,null],[13,"TatteredFairyWings","","",7,null],[13,"SpiderEgg","","",7,null],[13,"MagicalPumpkinSeed","","",7,null],[13,"BatHook","","",7,null],[13,"BatScepter","","",7,null],[13,"RavenStaff","","",7,null],[13,"JungleKeyMold","","",7,null],[13,"CorruptionKeyMold","","",7,null],[13,"CrimsonKeyMold","","",7,null],[13,"HallowedKeyMold","","",7,null],[13,"FrozenKeyMold","","",7,null],[13,"HangingJackOlantern","","",7,null],[13,"RottenEgg","","",7,null],[13,"UnluckyYarn","","",7,null],[13,"BlackFairyDust","","",7,null],[13,"Jackelier","","",7,null],[13,"JackOlantern","","",7,null],[13,"SpookyChair","","",7,null],[13,"SpookyDoor","","",7,null],[13,"SpookyTable","","",7,null],[13,"SpookyWorkBench","","",7,null],[13,"SpookyPlatform","","",7,null],[13,"ReaperHood","","",7,null],[13,"ReaperRobe","","",7,null],[13,"FoxMask","","",7,null],[13,"FoxShirt","","",7,null],[13,"FoxPants","","",7,null],[13,"CatEars","","",7,null],[13,"BloodyMachete","","",7,null],[13,"TheHorsemansBlade","","",7,null],[13,"BladedGlove","","",7,null],[13,"PumpkinSeed","","",7,null],[13,"SpookyHook","","",7,null],[13,"SpookyWings","","",7,null],[13,"SpookyTwig","","",7,null],[13,"SpookyHelmet","","",7,null],[13,"SpookyBreastplate","","",7,null],[13,"SpookyLeggings","","",7,null],[13,"StakeLauncher","","",7,null],[13,"Stake","","",7,null],[13,"CursedSapling","","",7,null],[13,"SpaceCreatureMask","","",7,null],[13,"SpaceCreatureShirt","","",7,null],[13,"SpaceCreaturePants","","",7,null],[13,"WolfMask","","",7,null],[13,"WolfShirt","","",7,null],[13,"WolfPants","","",7,null],[13,"PumpkinMoonMedallion","","",7,null],[13,"NecromanticScroll","","",7,null],[13,"JackingSkeletron","","",7,null],[13,"BitterHarvest","","",7,null],[13,"BloodMoonCountess","","",7,null],[13,"HallowsEve","","",7,null],[13,"MorbidCuriosity","","",7,null],[13,"TreasureHunterShirt","","",7,null],[13,"TreasureHunterPants","","",7,null],[13,"DryadCoverings","","",7,null],[13,"DryadLoincloth","","",7,null],[13,"MourningWoodTrophy","","",7,null],[13,"PumpkingTrophy","","",7,null],[13,"JackOlanternMask","","",7,null],[13,"SniperScope","","",7,null],[13,"HeartLantern","","",7,null],[13,"JellyfishDivingGear","","",7,null],[13,"ArcticDivingGear","","",7,null],[13,"FrostsparkBoots","","",7,null],[13,"FartInAballoon","","",7,null],[13,"PapyrusScarab","","",7,null],[13,"CelestialStone","","",7,null],[13,"Hoverboard","","",7,null],[13,"CandyCane","","",7,null],[13,"SugarPlum","","",7,null],[13,"Present","","",7,null],[13,"RedRyder","","",7,null],[13,"FestiveWings","","",7,null],[13,"PineTreeBlock","","",7,null],[13,"ChristmasTree","","",7,null],[13,"StarTopper1","","",7,null],[13,"StarTopper2","","",7,null],[13,"StarTopper3","","",7,null],[13,"BowTopper","","",7,null],[13,"WhiteGarland","","",7,null],[13,"WhiteAndRedGarland","","",7,null],[13,"RedGardland","","",7,null],[13,"RedAndGreenGardland","","",7,null],[13,"GreenGardland","","",7,null],[13,"GreenAndWhiteGarland","","",7,null],[13,"MulticoloredBulb","","",7,null],[13,"RedBulb","","",7,null],[13,"YellowBulb","","",7,null],[13,"GreenBulb","","",7,null],[13,"RedAndGreenBulb","","",7,null],[13,"YellowAndGreenBulb","","",7,null],[13,"RedAndYellowBulb","","",7,null],[13,"WhiteBulb","","",7,null],[13,"WhiteAndRedBulb","","",7,null],[13,"WhiteAndYellowBulb","","",7,null],[13,"WhiteAndGreenBulb","","",7,null],[13,"MulticoloredLights","","",7,null],[13,"RedLights","","",7,null],[13,"GreenLights","","",7,null],[13,"BlueLights","","",7,null],[13,"YellowLights","","",7,null],[13,"RedAndYellowLights","","",7,null],[13,"RedAndGreenLights","","",7,null],[13,"YellowAndGreenLights","","",7,null],[13,"BlueAndGreenLights","","",7,null],[13,"RedAndBlueLights","","",7,null],[13,"BlueAndYellowLights","","",7,null],[13,"GiantBow","","",7,null],[13,"ReindeerAntlers","","",7,null],[13,"Holly","","",7,null],[13,"CandyCaneSword","","",7,null],[13,"EldMelter","","",7,null],[13,"ChristmasPudding","","",7,null],[13,"Eggnog","","",7,null],[13,"StarAnise","","",7,null],[13,"ReindeerBells","","",7,null],[13,"CandyCaneHook","","",7,null],[13,"ChristmasHook","","",7,null],[13,"CnadyCanePickaxe","","",7,null],[13,"FruitcakeChakram","","",7,null],[13,"SugarCookie","","",7,null],[13,"GingerbreadCookie","","",7,null],[13,"HandWarmer","","",7,null],[13,"Coal","","",7,null],[13,"Toolbox","","",7,null],[13,"PineDoor","","",7,null],[13,"PineChair","","",7,null],[13,"PineTable","","",7,null],[13,"DogWhistle","","",7,null],[13,"ChristmasTreeSword","","",7,null],[13,"ChainGun","","",7,null],[13,"Razorpine","","",7,null],[13,"BlizzardStaff","","",7,null],[13,"MrsClauseHat","","",7,null],[13,"MrsClauseShirt","","",7,null],[13,"MrsClauseHeels","","",7,null],[13,"ParkaHood","","",7,null],[13,"ParkaCoat","","",7,null],[13,"ParkaPants","","",7,null],[13,"SnowHat","","",7,null],[13,"UglySweater","","",7,null],[13,"TreeMask","","",7,null],[13,"TreeShirt","","",7,null],[13,"TreeTrunks","","",7,null],[13,"ElfHat","","",7,null],[13,"ElfShirt","","",7,null],[13,"ElfPants","","",7,null],[13,"SnowmanCannon","","",7,null],[13,"NorthPole","","",7,null],[13,"ChristmasTreeWallpaper","","",7,null],[13,"OrnamentWallpaper","","",7,null],[13,"CandyCaneWallpaper","","",7,null],[13,"FestiveWallpaper","","",7,null],[13,"StarsWallpaper","","",7,null],[13,"SquigglesWallpaper","","",7,null],[13,"SnowflakeWallpaper","","",7,null],[13,"KrampusHornWallpaper","","",7,null],[13,"BluegreenWallpaper","","",7,null],[13,"GrinchFingerWallpaper","","",7,null],[13,"NaughtyPresent","","",7,null],[13,"BabyGrinchMischiefWhistle","","",7,null],[13,"IceQueenTrophy","","",7,null],[13,"SantaNk1Trophy","","",7,null],[13,"EverscreamTrophy","","",7,null],[13,"MusicBoxPumpkinMoon","","",7,null],[13,"MusicBoxAltUnderground","","",7,null],[13,"MusicBoxFrostMoon","","",7,null],[13,"BrownPaint","","",7,null],[13,"ShadowPaint","","",7,null],[13,"NegativePaint","","",7,null],[13,"TeamDye","","",7,null],[13,"AmethystGemsparkBlock","","",7,null],[13,"TopazGemsparkBlock","","",7,null],[13,"SapphireGemsparkBlock","","",7,null],[13,"EmeraldGemsparkBlock","","",7,null],[13,"RubyGemsparkBlock","","",7,null],[13,"DiamondGemsparkBlock","","",7,null],[13,"AmberGemsparkBlock","","",7,null],[13,"LifeHairDye","","",7,null],[13,"ManaHairDye","","",7,null],[13,"DepthHairDye","","",7,null],[13,"MoneyHairDye","","",7,null],[13,"TimeHairDye","","",7,null],[13,"TeamHairDye","","",7,null],[13,"BiomeHairDye","","",7,null],[13,"PartyHairDye","","",7,null],[13,"RainbowHairDye","","",7,null],[13,"SpeedHairDye","","",7,null],[13,"AngelHalo","","",7,null],[13,"Fez","","",7,null],[13,"Womannquin","","",7,null],[13,"HairDyeRemover","","",7,null],[13,"BugNet","","",7,null],[13,"Firefly","","",7,null],[13,"FireflyinaBottle","","",7,null],[13,"MonarchButterfly","","",7,null],[13,"PurpleEmperorButterfly","","",7,null],[13,"RedAdmiralButterfly","","",7,null],[13,"UlyssesButterfly","","",7,null],[13,"SulphurButterfly","","",7,null],[13,"TreeNymphButterfly","","",7,null],[13,"ZebraSwallowtailButterfly","","",7,null],[13,"JuliaButterfly","","",7,null],[13,"Worm","","",7,null],[13,"Mouse","","",7,null],[13,"LightningBug","","",7,null],[13,"LightningBuginaBottle","","",7,null],[13,"Snail","","",7,null],[13,"GlowingSnail","","",7,null],[13,"FancyGreyWallpaper","","",7,null],[13,"IceFloeWallpaper","","",7,null],[13,"MusicWallpaper","","",7,null],[13,"PurpleRainWallpaper","","",7,null],[13,"RainbowWallpaper","","",7,null],[13,"SparkleStoneWallpaper","","",7,null],[13,"StarlitHeavenWallpaper","","",7,null],[13,"Bird","","",7,null],[13,"BlueJay","","",7,null],[13,"Cardinal","","",7,null],[13,"Squirrel","","",7,null],[13,"Bunny","","",7,null],[13,"CactusBookcase","","",7,null],[13,"EbonwoodBookcase","","",7,null],[13,"FleshBookcase","","",7,null],[13,"HoneyBookcase","","",7,null],[13,"SteampunkBookcase","","",7,null],[13,"GlassBookcase","","",7,null],[13,"RichMahoganyBookcase","","",7,null],[13,"PearlwoodBookcase","","",7,null],[13,"SpookyBookcase","","",7,null],[13,"SkywareBookcase","","",7,null],[13,"LihzahrdBookcase","","",7,null],[13,"FrozenBookcase","","",7,null],[13,"CactusLantern","","",7,null],[13,"EbonwoodLantern","","",7,null],[13,"FleshLantern","","",7,null],[13,"HoneyLantern","","",7,null],[13,"SteampunkLantern","","",7,null],[13,"GlassLantern","","",7,null],[13,"RichMahoganyLantern","","",7,null],[13,"PearlwoodLantern","","",7,null],[13,"FrozenLantern","","",7,null],[13,"LihzahrdLantern","","",7,null],[13,"SkywareLantern","","",7,null],[13,"SpookyLantern","","",7,null],[13,"FrozenDoor","","",7,null],[13,"CactusCandle","","",7,null],[13,"EbonwoodCandle","","",7,null],[13,"FleshCandle","","",7,null],[13,"GlassCandle","","",7,null],[13,"FrozenCandle","","",7,null],[13,"RichMahoganyCandle","","",7,null],[13,"PearlwoodCandle","","",7,null],[13,"LihzahrdCandle","","",7,null],[13,"SkywareCandle","","",7,null],[13,"PumpkinCandle","","",7,null],[13,"CactusChandelier","","",7,null],[13,"EbonwoodChandelier","","",7,null],[13,"FleshChandelier","","",7,null],[13,"HoneyChandelier","","",7,null],[13,"FrozenChandelier","","",7,null],[13,"RichMahoganyChandelier","","",7,null],[13,"PearlwoodChandelier","","",7,null],[13,"LihzahrdChandelier","","",7,null],[13,"SkywareChandelier","","",7,null],[13,"SpookyChandelier","","",7,null],[13,"GlassChandelier","","",7,null],[13,"CactusBed","","",7,null],[13,"FleshBed","","",7,null],[13,"FrozenBed","","",7,null],[13,"LihzahrdBed","","",7,null],[13,"SkywareBed","","",7,null],[13,"SpookyBed","","",7,null],[13,"CactusBathtub","","",7,null],[13,"EbonwoodBathtub","","",7,null],[13,"FleshBathtub","","",7,null],[13,"GlassBathtub","","",7,null],[13,"FrozenBathtub","","",7,null],[13,"RichMahoganyBathtub","","",7,null],[13,"PearlwoodBathtub","","",7,null],[13,"LihzahrdBathtub","","",7,null],[13,"SkywareBathtub","","",7,null],[13,"SpookyBathtub","","",7,null],[13,"CactusLamp","","",7,null],[13,"EbonwoodLamp","","",7,null],[13,"FleshLamp","","",7,null],[13,"GlassLamp","","",7,null],[13,"FrozenLamp","","",7,null],[13,"RichMahoganyLamp","","",7,null],[13,"PearlwoodLamp","","",7,null],[13,"LihzahrdLamp","","",7,null],[13,"SkywareLamp","","",7,null],[13,"SpookyLamp","","",7,null],[13,"CactusCandelabra","","",7,null],[13,"EbonwoodCandelabra","","",7,null],[13,"FleshCandelabra","","",7,null],[13,"HoneyCandelabra","","",7,null],[13,"SteampunkCandelabra","","",7,null],[13,"GlassCandelabra","","",7,null],[13,"RichMahoganyCandelabra","","",7,null],[13,"PearlwoodCandelabra","","",7,null],[13,"FrozenCandelabra","","",7,null],[13,"LihzahrdCandelabra","","",7,null],[13,"SkywareCandelabra","","",7,null],[13,"SpookyCandelabra","","",7,null],[13,"BrainMask","","",7,null],[13,"FleshMask","","",7,null],[13,"TwinMask","","",7,null],[13,"SkeletronPrimeMask","","",7,null],[13,"BeeMask","","",7,null],[13,"PlanteraMask","","",7,null],[13,"GolemMask","","",7,null],[13,"EaterMask","","",7,null],[13,"EyeMask","","",7,null],[13,"DestroyerMask","","",7,null],[13,"BlacksmithRack","","",7,null],[13,"CarpentryRack","","",7,null],[13,"HelmetRack","","",7,null],[13,"SpearRack","","",7,null],[13,"SwordRack","","",7,null],[13,"StoneSlab","","",7,null],[13,"SandstoneSlab","","",7,null],[13,"Frog","","",7,null],[13,"MallardDuck","","",7,null],[13,"Duck","","",7,null],[13,"HoneyBathtub","","",7,null],[13,"SteampunkBathtub","","",7,null],[13,"LivingWoodBathtub","","",7,null],[13,"ShadewoodBathtub","","",7,null],[13,"BoneBathtub","","",7,null],[13,"HoneyLamp","","",7,null],[13,"SteampunkLamp","","",7,null],[13,"LivingWoodLamp","","",7,null],[13,"ShadewoodLamp","","",7,null],[13,"GoldenLamp","","",7,null],[13,"BoneLamp","","",7,null],[13,"LivingWoodBookcase","","",7,null],[13,"ShadewoodBookcase","","",7,null],[13,"GoldenBookcase","","",7,null],[13,"BoneBookcase","","",7,null],[13,"LivingWoodBed","","",7,null],[13,"BoneBed","","",7,null],[13,"LivingWoodChandelier","","",7,null],[13,"ShadewoodChandelier","","",7,null],[13,"GoldenChandelier","","",7,null],[13,"BoneChandelier","","",7,null],[13,"LivingWoodLantern","","",7,null],[13,"ShadewoodLantern","","",7,null],[13,"GoldenLantern","","",7,null],[13,"BoneLantern","","",7,null],[13,"LivingWoodCandelabra","","",7,null],[13,"ShadewoodCandelabra","","",7,null],[13,"GoldenCandelabra","","",7,null],[13,"BoneCandelabra","","",7,null],[13,"LivingWoodCandle","","",7,null],[13,"ShadewoodCandle","","",7,null],[13,"GoldenCandle","","",7,null],[13,"BlackScorpion","","",7,null],[13,"Scorpion","","",7,null],[13,"BubbleWallpaper","","",7,null],[13,"CopperPipeWallpaper","","",7,null],[13,"DuckyWallpaper","","",7,null],[13,"FrostCore","","",7,null],[13,"BunnyCage","","",7,null],[13,"SquirrelCage","","",7,null],[13,"MallardDuckCage","","",7,null],[13,"DuckCage","","",7,null],[13,"BirdCage","","",7,null],[13,"BlueJayCage","","",7,null],[13,"CardinalCage","","",7,null],[13,"WaterfallWall","","",7,null],[13,"LavafallWall","","",7,null],[13,"CrimsonSeeds","","",7,null],[13,"HeavyWorkBench","","",7,null],[13,"CopperPlating","","",7,null],[13,"SnailCage","","",7,null],[13,"GlowingSnailCage","","",7,null],[13,"ShroomiteDiggingClaw","","",7,null],[13,"AmmoBox","","",7,null],[13,"MonarchButterflyJar","","",7,null],[13,"PurpleEmperorButterflyJar","","",7,null],[13,"RedAdmiralButterflyJar","","",7,null],[13,"UlyssesButterflyJar","","",7,null],[13,"SulphurButterflyJar","","",7,null],[13,"TreeNymphButterflyJar","","",7,null],[13,"ZebraSwallowtailButterflyJar","","",7,null],[13,"JuliaButterflyJar","","",7,null],[13,"ScorpionCage","","",7,null],[13,"BlackScorpionCage","","",7,null],[13,"VenomStaff","","",7,null],[13,"SpectreMask","","",7,null],[13,"FrogCage","","",7,null],[13,"MouseCage","","",7,null],[13,"BoneWelder","","",7,null],[13,"FleshCloningVaat","","",7,null],[13,"GlassKiln","","",7,null],[13,"LihzahrdFurnace","","",7,null],[13,"LivingLoom","","",7,null],[13,"SkyMill","","",7,null],[13,"IceMachine","","",7,null],[13,"BeetleHelmet","","",7,null],[13,"BeetleScaleMail","","",7,null],[13,"BeetleShell","","",7,null],[13,"BeetleLeggings","","",7,null],[13,"SteampunkBoiler","","",7,null],[13,"HoneyDispenser","","",7,null],[13,"Penguin","","",7,null],[13,"PenguinCage","","",7,null],[13,"WormCage","","",7,null],[13,"Terrarium","","",7,null],[13,"SuperManaPotion","","",7,null],[13,"EbonwoodFence","","",7,null],[13,"RichMahoganyFence","","",7,null],[13,"PearlwoodFence","","",7,null],[13,"ShadewoodFence","","",7,null],[13,"BrickLayer","","",7,null],[13,"ExtendoGrip","","",7,null],[13,"PaintSprayer","","",7,null],[13,"PortableCementMixer","","",7,null],[13,"BeetleHusk","","",7,null],[13,"CelestialMagnet","","",7,null],[13,"CelestialEmblem","","",7,null],[13,"CelestialCuffs","","",7,null],[13,"PeddlersHat","","",7,null],[13,"PulseBow","","",7,null],[13,"DynastyChandelier","","",7,null],[13,"DynastyLamp","","",7,null],[13,"DynastyLantern","","",7,null],[13,"DynastyCandelabra","","",7,null],[13,"DynastyChair","","",7,null],[13,"DynastyWorkBench","","",7,null],[13,"DynastyChest","","",7,null],[13,"DynastyBed","","",7,null],[13,"DynastyBathtub","","",7,null],[13,"DynastyBookcase","","",7,null],[13,"DynastyCup","","",7,null],[13,"DynastyBowl","","",7,null],[13,"DynastyCandle","","",7,null],[13,"DynastyClock","","",7,null],[13,"GoldenClock","","",7,null],[13,"GlassClock","","",7,null],[13,"HoneyClock","","",7,null],[13,"SteampunkClock","","",7,null],[13,"FancyDishes","","",7,null],[13,"GlassBowl","","",7,null],[13,"WineGlass","","",7,null],[13,"LivingWoodPiano","","",7,null],[13,"FleshPiano","","",7,null],[13,"FrozenPiano","","",7,null],[13,"FrozenTable","","",7,null],[13,"HoneyChest","","",7,null],[13,"SteampunkChest","","",7,null],[13,"HoneyWorkBench","","",7,null],[13,"FrozenWorkBench","","",7,null],[13,"SteampunkWorkBench","","",7,null],[13,"GlassPiano","","",7,null],[13,"HoneyPiano","","",7,null],[13,"SteampunkPiano","","",7,null],[13,"HoneyCup","","",7,null],[13,"SteampunkCup","","",7,null],[13,"DynastyTable","","",7,null],[13,"DynastyWood","","",7,null],[13,"RedDynastyShingles","","",7,null],[13,"BlueDynastyShingles","","",7,null],[13,"WhiteDynastyWall","","",7,null],[13,"BlueDynastyWall","","",7,null],[13,"DynastyDoor","","",7,null],[13,"Sake","","",7,null],[13,"PadThai","","",7,null],[13,"Pho","","",7,null],[13,"Revolver","","",7,null],[13,"Gatligator","","",7,null],[13,"ArcaneRuneWall","","",7,null],[13,"WaterGun","","",7,null],[13,"Katana","","",7,null],[13,"UltrabrightTorch","","",7,null],[13,"MagicHat","","",7,null],[13,"DiamondRing","","",7,null],[13,"Gi","","",7,null],[13,"Kimono","","",7,null],[13,"GypsyRobe","","",7,null],[13,"BeetleWings","","",7,null],[13,"TigerSkin","","",7,null],[13,"LeopardSkin","","",7,null],[13,"ZebraSkin","","",7,null],[13,"CrimsonCloak","","",7,null],[13,"MysteriousCape","","",7,null],[13,"RedCape","","",7,null],[13,"WinterCape","","",7,null],[13,"FrozenChair","","",7,null],[13,"WoodFishingPole","","",7,null],[13,"Bass","","",7,null],[13,"ReinforcedFishingPole","","",7,null],[13,"FiberglassFishingPole","","",7,null],[13,"FisherofSouls","","",7,null],[13,"GoldenFishingRod","","",7,null],[13,"MechanicsRod","","",7,null],[13,"SittingDucksFishingRod","","",7,null],[13,"Trout","","",7,null],[13,"Salmon","","",7,null],[13,"AtlanticCod","","",7,null],[13,"Tuna","","",7,null],[13,"RedSnapper","","",7,null],[13,"NeonTetra","","",7,null],[13,"ArmoredCavefish","","",7,null],[13,"Damselfish","","",7,null],[13,"CrimsonTigerfish","","",7,null],[13,"FrostMinnow","","",7,null],[13,"PrincessFish","","",7,null],[13,"GoldenCarp","","",7,null],[13,"SpecularFish","","",7,null],[13,"Prismite","","",7,null],[13,"VariegatedLardfish","","",7,null],[13,"FlarefinKoi","","",7,null],[13,"DoubleCod","","",7,null],[13,"Honeyfin","","",7,null],[13,"Obsidifish","","",7,null],[13,"Shrimp","","",7,null],[13,"ChaosFish","","",7,null],[13,"Ebonkoi","","",7,null],[13,"Hemopiranha","","",7,null],[13,"Rockfish","","",7,null],[13,"Stinkfish","","",7,null],[13,"MiningPotion","","",7,null],[13,"HeartreachPotion","","",7,null],[13,"CalmingPotion","","",7,null],[13,"BuilderPotion","","",7,null],[13,"TitanPotion","","",7,null],[13,"FlipperPotion","","",7,null],[13,"SummoningPotion","","",7,null],[13,"TrapsightPotion","","",7,null],[13,"PurpleClubberfish","","",7,null],[13,"ObsidianSwordfish","","",7,null],[13,"Swordfish","","",7,null],[13,"IronFence","","",7,null],[13,"WoodenCrate","","",7,null],[13,"IronCrate","","",7,null],[13,"GoldenCrate","","",7,null],[13,"OldShoe","","",7,null],[13,"FishingSeaweed","","",7,null],[13,"TinCan","","",7,null],[13,"MinecartTrack","","",7,null],[13,"ReaverShark","","",7,null],[13,"SawtoothShark","","",7,null],[13,"Minecart","","",7,null],[13,"AmmoReservationPotion","","",7,null],[13,"LifeforcePotion","","",7,null],[13,"EndurancePotion","","",7,null],[13,"RagePotion","","",7,null],[13,"InfernoPotion","","",7,null],[13,"WrathPotion","","",7,null],[13,"RecallPotion","","",7,null],[13,"TeleportationPotion","","",7,null],[13,"LovePotion","","",7,null],[13,"StinkPotion","","",7,null],[13,"FishingPotion","","",7,null],[13,"SonarPotion","","",7,null],[13,"CratePotion","","",7,null],[13,"ShiverthornSeeds","","",7,null],[13,"Shiverthorn","","",7,null],[13,"WarmthPotion","","",7,null],[13,"FishHook","","",7,null],[13,"BeeHeadgear","","",7,null],[13,"BeeBreastplate","","",7,null],[13,"BeeGreaves","","",7,null],[13,"HornetStaff","","",7,null],[13,"ImpStaff","","",7,null],[13,"QueenSpiderStaff","","",7,null],[13,"AnglerHat","","",7,null],[13,"AnglerVest","","",7,null],[13,"AnglerPants","","",7,null],[13,"SpiderMask","","",7,null],[13,"SpiderBreastplate","","",7,null],[13,"SpiderGreaves","","",7,null],[13,"HighTestFishingLine","","",7,null],[13,"AnglerEarring","","",7,null],[13,"TackleBox","","",7,null],[13,"BlueDungeonPiano","","",7,null],[13,"GreenDungeonPiano","","",7,null],[13,"PinkDungeonPiano","","",7,null],[13,"GoldenPiano","","",7,null],[13,"ObsidianPiano","","",7,null],[13,"BonePiano","","",7,null],[13,"CactusPiano","","",7,null],[13,"SpookyPiano","","",7,null],[13,"SkywarePiano","","",7,null],[13,"LihzahrdPiano","","",7,null],[13,"BlueDungeonDresser","","",7,null],[13,"GreenDungeonDresser","","",7,null],[13,"PinkDungeonDresser","","",7,null],[13,"GoldenDresser","","",7,null],[13,"ObsidianDresser","","",7,null],[13,"BoneDresser","","",7,null],[13,"CactusDresser","","",7,null],[13,"SpookyDresser","","",7,null],[13,"SkywareDresser","","",7,null],[13,"HoneyDresser","","",7,null],[13,"LihzahrdDresser","","",7,null],[13,"Sofa","","",7,null],[13,"EbonwoodSofa","","",7,null],[13,"RichMahoganySofa","","",7,null],[13,"PearlwoodSofa","","",7,null],[13,"ShadewoodSofa","","",7,null],[13,"BlueDungeonSofa","","",7,null],[13,"GreenDungeonSofa","","",7,null],[13,"PinkDungeonSofa","","",7,null],[13,"GoldenSofa","","",7,null],[13,"ObsidianSofa","","",7,null],[13,"BoneSofa","","",7,null],[13,"CactusSofa","","",7,null],[13,"SpookySofa","","",7,null],[13,"SkywareSofa","","",7,null],[13,"HoneySofa","","",7,null],[13,"SteampunkSofa","","",7,null],[13,"MushroomSofa","","",7,null],[13,"GlassSofa","","",7,null],[13,"PumpkinSofa","","",7,null],[13,"LihzahrdSofa","","",7,null],[13,"SeashellHairpin","","",7,null],[13,"MermaidAdornment","","",7,null],[13,"MermaidTail","","",7,null],[13,"ZephyrFish","","",7,null],[13,"Fleshcatcher","","",7,null],[13,"HotlineFishingHook","","",7,null],[13,"FrogLeg","","",7,null],[13,"Anchor","","",7,null],[13,"CookedFish","","",7,null],[13,"CookedShrimp","","",7,null],[13,"Sashimi","","",7,null],[13,"FuzzyCarrot","","",7,null],[13,"ScalyTruffle","","",7,null],[13,"SlimySaddle","","",7,null],[13,"BeeWax","","",7,null],[13,"CopperPlatingWall","","",7,null],[13,"StoneSlabWall","","",7,null],[13,"Sail","","",7,null],[13,"CoralstoneBlock","","",7,null],[13,"BlueJellyfish","","",7,null],[13,"GreenJellyfish","","",7,null],[13,"PinkJellyfish","","",7,null],[13,"BlueJellyfishJar","","",7,null],[13,"GreenJellyfishJar","","",7,null],[13,"PinkJellyfishJar","","",7,null],[13,"LifePreserver","","",7,null],[13,"ShipsWheel","","",7,null],[13,"CompassRose","","",7,null],[13,"WallAnchor","","",7,null],[13,"GoldfishTrophy","","",7,null],[13,"BunnyfishTrophy","","",7,null],[13,"SwordfishTrophy","","",7,null],[13,"SharkteethTrophy","","",7,null],[13,"Batfish","","",7,null],[13,"BumblebeeTuna","","",7,null],[13,"Catfish","","",7,null],[13,"Cloudfish","","",7,null],[13,"Cursedfish","","",7,null],[13,"Dirtfish","","",7,null],[13,"DynamiteFish","","",7,null],[13,"EaterofPlankton","","",7,null],[13,"FallenStarfish","","",7,null],[13,"TheFishofCthulu","","",7,null],[13,"Fishotron","","",7,null],[13,"Harpyfish","","",7,null],[13,"Hungerfish","","",7,null],[13,"Ichorfish","","",7,null],[13,"Jewelfish","","",7,null],[13,"MirageFish","","",7,null],[13,"MutantFlinxfin","","",7,null],[13,"Pengfish","","",7,null],[13,"Pixiefish","","",7,null],[13,"Spiderfish","","",7,null],[13,"TundraTrout","","",7,null],[13,"UnicornFish","","",7,null],[13,"GuideVoodooFish","","",7,null],[13,"Wyverntail","","",7,null],[13,"ZombieFish","","",7,null],[13,"AmanitiaFungifin","","",7,null],[13,"Angelfish","","",7,null],[13,"BloodyManowar","","",7,null],[13,"Bonefish","","",7,null],[13,"Bunnyfish","","",7,null],[13,"CapnTunabeard","","",7,null],[13,"Clownfish","","",7,null],[13,"DemonicHellfish","","",7,null],[13,"Derpfish","","",7,null],[13,"Fishron","","",7,null],[13,"InfectedScabbardfish","","",7,null],[13,"Mudfish","","",7,null],[13,"Slimefish","","",7,null],[13,"TropicalBarracuda","","",7,null],[13,"KingSlimeTrophy","","",7,null],[13,"ShipInAbottle","","",7,null],[13,"HardySaddle","","",7,null],[13,"PressureTrack","","",7,null],[13,"KingSlimeMask","","",7,null],[13,"FinWings","","",7,null],[13,"TreasureMap","","",7,null],[13,"SeaweedPlanter","","",7,null],[13,"PillaginMePixels","","",7,null],[13,"FishCostumeMask","","",7,null],[13,"FishCostumeShirt","","",7,null],[13,"FishCostumeFinskirt","","",7,null],[13,"GingerBeard","","",7,null],[13,"HoneyedGoggles","","",7,null],[13,"BorealWood","","",7,null],[13,"PalmWood","","",7,null],[13,"BorealWoodWall","","",7,null],[13,"PalmWoodWall","","",7,null],[13,"BorealWoodFence","","",7,null],[13,"PalmWoodFence","","",7,null],[13,"BorealWoodHelmet","","",7,null],[13,"BorealWoodBreastplate","","",7,null],[13,"BorealWoodGreaves","","",7,null],[13,"PalmWoodHelmet","","",7,null],[13,"PalmWoodBreastplate","","",7,null],[13,"PalmWoodGreaves","","",7,null],[13,"PalmWoodBow","","",7,null],[13,"PalmWoodHammer","","",7,null],[13,"PalmWoodSword","","",7,null],[13,"PalmWoodPlatform","","",7,null],[13,"PalmWoodBathtub","","",7,null],[13,"PalmWoodBed","","",7,null],[13,"PalmWoodBench","","",7,null],[13,"PalmWoodCandelabra","","",7,null],[13,"PalmWoodCandle","","",7,null],[13,"PalmWoodChair","","",7,null],[13,"PalmWoodChandelier","","",7,null],[13,"PalmWoodChest","","",7,null],[13,"PalmWoodSofa","","",7,null],[13,"PalmWoodDoor","","",7,null],[13,"PalmWoodDresser","","",7,null],[13,"PalmWoodLantern","","",7,null],[13,"PalmWoodPiano","","",7,null],[13,"PalmWoodTable","","",7,null],[13,"PalmWoodLamp","","",7,null],[13,"PalmWoodWorkBench","","",7,null],[13,"OpticStaff","","",7,null],[13,"PalmWoodBookcase","","",7,null],[13,"MushroomBathtub","","",7,null],[13,"MushroomBed","","",7,null],[13,"MushroomBench","","",7,null],[13,"MushroomBookcase","","",7,null],[13,"MushroomCandelabra","","",7,null],[13,"MushroomCandle","","",7,null],[13,"MushroomChandelier","","",7,null],[13,"MushroomChest","","",7,null],[13,"MushroomDresser","","",7,null],[13,"MushroomLantern","","",7,null],[13,"MushroomLamp","","",7,null],[13,"MushroomPiano","","",7,null],[13,"MushroomPlatform","","",7,null],[13,"MushroomTable","","",7,null],[13,"SpiderStaff","","",7,null],[13,"BorealWoodBathtub","","",7,null],[13,"BorealWoodBed","","",7,null],[13,"BorealWoodBookcase","","",7,null],[13,"BorealWoodCandelabra","","",7,null],[13,"BorealWoodCandle","","",7,null],[13,"BorealWoodChair","","",7,null],[13,"BorealWoodChandelier","","",7,null],[13,"BorealWoodChest","","",7,null],[13,"BorealWoodClock","","",7,null],[13,"BorealWoodDoor","","",7,null],[13,"BorealWoodDresser","","",7,null],[13,"BorealWoodLamp","","",7,null],[13,"BorealWoodLantern","","",7,null],[13,"BorealWoodPiano","","",7,null],[13,"BorealWoodPlatform","","",7,null],[13,"SlimeBathtub","","",7,null],[13,"SlimeBed","","",7,null],[13,"SlimeBookcase","","",7,null],[13,"SlimeCandelabra","","",7,null],[13,"SlimeCandle","","",7,null],[13,"SlimeChair","","",7,null],[13,"SlimeChandelier","","",7,null],[13,"SlimeChest","","",7,null],[13,"SlimeClock","","",7,null],[13,"SlimeDoor","","",7,null],[13,"SlimeDresser","","",7,null],[13,"SlimeLamp","","",7,null],[13,"SlimeLantern","","",7,null],[13,"SlimePiano","","",7,null],[13,"SlimePlatform","","",7,null],[13,"SlimeSofa","","",7,null],[13,"SlimeTable","","",7,null],[13,"PirateStaff","","",7,null],[13,"SlimeHook","","",7,null],[13,"StickyGrenade","","",7,null],[13,"TartarSauce","","",7,null],[13,"DukeFishronMask","","",7,null],[13,"DukeFishronTrophy","","",7,null],[13,"MolotovCocktail","","",7,null],[13,"BoneClock","","",7,null],[13,"CactusClock","","",7,null],[13,"EbonwoodClock","","",7,null],[13,"FrozenClock","","",7,null],[13,"LihzahrdClock","","",7,null],[13,"LivingWoodClock","","",7,null],[13,"RichMahoganyClock","","",7,null],[13,"FleshClock","","",7,null],[13,"MushroomClock","","",7,null],[13,"ObsidianClock","","",7,null],[13,"PalmWoodClock","","",7,null],[13,"PearlwoodClock","","",7,null],[13,"PumpkinClock","","",7,null],[13,"ShadewoodClock","","",7,null],[13,"SpookyClock","","",7,null],[13,"SkywareClock","","",7,null],[13,"SpiderFang","","",7,null],[13,"FalconBlade","","",7,null],[13,"FishronWings","","",7,null],[13,"SlimeGun","","",7,null],[13,"Flairon","","",7,null],[13,"GreenDungeonChest","","",7,null],[13,"PinkDungeonChest","","",7,null],[13,"BlueDungeonChest","","",7,null],[13,"BoneChest","","",7,null],[13,"CactusChest","","",7,null],[13,"FleshChest","","",7,null],[13,"ObsidianChest","","",7,null],[13,"PumpkinChest","","",7,null],[13,"SpookyChest","","",7,null],[13,"TempestStaff","","",7,null],[13,"RazorbladeTyphoon","","",7,null],[13,"BubbleGun","","",7,null],[13,"Tsunami","","",7,null],[13,"Seashell","","",7,null],[13,"Starfish","","",7,null],[13,"SteampunkPlatform","","",7,null],[13,"SkywarePlatform","","",7,null],[13,"LivingWoodPlatform","","",7,null],[13,"HoneyPlatform","","",7,null],[13,"SkywareWorkbench","","",7,null],[13,"GlassWorkBench","","",7,null],[13,"LivingWoodWorkBench","","",7,null],[13,"FleshSofa","","",7,null],[13,"FrozenSofa","","",7,null],[13,"LivingWoodSofa","","",7,null],[13,"PumpkinDresser","","",7,null],[13,"SteampunkDresser","","",7,null],[13,"GlassDresser","","",7,null],[13,"FleshDresser","","",7,null],[13,"PumpkinLantern","","",7,null],[13,"ObsidianLantern","","",7,null],[13,"PumpkinLamp","","",7,null],[13,"ObsidianLamp","","",7,null],[13,"BlueDungeonLamp","","",7,null],[13,"GreenDungeonLamp","","",7,null],[13,"PinkDungeonLamp","","",7,null],[13,"HoneyCandle","","",7,null],[13,"SteampunkCandle","","",7,null],[13,"SpookyCandle","","",7,null],[13,"ObsidianCandle","","",7,null],[13,"BlueDungeonChandelier","","",7,null],[13,"GreenDungeonChandelier","","",7,null],[13,"PinkDungeonChandelier","","",7,null],[13,"SteampunkChandelier","","",7,null],[13,"PumpkinChandelier","","",7,null],[13,"ObsidianChandelier","","",7,null],[13,"BlueDungeonBathtub","","",7,null],[13,"GreenDungeonBathtub","","",7,null],[13,"PinkDungeonBathtub","","",7,null],[13,"PumpkinBathtub","","",7,null],[13,"ObsidianBathtub","","",7,null],[13,"GoldenBathtub","","",7,null],[13,"BlueDungeonCandelabra","","",7,null],[13,"GreenDungeonCandelabra","","",7,null],[13,"PinkDungeonCandelabra","","",7,null],[13,"ObsidianCandelabra","","",7,null],[13,"PumpkinCandelabra","","",7,null],[13,"PumpkinBed","","",7,null],[13,"PumpkinBookcase","","",7,null],[13,"PumpkinPiano","","",7,null],[13,"SharkStatue","","",7,null],[13,"TruffleWorm","","",7,null],[13,"ApprenticeBait","","",7,null],[13,"JourneymanBait","","",7,null],[13,"MasterBait","","",7,null],[13,"AmberGemsparkWall","","",7,null],[13,"AmberGemsparkWallOff","","",7,null],[13,"AmethystGemsparkWall","","",7,null],[13,"AmethystGemsparkWallOff","","",7,null],[13,"DiamondGemsparkWall","","",7,null],[13,"DiamondGemsparkWallOff","","",7,null],[13,"EmeraldGemsparkWall","","",7,null],[13,"EmeraldGemsparkWallOff","","",7,null],[13,"RubyGemsparkWall","","",7,null],[13,"RubyGemsparkWallOff","","",7,null],[13,"SapphireGemsparkWall","","",7,null],[13,"SapphireGemsparkWallOff","","",7,null],[13,"TopazGemsparkWall","","",7,null],[13,"TopazGemsparkWallOff","","",7,null],[13,"TinPlatingWall","","",7,null],[13,"TinPlating","","",7,null],[13,"WaterfallBlock","","",7,null],[13,"LavafallBlock","","",7,null],[13,"ConfettiBlock","","",7,null],[13,"ConfettiWall","","",7,null],[13,"ConfettiBlockBlack","","",7,null],[13,"ConfettiWallBlack","","",7,null],[13,"WeaponRack","","",7,null],[13,"FireworksBox","","",7,null],[13,"LivingFireBlock","","",7,null],[13,"AlphabetStatue0","","",7,null],[13,"AlphabetStatue1","","",7,null],[13,"AlphabetStatue2","","",7,null],[13,"AlphabetStatue3","","",7,null],[13,"AlphabetStatue4","","",7,null],[13,"AlphabetStatue5","","",7,null],[13,"AlphabetStatue6","","",7,null],[13,"AlphabetStatue7","","",7,null],[13,"AlphabetStatue8","","",7,null],[13,"AlphabetStatue9","","",7,null],[13,"AlphabetStatueA","","",7,null],[13,"AlphabetStatueB","","",7,null],[13,"AlphabetStatueC","","",7,null],[13,"AlphabetStatueD","","",7,null],[13,"AlphabetStatueE","","",7,null],[13,"AlphabetStatueF","","",7,null],[13,"AlphabetStatueG","","",7,null],[13,"AlphabetStatueH","","",7,null],[13,"AlphabetStatueI","","",7,null],[13,"AlphabetStatueJ","","",7,null],[13,"AlphabetStatueK","","",7,null],[13,"AlphabetStatueL","","",7,null],[13,"AlphabetStatueM","","",7,null],[13,"AlphabetStatueN","","",7,null],[13,"AlphabetStatueO","","",7,null],[13,"AlphabetStatueP","","",7,null],[13,"AlphabetStatueQ","","",7,null],[13,"AlphabetStatueR","","",7,null],[13,"AlphabetStatueS","","",7,null],[13,"AlphabetStatueT","","",7,null],[13,"AlphabetStatueU","","",7,null],[13,"AlphabetStatueV","","",7,null],[13,"AlphabetStatueW","","",7,null],[13,"AlphabetStatueX","","",7,null],[13,"AlphabetStatueY","","",7,null],[13,"AlphabetStatueZ","","",7,null],[13,"FireworkFountain","","",7,null],[13,"BoosterTrack","","",7,null],[13,"Grasshopper","","",7,null],[13,"GrasshopperCage","","",7,null],[13,"MusicBoxUndergroundCrimson","","",7,null],[13,"CactusTable","","",7,null],[13,"CactusPlatform","","",7,null],[13,"BorealWoodSword","","",7,null],[13,"BorealWoodHammer","","",7,null],[13,"BorealWoodBow","","",7,null],[13,"GlassChest","","",7,null],[13,"XenoStaff","","",7,null],[13,"MeteorStaff","","",7,null],[13,"LivingCursedFireBlock","","",7,null],[13,"LivingDemonFireBlock","","",7,null],[13,"LivingFrostFireBlock","","",7,null],[13,"LivingIchorBlock","","",7,null],[13,"LivingUltrabrightFireBlock","","",7,null],[13,"GenderChangePotion","","",7,null],[13,"VortexHelmet","","",7,null],[13,"VortexBreastplate","","",7,null],[13,"VortexLeggings","","",7,null],[13,"NebulaHelmet","","",7,null],[13,"NebulaBreastplate","","",7,null],[13,"NebulaLeggings","","",7,null],[13,"SolarFlareHelmet","","",7,null],[13,"SolarFlareBreastplate","","",7,null],[13,"SolarFlareLeggings","","",7,null],[13,"LunarTabletFragment","","",7,null],[13,"SolarTablet","","",7,null],[13,"DrillContainmentUnit","","",7,null],[13,"CosmicCarKey","","",7,null],[13,"MothronWings","","",7,null],[13,"BrainScrambler","","",7,null],[13,"VortexAxe","","",7,null],[13,"VortexChainsaw","","",7,null],[13,"VortexDrill","","",7,null],[13,"VortexHammer","","",7,null],[13,"VortexPickaxe","","",7,null],[13,"NebulaAxe","","",7,null],[13,"NebulaChainsaw","","",7,null],[13,"NebulaDrill","","",7,null],[13,"NebulaHammer","","",7,null],[13,"NebulaPickaxe","","",7,null],[13,"SolarFlareAxe","","",7,null],[13,"SolarFlareChainsaw","","",7,null],[13,"SolarFlareDrill","","",7,null],[13,"SolarFlareHammer","","",7,null],[13,"SolarFlarePickaxe","","",7,null],[13,"HoneyfallBlock","","",7,null],[13,"HoneyfallWall","","",7,null],[13,"ChlorophyteBrickWall","","",7,null],[13,"CrimtaneBrickWall","","",7,null],[13,"ShroomitePlatingWall","","",7,null],[13,"ChlorophyteBrick","","",7,null],[13,"CrimtaneBrick","","",7,null],[13,"ShroomitePlating","","",7,null],[13,"LaserMachinegun","","",7,null],[13,"ElectrosphereLauncher","","",7,null],[13,"Xenopopper","","",7,null],[13,"LaserDrill","","",7,null],[13,"LaserRuler","","",7,null],[13,"AntiGravityHook","","",7,null],[13,"MoonMask","","",7,null],[13,"SunMask","","",7,null],[13,"MartianCostumeMask","","",7,null],[13,"MartianCostumeShirt","","",7,null],[13,"MartianCostumePants","","",7,null],[13,"MartianUniformHelmet","","",7,null],[13,"MartianUniformTorso","","",7,null],[13,"MartianUniformPants","","",7,null],[13,"MartianAstroClock","","",7,null],[13,"MartianBathtub","","",7,null],[13,"MartianBed","","",7,null],[13,"MartianHoverChair","","",7,null],[13,"MartianChandelier","","",7,null],[13,"MartianChest","","",7,null],[13,"MartianDoor","","",7,null],[13,"MartianDresser","","",7,null],[13,"MartianHolobookcase","","",7,null],[13,"MartianHoverCandle","","",7,null],[13,"MartianLamppost","","",7,null],[13,"MartianLantern","","",7,null],[13,"MartianPiano","","",7,null],[13,"MartianPlatform","","",7,null],[13,"MartianSofa","","",7,null],[13,"MartianTable","","",7,null],[13,"MartianTableLamp","","",7,null],[13,"MartianWorkBench","","",7,null],[13,"WoodenSink","","",7,null],[13,"EbonwoodSink","","",7,null],[13,"RichMahoganySink","","",7,null],[13,"PearlwoodSink","","",7,null],[13,"BoneSink","","",7,null],[13,"FleshSink","","",7,null],[13,"LivingWoodSink","","",7,null],[13,"SkywareSink","","",7,null],[13,"ShadewoodSink","","",7,null],[13,"LihzahrdSink","","",7,null],[13,"BlueDungeonSink","","",7,null],[13,"GreenDungeonSink","","",7,null],[13,"PinkDungeonSink","","",7,null],[13,"ObsidianSink","","",7,null],[13,"MetalSink","","",7,null],[13,"GlassSink","","",7,null],[13,"GoldenSink","","",7,null],[13,"HoneySink","","",7,null],[13,"SteampunkSink","","",7,null],[13,"PumpkinSink","","",7,null],[13,"SpookySink","","",7,null],[13,"FrozenSink","","",7,null],[13,"DynastySink","","",7,null],[13,"PalmWoodSink","","",7,null],[13,"MushroomSink","","",7,null],[13,"BorealWoodSink","","",7,null],[13,"SlimeSink","","",7,null],[13,"CactusSink","","",7,null],[13,"MartianSink","","",7,null],[13,"WhiteLunaticHood","","",7,null],[13,"BlueLunaticHood","","",7,null],[13,"WhiteLunaticRobe","","",7,null],[13,"BlueLunaticRobe","","",7,null],[13,"MartianConduitPlating","","",7,null],[13,"MartianConduitWall","","",7,null],[13,"HiTekSunglasses","","",7,null],[13,"MartianHairDye","","",7,null],[13,"MartianArmorDye","","",7,null],[13,"PaintingCastleMarsberg","","",7,null],[13,"PaintingMartiaLisa","","",7,null],[13,"PaintingTheTruthIsUpThere","","",7,null],[13,"SmokeBlock","","",7,null],[13,"LivingFlameDye","","",7,null],[13,"LivingRainbowDye","","",7,null],[13,"ShadowDye","","",7,null],[13,"NegativeDye","","",7,null],[13,"LivingOceanDye","","",7,null],[13,"BrownDye","","",7,null],[13,"BrownAndBlackDye","","",7,null],[13,"BrightBrownDye","","",7,null],[13,"BrownAndSilverDye","","",7,null],[13,"WispDye","","",7,null],[13,"PixieDye","","",7,null],[13,"InfluxWaver","","",7,null],[13,"PhasicWarpEjector","","",7,null],[13,"ChargedBlasterCannon","","",7,null],[13,"ChlorophyteDye","","",7,null],[13,"UnicornWispDye","","",7,null],[13,"InfernalWispDye","","",7,null],[13,"ViciousPowder","","",7,null],[13,"ViciousMushroom","","",7,null],[13,"BeesKnees","","",7,null],[13,"GoldBird","","",7,null],[13,"GoldBunny","","",7,null],[13,"GoldButterfly","","",7,null],[13,"GoldFrog","","",7,null],[13,"GoldGrasshopper","","",7,null],[13,"GoldMouse","","",7,null],[13,"GoldWorm","","",7,null],[13,"StickyDynamite","","",7,null],[13,"AngryTrapperBanner","","",7,null],[13,"ArmoredVikingBanner","","",7,null],[13,"BlackSlimeBanner","","",7,null],[13,"BlueArmoredBonesBanner","","",7,null],[13,"BlueCultistArcherBanner","","",7,null],[13,"BlueCultistCasterBanner","","",7,null],[13,"BlueCultistFighterBanner","","",7,null],[13,"BoneLeeBanner","","",7,null],[13,"ClingerBanner","","",7,null],[13,"CochinealBeetleBanner","","",7,null],[13,"CorruptPenguinBanner","","",7,null],[13,"CorruptSlimeBanner","","",7,null],[13,"CorruptorBanner","","",7,null],[13,"CrimslimeBanner","","",7,null],[13,"CursedSkullBanner","","",7,null],[13,"CyanBeetleBanner","","",7,null],[13,"DevourerBanner","","",7,null],[13,"DiablolistBanner","","",7,null],[13,"DoctorBonesBanner","","",7,null],[13,"DungeonSlimeBanner","","",7,null],[13,"DungeonSpiritBanner","","",7,null],[13,"ElfArcherBanner","","",7,null],[13,"ElfCopterBanner","","",7,null],[13,"EyezorBanner","","",7,null],[13,"FlockoBanner","","",7,null],[13,"GhostBanner","","",7,null],[13,"GiantBatBanner","","",7,null],[13,"GiantCursedSkullBanner","","",7,null],[13,"GiantFlyingFoxBanner","","",7,null],[13,"GingerbreadManBanner","","",7,null],[13,"GoblinArcherBanner","","",7,null],[13,"GreenSlimeBanner","","",7,null],[13,"HeadlessHorsemanBanner","","",7,null],[13,"HellArmoredBonesBanner","","",7,null],[13,"HellhoundBanner","","",7,null],[13,"HoppinJackBanner","","",7,null],[13,"IceBatBanner","","",7,null],[13,"IceGolemBanner","","",7,null],[13,"IceSlimeBanner","","",7,null],[13,"IchorStickerBanner","","",7,null],[13,"IlluminantBatBanner","","",7,null],[13,"IlluminantSlimeBanner","","",7,null],[13,"JungleBatBanner","","",7,null],[13,"JungleSlimeBanner","","",7,null],[13,"KrampusBanner","","",7,null],[13,"LacBeetleBanner","","",7,null],[13,"LavaBatBanner","","",7,null],[13,"LavaSlimeBanner","","",7,null],[13,"MartianBrainscramblerBanner","","",7,null],[13,"MartianDroneBanner","","",7,null],[13,"MartianEngineerBanner","","",7,null],[13,"MartianGigazapperBanner","","",7,null],[13,"MartianGreyGruntBanner","","",7,null],[13,"MartianOfficerBanner","","",7,null],[13,"MartianRaygunnerBanner","","",7,null],[13,"MartianScutlixGunnerBanner","","",7,null],[13,"MartianTeslaTurretBanner","","",7,null],[13,"MisterStabbyBanner","","",7,null],[13,"MotherSlimeBanner","","",7,null],[13,"NecromancerBanner","","",7,null],[13,"NutcrackerBanner","","",7,null],[13,"PaladinBanner","","",7,null],[13,"PenguinBanner","","",7,null],[13,"PinkyBanner","","",7,null],[13,"PoltergeistBanner","","",7,null],[13,"PossessedArmorBanner","","",7,null],[13,"PresentMimicBanner","","",7,null],[13,"PurpleSlimeBanner","","",7,null],[13,"RaggedCasterBanner","","",7,null],[13,"RainbowSlimeBanner","","",7,null],[13,"RavenBanner","","",7,null],[13,"RedSlimeBanner","","",7,null],[13,"RuneWizardBanner","","",7,null],[13,"RustyArmoredBonesBanner","","",7,null],[13,"ScarecrowBanner","","",7,null],[13,"ScutlixBanner","","",7,null],[13,"SkeletonArcherBanner","","",7,null],[13,"SkeletonCommandoBanner","","",7,null],[13,"SkeletonSniperBanner","","",7,null],[13,"SlimerBanner","","",7,null],[13,"SnatcherBanner","","",7,null],[13,"SnowBallaBanner","","",7,null],[13,"SnowmanGangstaBanner","","",7,null],[13,"SpikedIceSlimeBanner","","",7,null],[13,"SpikedJungleSlimeBanner","","",7,null],[13,"SplinterlingBanner","","",7,null],[13,"SquidBanner","","",7,null],[13,"TacticalSkeletonBanner","","",7,null],[13,"TheGroomBanner","","",7,null],[13,"TimBanner","","",7,null],[13,"UndeadMinerBanner","","",7,null],[13,"UndeadVikingBanner","","",7,null],[13,"WhiteCultistArcherBanner","","",7,null],[13,"WhiteCultistCasterBanner","","",7,null],[13,"WhiteCultistFighterBanner","","",7,null],[13,"YellowSlimeBanner","","",7,null],[13,"YetiBanner","","",7,null],[13,"ZombieElfBanner","","",7,null],[13,"SparkyPainting","","",7,null],[13,"VineRope","","",7,null],[13,"WormholePotion","","",7,null],[13,"SummonerEmblem","","",7,null],[13,"BewitchingTable","","",7,null],[13,"AlchemyTable","","",7,null],[13,"StrangeBrew","","",7,null],[13,"SpelunkerGlowstick","","",7,null],[13,"BoneArrow","","",7,null],[13,"BoneTorch","","",7,null],[13,"VineRopeCoil","","",7,null],[13,"SoulDrain","","",7,null],[13,"DartPistol","","",7,null],[13,"DartRifle","","",7,null],[13,"CrystalDart","","",7,null],[13,"CursedDart","","",7,null],[13,"IchorDart","","",7,null],[13,"ChainGuillotines","","",7,null],[13,"FetidBaghnakhs","","",7,null],[13,"ClingerStaff","","",7,null],[13,"PutridScent","","",7,null],[13,"FleshKnuckles","","",7,null],[13,"FlowerBoots","","",7,null],[13,"Seedler","","",7,null],[13,"HellwingBow","","",7,null],[13,"TendonHook","","",7,null],[13,"ThornHook","","",7,null],[13,"IlluminantHook","","",7,null],[13,"WormHook","","",7,null],[13,"DevDye","","",7,null],[13,"PurpleOozeDye","","",7,null],[13,"ReflectiveSilverDye","","",7,null],[13,"ReflectiveGoldDye","","",7,null],[13,"BlueAcidDye","","",7,null],[13,"DaedalusStormbow","","",7,null],[13,"FlyingKnife","","",7,null],[13,"BottomlessBucket","","",7,null],[13,"SuperAbsorbantSponge","","",7,null],[13,"GoldRing","","",7,null],[13,"CoinRing","","",7,null],[13,"GreedyRing","","",7,null],[13,"FishFinder","","",7,null],[13,"WeatherRadio","","",7,null],[13,"HadesDye","","",7,null],[13,"TwilightDye","","",7,null],[13,"AcidDye","","",7,null],[13,"MushroomDye","","",7,null],[13,"PhaseDye","","",7,null],[13,"MagicLantern","","",7,null],[13,"MusicBoxLunarBoss","","",7,null],[13,"RainbowTorch","","",7,null],[13,"CursedCampfire","","",7,null],[13,"DemonCampfire","","",7,null],[13,"FrozenCampfire","","",7,null],[13,"IchorCampfire","","",7,null],[13,"RainbowCampfire","","",7,null],[13,"CrystalVileShard","","",7,null],[13,"ShadowFlameBow","","",7,null],[13,"ShadowFlameHexDoll","","",7,null],[13,"ShadowFlameKnife","","",7,null],[13,"PaintingAcorns","","",7,null],[13,"PaintingColdSnap","","",7,null],[13,"PaintingCursedSaint","","",7,null],[13,"PaintingSnowfellas","","",7,null],[13,"PaintingTheSeason","","",7,null],[13,"BoneRattle","","",7,null],[13,"ArchitectGizmoPack","","",7,null],[13,"CrimsonHeart","","",7,null],[13,"Meowmere","","",7,null],[13,"Sundial","","",7,null],[13,"StarWrath","","",7,null],[13,"MarbleBlock","","",7,null],[13,"HellstoneBrickWall","","",7,null],[13,"CordageGuide","","",7,null],[13,"WandofSparking","","",7,null],[13,"GoldBirdCage","","",7,null],[13,"GoldBunnyCage","","",7,null],[13,"GoldButterflyCage","","",7,null],[13,"GoldFrogCage","","",7,null],[13,"GoldGrasshopperCage","","",7,null],[13,"GoldMouseCage","","",7,null],[13,"GoldWormCage","","",7,null],[13,"SilkRope","","",7,null],[13,"WebRope","","",7,null],[13,"SilkRopeCoil","","",7,null],[13,"WebRopeCoil","","",7,null],[13,"Marble","","",7,null],[13,"MarbleWall","","",7,null],[13,"MarbleBlockWall","","",7,null],[13,"Radar","","",7,null],[13,"LockBox","","",7,null],[13,"Granite","","",7,null],[13,"GraniteBlock","","",7,null],[13,"GraniteWall","","",7,null],[13,"GraniteBlockWall","","",7,null],[13,"RoyalGel","","",7,null],[13,"NightKey","","",7,null],[13,"LightKey","","",7,null],[13,"HerbBag","","",7,null],[13,"Javelin","","",7,null],[13,"TallyCounter","","",7,null],[13,"Sextant","","",7,null],[13,"EoCshield","","",7,null],[13,"ButchersChainsaw","","",7,null],[13,"Stopwatch","","",7,null],[13,"MeteoriteBrick","","",7,null],[13,"MeteoriteBrickWall","","",7,null],[13,"MetalDetector","","",7,null],[13,"EndlessQuiver","","",7,null],[13,"EndlessMusketPouch","","",7,null],[13,"ToxicFlask","","",7,null],[13,"PsychoKnife","","",7,null],[13,"NailGun","","",7,null],[13,"Nail","","",7,null],[13,"NightVisionHelmet","","",7,null],[13,"CelestialShell","","",7,null],[13,"PinkGel","","",7,null],[13,"BouncyGlowstick","","",7,null],[13,"PinkSlimeBlock","","",7,null],[13,"PinkTorch","","",7,null],[13,"BouncyBomb","","",7,null],[13,"BouncyGrenade","","",7,null],[13,"PeaceCandle","","",7,null],[13,"LifeformAnalyzer","","",7,null],[13,"Dpsmeter","","",7,null],[13,"FishermansGuide","","",7,null],[13,"GoblinTech","","",7,null],[13,"Rek","","",7,null],[13,"Pda","","",7,null],[13,"CellPhone","","",7,null],[13,"GraniteChest","","",7,null],[13,"MeteoriteClock","","",7,null],[13,"MarbleClock","","",7,null],[13,"GraniteClock","","",7,null],[13,"MeteoriteDoor","","",7,null],[13,"MarbleDoor","","",7,null],[13,"GraniteDoor","","",7,null],[13,"MeteoriteDresser","","",7,null],[13,"MarbleDresser","","",7,null],[13,"GraniteDresser","","",7,null],[13,"MeteoriteLamp","","",7,null],[13,"MarbleLamp","","",7,null],[13,"GraniteLamp","","",7,null],[13,"MeteoriteLantern","","",7,null],[13,"MarbleLantern","","",7,null],[13,"GraniteLantern","","",7,null],[13,"MeteoritePiano","","",7,null],[13,"MarblePiano","","",7,null],[13,"GranitePiano","","",7,null],[13,"MeteoritePlatform","","",7,null],[13,"MarblePlatform","","",7,null],[13,"GranitePlatform","","",7,null],[13,"MeteoriteSink","","",7,null],[13,"MarbleSink","","",7,null],[13,"GraniteSink","","",7,null],[13,"MeteoriteSofa","","",7,null],[13,"MarbleSofa","","",7,null],[13,"GraniteSofa","","",7,null],[13,"MeteoriteTable","","",7,null],[13,"MarbleTable","","",7,null],[13,"GraniteTable","","",7,null],[13,"MeteoriteWorkBench","","",7,null],[13,"MarbleWorkBench","","",7,null],[13,"GraniteWorkBench","","",7,null],[13,"MeteoriteBathtub","","",7,null],[13,"MarbleBathtub","","",7,null],[13,"GraniteBathtub","","",7,null],[13,"MeteoriteBed","","",7,null],[13,"MarbleBed","","",7,null],[13,"GraniteBed","","",7,null],[13,"MeteoriteBookcase","","",7,null],[13,"MarbleBookcase","","",7,null],[13,"GraniteBookcase","","",7,null],[13,"MeteoriteCandelabra","","",7,null],[13,"MarbleCandelabra","","",7,null],[13,"GraniteCandelabra","","",7,null],[13,"MeteoriteCandle","","",7,null],[13,"MarbleCandle","","",7,null],[13,"GraniteCandle","","",7,null],[13,"MeteoriteChair","","",7,null],[13,"MarbleChair","","",7,null],[13,"GraniteChair","","",7,null],[13,"MeteoriteChandelier","","",7,null],[13,"MarbleChandelier","","",7,null],[13,"GraniteChandelier","","",7,null],[13,"MeteoriteChest","","",7,null],[13,"MarbleChest","","",7,null],[13,"MagicWaterDropper","","",7,null],[13,"GoldenBugNet","","",7,null],[13,"MagicLavaDropper","","",7,null],[13,"MagicHoneyDropper","","",7,null],[13,"EmptyDropper","","",7,null],[13,"GladiatorHelmet","","",7,null],[13,"GladiatorBreastplate","","",7,null],[13,"GladiatorLeggings","","",7,null],[13,"ReflectiveDye","","",7,null],[13,"EnchantedNightcrawler","","",7,null],[13,"Grubby","","",7,null],[13,"Sluggy","","",7,null],[13,"Buggy","","",7,null],[13,"GrubSoup","","",7,null],[13,"BombFish","","",7,null],[13,"FrostDaggerfish","","",7,null],[13,"SharpeningStation","","",7,null],[13,"IceMirror","","",7,null],[13,"SailfishBoots","","",7,null],[13,"TsunamiInAbottle","","",7,null],[13,"TargetDummy","","",7,null],[13,"CorruptFishingCrate","","",7,null],[13,"CrimsonFishingCrate","","",7,null],[13,"DungeonFishingCrate","","",7,null],[13,"FloatingIslandFishingCrate","","",7,null],[13,"HallowedFishingCrate","","",7,null],[13,"JungleFishingCrate","","",7,null],[13,"CrystalSerpent","","",7,null],[13,"Toxikarp","","",7,null],[13,"Bladetongue","","",7,null],[13,"SharkToothNecklace","","",7,null],[13,"MoneyTrough","","",7,null],[13,"Bubble","","",7,null],[13,"DayBloomPlanterBox","","",7,null],[13,"MoonglowPlanterBox","","",7,null],[13,"CorruptPlanterBox","","",7,null],[13,"CrimsonPlanterBox","","",7,null],[13,"BlinkrootPlanterBox","","",7,null],[13,"WaterleafPlanterBox","","",7,null],[13,"ShiverthornPlanterBox","","",7,null],[13,"FireBlossomPlanterBox","","",7,null],[13,"BrainOfConfusion","","",7,null],[13,"WormScarf","","",7,null],[13,"BalloonPufferfish","","",7,null],[13,"BejeweledValkyrieHead","","",7,null],[13,"BejeweledValkyrieBody","","",7,null],[13,"BejeweledValkyrieWing","","",7,null],[13,"RichGravestone1","","",7,null],[13,"RichGravestone2","","",7,null],[13,"RichGravestone3","","",7,null],[13,"RichGravestone4","","",7,null],[13,"RichGravestone5","","",7,null],[13,"CrystalBlock","","",7,null],[13,"MusicBoxMartians","","",7,null],[13,"MusicBoxPirates","","",7,null],[13,"MusicBoxHell","","",7,null],[13,"CrystalBlockWall","","",7,null],[13,"Trapdoor","","",7,null],[13,"TallGate","","",7,null],[13,"SharkronBalloon","","",7,null],[13,"TaxCollectorHat","","",7,null],[13,"TaxCollectorSuit","","",7,null],[13,"TaxCollectorPants","","",7,null],[13,"BoneGlove","","",7,null],[13,"ClothierJacket","","",7,null],[13,"ClothierPants","","",7,null],[13,"DyeTraderTurban","","",7,null],[13,"DeadlySphereStaff","","",7,null],[13,"BalloonHorseshoeFart","","",7,null],[13,"BalloonHorseshoeHoney","","",7,null],[13,"BalloonHorseshoeSharkron","","",7,null],[13,"LavaLamp","","",7,null],[13,"CageEnchantedNightcrawler","","",7,null],[13,"CageBuggy","","",7,null],[13,"CageGrubby","","",7,null],[13,"CageSluggy","","",7,null],[13,"SlapHand","","",7,null],[13,"TwilightHairDye","","",7,null],[13,"BlessedApple","","",7,null],[13,"SpectreBar","","",7,null],[13,"Code1","","",7,null],[13,"BuccaneerBandana","","",7,null],[13,"BuccaneerShirt","","",7,null],[13,"BuccaneerPants","","",7,null],[13,"ObsidianHelm","","",7,null],[13,"ObsidianShirt","","",7,null],[13,"ObsidianPants","","",7,null],[13,"MedusaHead","","",7,null],[13,"ItemFrame","","",7,null],[13,"Sandstone","","",7,null],[13,"HardenedSand","","",7,null],[13,"SandstoneWall","","",7,null],[13,"CorruptHardenedSand","","",7,null],[13,"CrimsonHardenedSand","","",7,null],[13,"CorruptSandstone","","",7,null],[13,"CrimsonSandstone","","",7,null],[13,"WoodYoyo","","",7,null],[13,"CorruptYoyo","","",7,null],[13,"CrimsonYoyo","","",7,null],[13,"JungleYoyo","","",7,null],[13,"Cascade","","",7,null],[13,"Chik","","",7,null],[13,"Code2","","",7,null],[13,"Rally","","",7,null],[13,"Yelets","","",7,null],[13,"RedsYoyo","","",7,null],[13,"ValkyrieYoyo","","",7,null],[13,"Amarok","","",7,null],[13,"HelFire","","",7,null],[13,"Kraken","","",7,null],[13,"TheEyeOfCthulhu","","",7,null],[13,"RedString","","",7,null],[13,"OrangeString","","",7,null],[13,"YellowString","","",7,null],[13,"LimeString","","",7,null],[13,"GreenString","","",7,null],[13,"TealString","","",7,null],[13,"CyanString","","",7,null],[13,"SkyBlueString","","",7,null],[13,"BlueString","","",7,null],[13,"PurpleString","","",7,null],[13,"VioletString","","",7,null],[13,"PinkString","","",7,null],[13,"BrownString","","",7,null],[13,"WhiteString","","",7,null],[13,"RainbowString","","",7,null],[13,"BlackString","","",7,null],[13,"BlackCounterweight","","",7,null],[13,"BlueCounterweight","","",7,null],[13,"GreenCounterweight","","",7,null],[13,"PurpleCounterweight","","",7,null],[13,"RedCounterweight","","",7,null],[13,"YellowCounterweight","","",7,null],[13,"FormatC","","",7,null],[13,"Gradient","","",7,null],[13,"Valor","","",7,null],[13,"KingSlimeBossBag","","",7,null],[13,"EyeOfCthulhuBossBag","","",7,null],[13,"EaterOfWorldsBossBag","","",7,null],[13,"BrainOfCthulhuBossBag","","",7,null],[13,"QueenBeeBossBag","","",7,null],[13,"SkeletronBossBag","","",7,null],[13,"WallOfFleshBossBag","","",7,null],[13,"DestroyerBossBag","","",7,null],[13,"TwinsBossBag","","",7,null],[13,"SkeletronPrimeBossBag","","",7,null],[13,"PlanteraBossBag","","",7,null],[13,"GolemBossBag","","",7,null],[13,"FishronBossBag","","",7,null],[13,"CultistBossBag","","",7,null],[13,"MoonLordBossBag","","",7,null],[13,"HiveBackpack","","",7,null],[13,"YoYoGlove","","",7,null],[13,"DemonHeart","","",7,null],[13,"SporeSac","","",7,null],[13,"ShinyStone","","",7,null],[13,"HallowHardenedSand","","",7,null],[13,"HallowSandstone","","",7,null],[13,"HardenedSandWall","","",7,null],[13,"CorruptHardenedSandWall","","",7,null],[13,"CrimsonHardenedSandWall","","",7,null],[13,"HallowHardenedSandWall","","",7,null],[13,"CorruptSandstoneWall","","",7,null],[13,"CrimsonSandstoneWall","","",7,null],[13,"HallowSandstoneWall","","",7,null],[13,"DesertFossil","","",7,null],[13,"DesertFossilWall","","",7,null],[13,"DyeTradersScimitar","","",7,null],[13,"PainterPaintballGun","","",7,null],[13,"TaxCollectorsStickOfDoom","","",7,null],[13,"StylistKilLaKillScissorsIwish","","",7,null],[13,"MinecartMech","","",7,null],[13,"MechanicalWheelPiece","","",7,null],[13,"MechanicalWagonPiece","","",7,null],[13,"MechanicalBatteryPiece","","",7,null],[13,"AncientCultistTrophy","","",7,null],[13,"MartianSaucerTrophy","","",7,null],[13,"FlyingDutchmanTrophy","","",7,null],[13,"LivingMahoganyWand","","",7,null],[13,"LivingMahoganyLeafWand","","",7,null],[13,"FallenTuxedoShirt","","",7,null],[13,"FallenTuxedoPants","","",7,null],[13,"Fireplace","","",7,null],[13,"Chimney","","",7,null],[13,"YoyoBag","","",7,null],[13,"ShrimpyTruffle","","",7,null],[13,"Arkhalis","","",7,null],[13,"ConfettiCannon","","",7,null],[13,"MusicBoxTowers","","",7,null],[13,"MusicBoxGoblins","","",7,null],[13,"BossMaskCultist","","",7,null],[13,"BossMaskMoonlord","","",7,null],[13,"FossilHelm","","",7,null],[13,"FossilShirt","","",7,null],[13,"FossilPants","","",7,null],[13,"AmberStaff","","",7,null],[13,"BoneJavelin","","",7,null],[13,"BoneDagger","","",7,null],[13,"FossilOre","","",7,null],[13,"StardustHelmet","","",7,null],[13,"StardustBreastplate","","",7,null],[13,"StardustLeggings","","",7,null],[13,"PortalGun","","",7,null],[13,"StrangePlant1","","",7,null],[13,"StrangePlant2","","",7,null],[13,"StrangePlant3","","",7,null],[13,"StrangePlant4","","",7,null],[13,"Terrarian","","",7,null],[13,"GoblinSummonerBanner","","",7,null],[13,"SalamanderBanner","","",7,null],[13,"GiantShellyBanner","","",7,null],[13,"CrawdadBanner","","",7,null],[13,"FritzBanner","","",7,null],[13,"CreatureFromTheDeepBanner","","",7,null],[13,"DrManFlyBanner","","",7,null],[13,"MothronBanner","","",7,null],[13,"SeveredHandBanner","","",7,null],[13,"ThePossessedBanner","","",7,null],[13,"ButcherBanner","","",7,null],[13,"PsychoBanner","","",7,null],[13,"DeadlySphereBanner","","",7,null],[13,"NailheadBanner","","",7,null],[13,"PoisonousSporeBanner","","",7,null],[13,"MedusaBanner","","",7,null],[13,"GreekSkeletonBanner","","",7,null],[13,"GraniteFlyerBanner","","",7,null],[13,"GraniteGolemBanner","","",7,null],[13,"BloodZombieBanner","","",7,null],[13,"DripplerBanner","","",7,null],[13,"TombCrawlerBanner","","",7,null],[13,"DuneSplicerBanner","","",7,null],[13,"FlyingAntlionBanner","","",7,null],[13,"WalkingAntlionBanner","","",7,null],[13,"DesertGhoulBanner","","",7,null],[13,"DesertLamiaBanner","","",7,null],[13,"DesertDjinnBanner","","",7,null],[13,"DesertBasiliskBanner","","",7,null],[13,"RavagerScorpionBanner","","",7,null],[13,"StardustSoldierBanner","","",7,null],[13,"StardustWormBanner","","",7,null],[13,"StardustJellyfishBanner","","",7,null],[13,"StardustSpiderBanner","","",7,null],[13,"StardustSmallCellBanner","","",7,null],[13,"StardustLargeCellBanner","","",7,null],[13,"SolarCoriteBanner","","",7,null],[13,"SolarSrollerBanner","","",7,null],[13,"SolarCrawltipedeBanner","","",7,null],[13,"SolarDrakomireRiderBanner","","",7,null],[13,"SolarDrakomireBanner","","",7,null],[13,"SolarSolenianBanner","","",7,null],[13,"NebulaSoldierBanner","","",7,null],[13,"NebulaHeadcrabBanner","","",7,null],[13,"NebulaBrainBanner","","",7,null],[13,"NebulaBeastBanner","","",7,null],[13,"VortexLarvaBanner","","",7,null],[13,"VortexHornetQueenBanner","","",7,null],[13,"VortexHornetBanner","","",7,null],[13,"VortexSoldierBanner","","",7,null],[13,"VortexRiflemanBanner","","",7,null],[13,"PirateCaptainBanner","","",7,null],[13,"PirateDeadeyeBanner","","",7,null],[13,"PirateCorsairBanner","","",7,null],[13,"PirateCrossbowerBanner","","",7,null],[13,"MartianWalkerBanner","","",7,null],[13,"RedDevilBanner","","",7,null],[13,"PinkJellyfishBanner","","",7,null],[13,"GreenJellyfishBanner","","",7,null],[13,"DarkMummyBanner","","",7,null],[13,"LightMummyBanner","","",7,null],[13,"AngryBonesBanner","","",7,null],[13,"IceTortoiseBanner","","",7,null],[13,"NebulaPickup1","","",7,null],[13,"NebulaPickup2","","",7,null],[13,"NebulaPickup3","","",7,null],[13,"FragmentVortex","","",7,null],[13,"FragmentNebula","","",7,null],[13,"FragmentSolar","","",7,null],[13,"FragmentStardust","","",7,null],[13,"LunarOre","","",7,null],[13,"LunarBrick","","",7,null],[13,"StardustAxe","","",7,null],[13,"StardustChainsaw","","",7,null],[13,"StardustDrill","","",7,null],[13,"StardustHammer","","",7,null],[13,"StardustPickaxe","","",7,null],[13,"LunarBar","","",7,null],[13,"WingsSolar","","",7,null],[13,"WingsVortex","","",7,null],[13,"WingsNebula","","",7,null],[13,"WingsStardust","","",7,null],[13,"LunarBrickWall","","",7,null],[13,"SolarEruption","","",7,null],[13,"StardustCellStaff","","",7,null],[13,"VortexBeater","","",7,null],[13,"NebulaArcanum","","",7,null],[13,"BloodWater","","",7,null],[13,"TheBrideHat","","",7,null],[13,"TheBrideDress","","",7,null],[13,"PlatinumBow","","",7,null],[13,"PlatinumHammer","","",7,null],[13,"PlatinumAxe","","",7,null],[13,"PlatinumShortsword","","",7,null],[13,"PlatinumBroadsword","","",7,null],[13,"PlatinumPickaxe","","",7,null],[13,"TungstenBow","","",7,null],[13,"TungstenHammer","","",7,null],[13,"TungstenAxe","","",7,null],[13,"TungstenShortsword","","",7,null],[13,"TungstenBroadsword","","",7,null],[13,"TungstenPickaxe","","",7,null],[13,"LeadBow","","",7,null],[13,"LeadHammer","","",7,null],[13,"LeadAxe","","",7,null],[13,"LeadShortsword","","",7,null],[13,"LeadBroadsword","","",7,null],[13,"LeadPickaxe","","",7,null],[13,"TinBow","","",7,null],[13,"TinHammer","","",7,null],[13,"TinAxe","","",7,null],[13,"TinShortsword","","",7,null],[13,"TinBroadsword","","",7,null],[13,"TinPickaxe","","",7,null],[13,"CopperBow","","",7,null],[13,"CopperHammer","","",7,null],[13,"CopperAxe","","",7,null],[13,"CopperShortsword","","",7,null],[13,"CopperBroadsword","","",7,null],[13,"CopperPickaxe","","",7,null],[13,"SilverBow","","",7,null],[13,"SilverHammer","","",7,null],[13,"SilverAxe","","",7,null],[13,"SilverShortsword","","",7,null],[13,"SilverBroadsword","","",7,null],[13,"SilverPickaxe","","",7,null],[13,"GoldBow","","",7,null],[13,"GoldHammer","","",7,null],[13,"GoldAxe","","",7,null],[13,"GoldShortsword","","",7,null],[13,"GoldBroadsword","","",7,null],[13,"GoldPickaxe","","",7,null],[13,"LunarHamaxeSolar","","",7,null],[13,"LunarHamaxeVortex","","",7,null],[13,"LunarHamaxeNebula","","",7,null],[13,"LunarHamaxeStardust","","",7,null],[13,"SolarDye","","",7,null],[13,"NebulaDye","","",7,null],[13,"VortexDye","","",7,null],[13,"StardustDye","","",7,null],[13,"VoidDye","","",7,null],[13,"StardustDragonStaff","","",7,null],[13,"Bacon","","",7,null],[13,"ShiftingSandsDye","","",7,null],[13,"MirageDye","","",7,null],[13,"ShiftingPearlSandsDye","","",7,null],[13,"VortexMonolith","","",7,null],[13,"NebulaMonolith","","",7,null],[13,"StardustMonolith","","",7,null],[13,"SolarMonolith","","",7,null],[13,"Phantasm","","",7,null],[13,"LastPrism","","",7,null],[13,"NebulaBlaze","","",7,null],[13,"DayBreak","","",7,null],[13,"SuperHealingPotion","","",7,null],[13,"Detonator","","",7,null],[13,"FireworksLauncher","","",7,null],[13,"BouncyDynamite","","",7,null],[13,"PartyGirlGrenade","","",7,null],[13,"LunarCraftingStation","","",7,null],[13,"FlameAndSilverDye","","",7,null],[13,"GreenFlameAndSilverDye","","",7,null],[13,"BlueFlameAndSilverDye","","",7,null],[13,"ReflectiveCopperDye","","",7,null],[13,"ReflectiveObsidianDye","","",7,null],[13,"ReflectiveMetalDye","","",7,null],[13,"MidnightRainbowDye","","",7,null],[13,"BlackAndWhiteDye","","",7,null],[13,"BrightSilverDye","","",7,null],[13,"SilverAndBlackDye","","",7,null],[13,"RedAcidDye","","",7,null],[13,"GelDye","","",7,null],[13,"PinkGelDye","","",7,null],[13,"SquirrelRed","","",7,null],[13,"SquirrelGold","","",7,null],[13,"SquirrelOrangeCage","","",7,null],[13,"SquirrelGoldCage","","",7,null],[13,"MoonlordBullet","","",7,null],[13,"MoonlordArrow","","",7,null],[13,"MoonlordTurretStaff","","",7,null],[13,"LunarFlareBook","","",7,null],[13,"RainbowCrystalStaff","","",7,null],[13,"LunarHook","","",7,null],[13,"LunarBlockSolar","","",7,null],[13,"LunarBlockVortex","","",7,null],[13,"LunarBlockNebula","","",7,null],[13,"LunarBlockStardust","","",7,null],[13,"SuspiciousLookingTentacle","","",7,null],[13,"Yoraiz0rShirt","","",7,null],[13,"Yoraiz0rPants","","",7,null],[13,"Yoraiz0rWings","","",7,null],[13,"Yoraiz0rDarkness","","",7,null],[13,"JimsWings","","",7,null],[13,"Yoraiz0rHead","","",7,null],[13,"LivingLeafWall","","",7,null],[13,"SkiphsHelm","","",7,null],[13,"SkiphsShirt","","",7,null],[13,"SkiphsPants","","",7,null],[13,"SkiphsWings","","",7,null],[13,"LokisHelm","","",7,null],[13,"LokisShirt","","",7,null],[13,"LokisPants","","",7,null],[13,"LokisWings","","",7,null],[13,"SandSlimeBanner","","",7,null],[13,"SeaSnailBanner","","",7,null],[13,"MoonLordTrophy","","",7,null],[13,"MoonLordPainting","","",7,null],[13,"BurningHadesDye","","",7,null],[13,"GrimDye","","",7,null],[13,"LokisDye","","",7,null],[13,"ShadowflameHadesDye","","",7,null],[13,"CelestialSigil","","",7,null],[13,"LogicGateLampOff","","",7,null],[13,"LogicGateAnd","","",7,null],[13,"LogicGateOr","","",7,null],[13,"LogicGateNand","","",7,null],[13,"LogicGateNor","","",7,null],[13,"LogicGateXor","","",7,null],[13,"LogicGateNxor","","",7,null],[13,"ConveyorBeltLeft","","",7,null],[13,"ConveyorBeltRight","","",7,null],[13,"WireKite","","",7,null],[13,"YellowWrench","","",7,null],[13,"LogicSensorSun","","",7,null],[13,"LogicSensorMoon","","",7,null],[13,"LogicSensorAbove","","",7,null],[13,"WirePipe","","",7,null],[13,"AnnouncementBox","","",7,null],[13,"LogicGateLampOn","","",7,null],[13,"MechanicalLens","","",7,null],[13,"ActuationRod","","",7,null],[13,"TeamBlockRed","","",7,null],[13,"TeamBlockRedPlatform","","",7,null],[13,"StaticHook","","",7,null],[13,"ActuationAccessory","","",7,null],[13,"MulticolorWrench","","",7,null],[13,"WeightedPressurePlatePink","","",7,null],[13,"EngineeringHelmet","","",7,null],[13,"CompanionCube","","",7,null],[13,"WireBulb","","",7,null],[13,"WeightedPressurePlateOrange","","",7,null],[13,"WeightedPressurePlatePurple","","",7,null],[13,"WeightedPressurePlateCyan","","",7,null],[13,"TeamBlockGreen","","",7,null],[13,"TeamBlockBlue","","",7,null],[13,"TeamBlockYellow","","",7,null],[13,"TeamBlockPink","","",7,null],[13,"TeamBlockWhite","","",7,null],[13,"TeamBlockGreenPlatform","","",7,null],[13,"TeamBlockBluePlatform","","",7,null],[13,"TeamBlockYellowPlatform","","",7,null],[13,"TeamBlockPinkPlatform","","",7,null],[13,"TeamBlockWhitePlatform","","",7,null],[13,"LargeAmber","","",7,null],[13,"GemLockRuby","","",7,null],[13,"GemLockSapphire","","",7,null],[13,"GemLockEmerald","","",7,null],[13,"GemLockTopaz","","",7,null],[13,"GemLockAmethyst","","",7,null],[13,"GemLockDiamond","","",7,null],[13,"GemLockAmber","","",7,null],[13,"SquirrelStatue","","",7,null],[13,"ButterflyStatue","","",7,null],[13,"WormStatue","","",7,null],[13,"FireflyStatue","","",7,null],[13,"ScorpionStatue","","",7,null],[13,"SnailStatue","","",7,null],[13,"GrasshopperStatue","","",7,null],[13,"MouseStatue","","",7,null],[13,"DuckStatue","","",7,null],[13,"PenguinStatue","","",7,null],[13,"FrogStatue","","",7,null],[13,"BuggyStatue","","",7,null],[13,"LogicGateLampFaulty","","",7,null],[13,"PortalGunStation","","",7,null],[13,"FakeChest","","",7,null],[13,"FakeGoldChest","","",7,null],[13,"FakeShadowChest","","",7,null],[13,"FakeEbonwoodChest","","",7,null],[13,"FakeRichMahoganyChest","","",7,null],[13,"FakePearlwoodChest","","",7,null],[13,"FakeIvyChest","","",7,null],[13,"FakeIceChest","","",7,null],[13,"FakeLivingWoodChest","","",7,null],[13,"FakeSkywareChest","","",7,null],[13,"FakeShadewoodChest","","",7,null],[13,"FakeWebCoveredChest","","",7,null],[13,"FakeLihzahrdChest","","",7,null],[13,"FakeWaterChest","","",7,null],[13,"FakeJungleChest","","",7,null],[13,"FakeCorruptionChest","","",7,null],[13,"FakeCrimsonChest","","",7,null],[13,"FakeHallowedChest","","",7,null],[13,"FakeFrozenChest","","",7,null],[13,"FakeDynastyChest","","",7,null],[13,"FakeHoneyChest","","",7,null],[13,"FakeSteampunkChest","","",7,null],[13,"FakePalmWoodChest","","",7,null],[13,"FakeMushroomChest","","",7,null],[13,"FakeBorealWoodChest","","",7,null],[13,"FakeSlimeChest","","",7,null],[13,"FakeGreenDungeonChest","","",7,null],[13,"FakePinkDungeonChest","","",7,null],[13,"FakeBlueDungeonChest","","",7,null],[13,"FakeBoneChest","","",7,null],[13,"FakeCactusChest","","",7,null],[13,"FakeFleshChest","","",7,null],[13,"FakeObsidianChest","","",7,null],[13,"FakePumpkinChest","","",7,null],[13,"FakeSpookyChest","","",7,null],[13,"FakeGlassChest","","",7,null],[13,"FakeMartianChest","","",7,null],[13,"FakeMeteoriteChest","","",7,null],[13,"FakeGraniteChest","","",7,null],[13,"FakeMarbleChest","","",7,null],[13,"FakeNewchest1","","",7,null],[13,"FakeNewchest2","","",7,null],[13,"ProjectilePressurePad","","",7,null],[13,"WallCreeperStatue","","",7,null],[13,"UnicornStatue","","",7,null],[13,"DripplerStatue","","",7,null],[13,"WraithStatue","","",7,null],[13,"BoneSkeletonStatue","","",7,null],[13,"UndeadVikingStatue","","",7,null],[13,"MedusaStatue","","",7,null],[13,"HarpyStatue","","",7,null],[13,"PigronStatue","","",7,null],[13,"HopliteStatue","","",7,null],[13,"GraniteGolemStatue","","",7,null],[13,"ZombieArmStatue","","",7,null],[13,"BloodZombieStatue","","",7,null],[13,"AnglerTackleBag","","",7,null],[13,"GeyserTrap","","",7,null],[13,"UltraBrightCampfire","","",7,null],[13,"BoneCampfire","","",7,null],[13,"PixelBox","","",7,null],[13,"LogicSensorWater","","",7,null],[13,"LogicSensorLava","","",7,null],[13,"LogicSensorHoney","","",7,null],[13,"LogicSensorLiquid","","",7,null],[13,"PartyBundleOfBalloonsAccessory","","",7,null],[13,"PartyBalloonAnimal","","",7,null],[13,"PartyHat","","",7,null],[13,"FlowerBoyHat","","",7,null],[13,"FlowerBoyShirt","","",7,null],[13,"FlowerBoyPants","","",7,null],[13,"SillyBalloonPink","","",7,null],[13,"SillyBalloonPurple","","",7,null],[13,"SillyBalloonGreen","","",7,null],[13,"SillyStreamerBlue","","",7,null],[13,"SillyStreamerGreen","","",7,null],[13,"SillyStreamerPink","","",7,null],[13,"SillyBalloonMachine","","",7,null],[13,"SillyBalloonTiedPink","","",7,null],[13,"SillyBalloonTiedPurple","","",7,null],[13,"SillyBalloonTiedGreen","","",7,null],[13,"Pigronata","","",7,null],[13,"PartyMonolith","","",7,null],[13,"PartyBundleOfBalloonTile","","",7,null],[13,"PartyPresent","","",7,null],[13,"SliceOfCake","","",7,null],[13,"CogWall","","",7,null],[13,"SandFallWall","","",7,null],[13,"SnowFallWall","","",7,null],[13,"SandFallBlock","","",7,null],[13,"SnowFallBlock","","",7,null],[13,"SnowCloudBlock","","",7,null],[13,"PedguinHat","","",7,null],[13,"PedguinShirt","","",7,null],[13,"PedguinPants","","",7,null],[13,"SillyBalloonPinkWall","","",7,null],[13,"SillyBalloonPurpleWall","","",7,null],[13,"SillyBalloonGreenWall","","",7,null],[13,"AviatorSunglasses","","",7,null],[13,"BluePhasesaber","","",7,null],[13,"RedPhasesaber","","",7,null],[13,"GreenPhasesaber","","",7,null],[13,"PurplePhasesaber","","",7,null],[13,"WhitePhasesaber","","",7,null],[13,"YellowPhasesaber","","",7,null],[13,"DjinnsCurse","","",7,null],[13,"AncientHorn","","",7,null],[13,"AntlionClaw","","",7,null],[13,"AncientArmorHat","","",7,null],[13,"AncientArmorShirt","","",7,null],[13,"AncientArmorPants","","",7,null],[13,"AncientBattleArmorHat","","",7,null],[13,"AncientBattleArmorShirt","","",7,null],[13,"AncientBattleArmorPants","","",7,null],[13,"SpiritFlame","","",7,null],[13,"SandElementalBanner","","",7,null],[13,"PocketMirror","","",7,null],[13,"MagicSandDropper","","",7,null],[13,"AncientBattleArmorMaterial","","",7,null],[13,"LamiaPants","","",7,null],[13,"LamiaShirt","","",7,null],[13,"LamiaHat","","",7,null],[13,"SkyFracture","","",7,null],[13,"OnyxBlaster","","",7,null],[13,"SandsharkBanner","","",7,null],[13,"SandsharkCorruptBanner","","",7,null],[13,"SandsharkCrimsonBanner","","",7,null],[13,"SandsharkHallowedBanner","","",7,null],[13,"TumbleweedBanner","","",7,null],[13,"AncientCloth","","",7,null],[13,"DjinnLamp","","",7,null],[13,"MusicBoxSandstorm","","",7,null],[13,"ApprenticeHat","","",7,null],[13,"ApprenticeRobe","","",7,null],[13,"ApprenticeTrousers","","",7,null],[13,"SquireGreatHelm","","",7,null],[13,"SquirePlating","","",7,null],[13,"SquireGreaves","","",7,null],[13,"HuntressWig","","",7,null],[13,"HuntressJerkin","","",7,null],[13,"HuntressPants","","",7,null],[13,"MonkBrows","","",7,null],[13,"MonkShirt","","",7,null],[13,"MonkPants","","",7,null],[13,"ApprenticeScarf","","",7,null],[13,"SquireShield","","",7,null],[13,"HuntressBuckler","","",7,null],[13,"MonkBelt","","",7,null],[13,"DefendersForge","","",7,null],[13,"WarTable","","",7,null],[13,"WarTableBanner","","",7,null],[13,"Dd2ElderCrystalStand","","",7,null],[13,"DefenderMedal","","",7,null],[13,"Dd2FlameburstTowerT1Popper","","",7,null],[13,"Dd2flameburstTowerT2Popper","","",7,null],[13,"Dd2flameburstTowerT3popper","","",7,null],[13,"AleThrowingGlove","","",7,null],[13,"Dd2energyCrystal","","",7,null],[13,"Dd2squireDemonSword","","",7,null],[13,"Dd2ballistraTowerT1popper","","",7,null],[13,"Dd2ballistraTowerT2popper","","",7,null],[13,"Dd2ballistraTowerT3popper","","",7,null],[13,"Dd2squireBetsySword","","",7,null],[13,"Dd2elderCrystal","","",7,null],[13,"Dd2lightningAuraT1popper","","",7,null],[13,"Dd2lightningAuraT2popper","","",7,null],[13,"Dd2lightningAuraT3popper","","",7,null],[13,"Dd2explosiveTrapT1popper","","",7,null],[13,"Dd2explosiveTrapT2popper","","",7,null],[13,"Dd2explosiveTrapT3popper","","",7,null],[13,"MonkStaffT1","","",7,null],[13,"MonkStaffT2","","",7,null],[13,"Dd2goblinBomberBanner","","",7,null],[13,"Dd2goblinBanner","","",7,null],[13,"Dd2skeletonBanner","","",7,null],[13,"Dd2drakinBanner","","",7,null],[13,"Dd2koboldFlyerBanner","","",7,null],[13,"Dd2koboldBanner","","",7,null],[13,"Dd2witherBeastBanner","","",7,null],[13,"Dd2wyvernBanner","","",7,null],[13,"Dd2javelinThrowerBanner","","",7,null],[13,"Dd2lightningBugBanner","","",7,null],[13,"OgreMask","","",7,null],[13,"GoblinMask","","",7,null],[13,"GoblinBomberCap","","",7,null],[13,"EtherianJavelin","","",7,null],[13,"KoboldDynamiteBackpack","","",7,null],[13,"BookStaff","","",7,null],[13,"BoringBow","","",7,null],[13,"Dd2phoenixBow","","",7,null],[13,"Dd2petGato","","",7,null],[13,"Dd2petGhost","","",7,null],[13,"Dd2petDragon","","",7,null],[13,"MonkStaffT3","","",7,null],[13,"Dd2betsyBow","","",7,null],[13,"BossBagBetsy","","",7,null],[13,"BossBagOgre","","",7,null],[13,"BossBagDarkMage","","",7,null],[13,"BossMaskBetsy","","",7,null],[13,"BossMaskDarkMage","","",7,null],[13,"BossMaskOgre","","",7,null],[13,"BossTrophyBetsy","","",7,null],[13,"BossTrophyDarkmage","","",7,null],[13,"BossTrophyOgre","","",7,null],[13,"MusicBoxDd2","","",7,null],[13,"ApprenticeStaffT3","","",7,null],[13,"SquireAltHead","","",7,null],[13,"SquireAltShirt","","",7,null],[13,"SquireAltPants","","",7,null],[13,"ApprenticeAltHead","","",7,null],[13,"ApprenticeAltShirt","","",7,null],[13,"ApprenticeAltPants","","",7,null],[13,"HuntressAltHead","","",7,null],[13,"HuntressAltShirt","","",7,null],[13,"HuntressAltPants","","",7,null],[13,"MonkAltHead","","",7,null],[13,"MonkAltShirt","","",7,null],[13,"MonkAltPants","","",7,null],[13,"BetsyWings","","",7,null],[13,"CrystalChest","","",7,null],[13,"GoldenChest","","",7,null],[13,"FakeCrystalChest","","",7,null],[13,"FakeGoldenChest","","",7,null],[13,"CrystalDoor","","",7,null],[13,"CrystalChair","","",7,null],[13,"CrystalCandle","","",7,null],[13,"CrystalLantern","","",7,null],[13,"CrystalLamp","","",7,null],[13,"CrystalCandelabra","","",7,null],[13,"CrystalChandelier","","",7,null],[13,"CrystalBathtub","","",7,null],[13,"CrystalSink","","",7,null],[13,"CrystalBed","","",7,null],[13,"CrystalClock","","",7,null],[13,"SkywareClock2","","",7,null],[13,"DungeonClockBlue","","",7,null],[13,"DungeonClockGreen","","",7,null],[13,"DungeonClockPink","","",7,null],[13,"CrystalPlatform","","",7,null],[13,"GoldenPlatform","","",7,null],[13,"DynastyPlatform","","",7,null],[13,"LihzahrdPlatform","","",7,null],[13,"FleshPlatform","","",7,null],[13,"FrozenPlatform","","",7,null],[13,"CrystalWorkbench","","",7,null],[13,"GoldenWorkbench","","",7,null],[13,"CrystalDresser","","",7,null],[13,"DynastyDresser","","",7,null],[13,"FrozenDresser","","",7,null],[13,"LivingWoodDresser","","",7,null],[13,"CrystalPiano","","",7,null],[13,"DynastyPiano","","",7,null],[13,"CrystalBookCase","","",7,null],[13,"CrystalSofaHowDoesThatEvenWork","","",7,null],[13,"DynastySofa","","",7,null],[13,"CrystalTable","","",7,null],[13,"ArkhalisHat","","",7,null],[13,"ArkhalisShirt","","",7,null],[13,"ArkhalisPants","","",7,null],[13,"ArkhalisWings","","",7,null],[13,"LeinforsHat","","",7,null],[13,"LeinforsShirt","","",7,null],[13,"LeinforsPants","","",7,null],[13,"LeinforsWings","","",7,null],[13,"LeinforsAccessory","","",7,null],[13,"Count","","",7,null],[4,"LiquidType","","",null,null],[13,"NoLiquid","","",8,null],[13,"Water","","",8,null],[13,"Lava","","",8,null],[13,"Honey","","",8,null],[4,"RLEType","","",null,null],[13,"NoCompression","","",9,null],[13,"SingleByte","","",9,null],[13,"DoubleByte","","",9,null],[4,"TBool","","",null,null],[13,"False","","",10,null],[13,"True","","",10,null],[4,"TileEntityType","","",null,null],[13,"TargetDummy","","",11,null],[13,"ItemFrame","","",11,null],[13,"LogicSensor","","",11,null],[4,"WallType","","A list of vanilla Walls by internal name, mapped to their…",null,null],[13,"Stone","","",12,null],[13,"DirtUnsafe","","",12,null],[13,"EbonstoneUnsafe","","",12,null],[13,"Wood","","",12,null],[13,"GrayBrick","","",12,null],[13,"RedBrick","","",12,null],[13,"BlueDungeonUnsafe","","",12,null],[13,"GreenDungeonUnsafe","","",12,null],[13,"PinkDungeonUnsafe","","",12,null],[13,"GoldBrick","","",12,null],[13,"SilverBrick","","",12,null],[13,"CopperBrick","","",12,null],[13,"HellstoneBrickUnsafe","","",12,null],[13,"ObsidianBrickUnsafe","","",12,null],[13,"MudUnsafe","","",12,null],[13,"Dirt","","",12,null],[13,"BlueDungeon","","",12,null],[13,"GreenDungeon","","",12,null],[13,"PinkDungeon","","",12,null],[13,"ObsidianBrick","","",12,null],[13,"Glass","","",12,null],[13,"PearlstoneBrick","","",12,null],[13,"IridescentBrick","","",12,null],[13,"MudstoneBrick","","",12,null],[13,"CobaltBrick","","",12,null],[13,"MythrilBrick","","",12,null],[13,"Planked","","",12,null],[13,"PearlstoneBrickUnsafe","","",12,null],[13,"CandyCane","","",12,null],[13,"GreenCandyCane","","",12,null],[13,"SnowBrick","","",12,null],[13,"AdamantiteBeam","","",12,null],[13,"DemoniteBrick","","",12,null],[13,"SandstoneBrick","","",12,null],[13,"EbonstoneBrick","","",12,null],[13,"RedStucco","","",12,null],[13,"YellowStucco","","",12,null],[13,"GreenStucco","","",12,null],[13,"Gray","","",12,null],[13,"SnowWallUnsafe","","",12,null],[13,"Ebonwood","","",12,null],[13,"RichMaogany","","",12,null],[13,"Pearlwood","","",12,null],[13,"RainbowBrick","","",12,null],[13,"TinBrick","","",12,null],[13,"TungstenBrick","","",12,null],[13,"PlatinumBrick","","",12,null],[13,"AmethystUnsafe","","",12,null],[13,"TopazUnsafe","","",12,null],[13,"SapphireUnsafe","","",12,null],[13,"EmeraldUnsafe","","",12,null],[13,"RubyUnsafe","","",12,null],[13,"DiamondUnsafe","","",12,null],[13,"CaveUnsafe","","",12,null],[13,"Cave2unsafe","","",12,null],[13,"Cave3unsafe","","",12,null],[13,"Cave4unsafe","","",12,null],[13,"Cave5unsafe","","",12,null],[13,"Cave6unsafe","","",12,null],[13,"LivingLeaf","","",12,null],[13,"Cave7unsafe","","",12,null],[13,"SpiderUnsafe","","",12,null],[13,"GrassUnsafe","","",12,null],[13,"JungleUnsafe","","",12,null],[13,"FlowerUnsafe","","",12,null],[13,"Grass","","",12,null],[13,"Jungle","","",12,null],[13,"Flower","","",12,null],[13,"CorruptGrassUnsafe","","",12,null],[13,"HallowedGrassUnsafe","","",12,null],[13,"IceUnsafe","","",12,null],[13,"Cactus","","",12,null],[13,"Cloud","","",12,null],[13,"Mushroom","","",12,null],[13,"Bone","","",12,null],[13,"Slime","","",12,null],[13,"Flesh","","",12,null],[13,"LivingWood","","",12,null],[13,"ObsidianBackUnsafe","","",12,null],[13,"MushroomUnsafe","","",12,null],[13,"CrimsonGrassUnsafe","","",12,null],[13,"DiscWall","","",12,null],[13,"CrimstoneUnsafe","","",12,null],[13,"IceBrick","","",12,null],[13,"Shadewood","","",12,null],[13,"HiveUnsafe","","",12,null],[13,"LihzahrdBrickUnsafe","","",12,null],[13,"PurpleStainedGlass","","",12,null],[13,"YellowStainedGlass","","",12,null],[13,"BlueStainedGlass","","",12,null],[13,"GreenStainedGlass","","",12,null],[13,"RedStainedGlass","","",12,null],[13,"RainbowStainedGlass","","",12,null],[13,"BlueDungeonSlabUnsafe","","",12,null],[13,"BlueDungeonTileUnsafe","","",12,null],[13,"PinkDungeonSlabUnsafe","","",12,null],[13,"PinkDungeonTileUnsafe","","",12,null],[13,"GreenDungeonSlabUnsafe","","",12,null],[13,"GreenDungeonTileUnsafe","","",12,null],[13,"BlueDungeonSlab","","",12,null],[13,"BlueDungeonTile","","",12,null],[13,"PinkDungeonSlab","","",12,null],[13,"PinkDungeonTile","","",12,null],[13,"GreenDungeonSlab","","",12,null],[13,"GreenDungeonTile","","",12,null],[13,"WoodenFence","","",12,null],[13,"MetalFence","","",12,null],[13,"Hive","","",12,null],[13,"PalladiumColumn","","",12,null],[13,"BubblegumBlock","","",12,null],[13,"TitanstoneBlock","","",12,null],[13,"LihzahrdBrick","","",12,null],[13,"Pumpkin","","",12,null],[13,"Hay","","",12,null],[13,"SpookyWood","","",12,null],[13,"ChristmasTreeWallpaper","","",12,null],[13,"OrnamentWallpaper","","",12,null],[13,"CandyCaneWallpaper","","",12,null],[13,"FestiveWallpaper","","",12,null],[13,"StarsWallpaper","","",12,null],[13,"SquigglesWallpaper","","",12,null],[13,"SnowflakeWallpaper","","",12,null],[13,"KrampusHornWallpaper","","",12,null],[13,"BluegreenWallpaper","","",12,null],[13,"GrinchFingerWallpaper","","",12,null],[13,"FancyGrayWallpaper","","",12,null],[13,"IceFloeWallpaper","","",12,null],[13,"MusicWallpaper","","",12,null],[13,"PurpleRainWallpaper","","",12,null],[13,"RainbowWallpaper","","",12,null],[13,"SparkleStoneWallpaper","","",12,null],[13,"StarlitHeavenWallpaper","","",12,null],[13,"BubbleWallpaper","","",12,null],[13,"CopperPipeWallpaper","","",12,null],[13,"DuckyWallpaper","","",12,null],[13,"Waterfall","","",12,null],[13,"Lavafall","","",12,null],[13,"EbonwoodFence","","",12,null],[13,"RichMahoganyFence","","",12,null],[13,"PearlwoodFence","","",12,null],[13,"ShadewoodFence","","",12,null],[13,"WhiteDynasty","","",12,null],[13,"BlueDynasty","","",12,null],[13,"ArcaneRunes","","",12,null],[13,"IronFence","","",12,null],[13,"CopperPlating","","",12,null],[13,"StoneSlab","","",12,null],[13,"Sail","","",12,null],[13,"BorealWood","","",12,null],[13,"BorealWoodFence","","",12,null],[13,"PalmWood","","",12,null],[13,"PalmWoodFence","","",12,null],[13,"AmberGemspark","","",12,null],[13,"AmethystGemspark","","",12,null],[13,"DiamondGemspark","","",12,null],[13,"EmeraldGemspark","","",12,null],[13,"AmberGemsparkOff","","",12,null],[13,"AmethystGemsparkOff","","",12,null],[13,"DiamondGemsparkOff","","",12,null],[13,"EmeraldGemsparkOff","","",12,null],[13,"RubyGemsparkOff","","",12,null],[13,"SapphireGemsparkOff","","",12,null],[13,"TopazGemsparkOff","","",12,null],[13,"RubyGemspark","","",12,null],[13,"SapphireGemspark","","",12,null],[13,"TopazGemspark","","",12,null],[13,"TinPlating","","",12,null],[13,"Confetti","","",12,null],[13,"ConfettiBlack","","",12,null],[13,"CaveWall","","",12,null],[13,"CaveWall2","","",12,null],[13,"Honeyfall","","",12,null],[13,"ChlorophyteBrick","","",12,null],[13,"CrimtaneBrick","","",12,null],[13,"ShroomitePlating","","",12,null],[13,"MartianConduit","","",12,null],[13,"HellstoneBrick","","",12,null],[13,"MarbleUnsafe","","",12,null],[13,"MarbleBlock","","",12,null],[13,"GraniteUnsafe","","",12,null],[13,"GraniteBlock","","",12,null],[13,"MeteoriteBrick","","",12,null],[13,"Marble","","",12,null],[13,"Granite","","",12,null],[13,"Cave8unsafe","","",12,null],[13,"Crystal","","",12,null],[13,"Sandstone","","",12,null],[13,"CorruptionUnsafe1","","",12,null],[13,"CorruptionUnsafe2","","",12,null],[13,"CorruptionUnsafe3","","",12,null],[13,"CorruptionUnsafe4","","",12,null],[13,"CrimsonUnsafe1","","",12,null],[13,"CrimsonUnsafe2","","",12,null],[13,"CrimsonUnsafe3","","",12,null],[13,"CrimsonUnsafe4","","",12,null],[13,"DirtUnsafe1","","",12,null],[13,"DirtUnsafe2","","",12,null],[13,"DirtUnsafe3","","",12,null],[13,"DirtUnsafe4","","",12,null],[13,"HallowUnsafe1","","",12,null],[13,"HallowUnsafe2","","",12,null],[13,"HallowUnsafe3","","",12,null],[13,"HallowUnsafe4","","",12,null],[13,"JungleUnsafe1","","",12,null],[13,"JungleUnsafe2","","",12,null],[13,"JungleUnsafe3","","",12,null],[13,"JungleUnsafe4","","",12,null],[13,"LavaUnsafe1","","",12,null],[13,"LavaUnsafe2","","",12,null],[13,"LavaUnsafe3","","",12,null],[13,"LavaUnsafe4","","",12,null],[13,"RocksUnsafe1","","",12,null],[13,"RocksUnsafe2","","",12,null],[13,"RocksUnsafe3","","",12,null],[13,"RocksUnsafe4","","",12,null],[13,"HardenedSand","","",12,null],[13,"CorruptHardenedSand","","",12,null],[13,"CrimsonHardenedSand","","",12,null],[13,"HallowHardenedSand","","",12,null],[13,"CorruptSandstone","","",12,null],[13,"CrimsonSandstone","","",12,null],[13,"HallowSandstone","","",12,null],[13,"DesertFossil","","",12,null],[13,"LunarBrickWall","","",12,null],[13,"CogWall","","",12,null],[13,"SandFall","","",12,null],[13,"SnowFall","","",12,null],[13,"SillyBalloonPinkWall","","",12,null],[13,"SillyBalloonPurpleWall","","",12,null],[13,"SillyBalloonGreenWall","","",12,null],[11,"assign_bits","","",1,[[["tbitvec",3]]]],[11,"color","","",2,[[],["rgba",3]]],[11,"assign_bits","","",8,[[["tbitvec",3]]]],[11,"assign_bits","","",9,[[["tbitvec",3]]]],[11,"raw_type","","",11,[[]]],[11,"color","","Returns the associated [`Rgba`] color for this `WallType`.",12,[[],["rgba",3]]],[0,"models","wld","",null,null],[3,"Uuid","wld::models","A Universally Unique Identifier (UUID).",null,null],[3,"Block","","Represents a block.  A `Tile` optionally \\\"has\\\" a [`Block`].",null,null],[12,"block_type","","The type of this block.  Dirt, brick, glass, etc.",13,null],[12,"shape","","The shape of this block. Will be [`BlockShape::Normal`]…",13,null],[12,"frame_data","","Optional frame data. Set if…",13,null],[12,"block_paint","","Optional paint information, if painted.",13,null],[12,"is_block_inactive","","From `ExtendedTileAttributes::is_block_inactive` by way of…",13,null],[12,"has_extended_block_id","","From `TileHeader::has_extended_block_id` by way of…",13,null],[3,"BlockCtx","","Contains some metadata from the `Tile` instance to which a…",null,null],[12,"has_extended_block_id","","From `TileHeader::has_extended_block_id`.",14,null],[12,"tile_frame_importances","","From `Properties::tile_frame_importances`.",14,null],[12,"is_block_painted","","From `ExtendedTileAttributes::is_block_painted`.",14,null],[12,"is_block_inactive","","From `ExtendedTileAttributes::is_block_inactive`.",14,null],[12,"shape","","From `TileAttributes::shape`.",14,null],[3,"Position","","Represents a position (or point) in terms of cartesian…",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[3,"TString","","Represents a string as per the data format; a fancy…",null,null],[3,"VariableTBitVec","","A variable-length vector of bits; a fancy wrapper around…",null,null],[3,"TBitVec","","A fixed-length vector of bits; a fancy wrapper around…",null,null],[3,"Footer","","",null,null],[3,"HardmodeOre","","Represents one of three types of ore available in hardmode.",null,null],[12,"raw_value","","",16,null],[12,"ore_type","","",16,null],[3,"Offsets","","Byte offsets in a `.wld` file corresponding to certain…",null,null],[12,"header","","The offset for where [`Header`] parsing should begin. This…",17,null],[12,"tiles","","The offset for where `TileMatrix` parsing should begin.",17,null],[12,"chests","","The offset for where `Chests` parsing should begin.",17,null],[12,"signs","","The offset for where `Signs` parsing should begin.",17,null],[12,"npcs","","The offset for where `NPCVec` parsing should begin.",17,null],[12,"tile_entities","","The offset for where `MobVec` parsing should begin.",17,null],[12,"pressure_plates","","The offset for where `PressurePlates` parsing should begin.",17,null],[12,"houses","","The offset for where `HouseVec` parsing should begin.",17,null],[12,"footer","","The offset for where `Footer` parsing should begin.",17,null],[3,"Header","","World file header.",null,null],[12,"version","","The version of Terraria which generated this world file.",18,null],[12,"revision","","The world revision.",18,null],[12,"is_favorite","","Whether or not the world has been marked as a \\\"favorite\\\".",18,null],[12,"offsets","","List of offsets.",18,null],[3,"House","","Represents NPC housing.",null,null],[12,"entity_type","","The NPC who lives in the house.",19,null],[12,"position","","The position of the house.",19,null],[3,"HouseVec","","A variable-length list of [`House`]s.",null,null],[3,"ItemStack","","Represents a stack of items in a [`Chest`].",null,null],[12,"quantity","","The number of items in this stack.  Defaults to `0`.",20,null],[12,"item_type","","The type of item in the stack.",20,null],[12,"modifier","","This may correspond to a prefix ID.",20,null],[3,"Chest","","Represents a chest.",null,null],[12,"position","","The position of this chest on the map.",21,null],[12,"name","","The custom name of this chest, if any. Defaults to an…",21,null],[12,"contents","","Chest contents.",21,null],[3,"ItemStackVec","","A list of [`ItemStack`]s, which make up the contents of a…",null,null],[3,"Chests","","Represents all [`Chest`]s in a Terraria world.",null,null],[12,"count","","The number of [`Chest`]s on the map.",22,null],[12,"stacks_per_chest","","The number of [`ItemStack`]s (or slots) per [`Chest`].",22,null],[12,"chests","","All the chests.",22,null],[3,"Mob","","Represents a \\\"mob\\\"; a non-friendly NPC entity.",null,null],[12,"entity_type","","The type of mob.",23,null],[12,"position_x","","X-coordinate.  I don\'t know why it\'s an [`f32`].",23,null],[12,"position_y","","Y-coordinate.  I don\'t know why it\'s an [`f32`], either.",23,null],[3,"MobVec","","List of [`Mob`]s; fancy wrapper around a [`Vec`].",null,null],[3,"NPC","","Represents a friendly NPC.",null,null],[12,"entity_type","","The type of NPC.",24,null],[12,"position_x","","X-coordinate.  I don\'t know why it\'s an [`f32`].",24,null],[12,"position_y","","Y-coordinate.  I don\'t know why it\'s an [`f32`], either.",24,null],[12,"name","","The name of this NPC.",24,null],[12,"home_position","","This may correspond to a `House` at the same position.",24,null],[12,"is_homeless","","If `True`, this NPC currently does not have living…",24,null],[3,"NPCVec","","",null,null],[3,"PressurePlates","","Represents all [`PressurePlate`]s in the game world.",null,null],[3,"Bounds","","Represents the size of a Terraria map, as a rectangle.",null,null],[12,"left","","The minimum x-coordinate of the map.",25,null],[12,"right","","The maximum x-coordinate of the map.",25,null],[12,"top","","The minimum y-coordinate of the map.",25,null],[12,"bottom","","The maximum y-coordinate of the map.",25,null],[3,"QuadrantStyle","","Represents styles which differ by \\\"quandrant\\\" of the map…",null,null],[12,"x1","","The X-coordinate separating the first quadrant from the…",26,null],[12,"x2","","The X-coordinate separating the second quadrant from the…",26,null],[12,"x3","","The X-coordinate separating the third quadrant from the…",26,null],[12,"first","","The value of the first quadrant\'s style, counting from the…",26,null],[12,"second","","The value of the second quadrant\'s style, counting from…",26,null],[12,"third","","The value of the third quadrant\'s style, counting from the…",26,null],[12,"fourth","","The value of the fourth quadrant\'s style, counting from…",26,null],[3,"WorldStyle","","A bucket in which some style information lives.",null,null],[12,"moon","","Represents the appearance of the moon.",27,null],[12,"trees","","Represents the appearance of the surface (?) over four map…",27,null],[12,"moss","","Represents the appearance of the moss (?) over four map…",27,null],[12,"underground_snow","","Represents the appearance of the underground snow biome.",27,null],[12,"underground_jungle","","Represents the appearance of the underground jungle biome.",27,null],[12,"hell","","Represents the appearance of the hell biome.",27,null],[3,"GeneratorInfo","","Information about the world seed.",null,null],[12,"seed","","The seed value which was used to generate the world.",28,null],[12,"version","","The version of the generator, I think.",28,null],[3,"TUuid","","A UUID.",null,null],[3,"Properties","","",null,null],[12,"tile_frame_importances","","",29,null],[12,"name","","",29,null],[12,"generator","","",29,null],[12,"uuid","","",29,null],[12,"id","","",29,null],[12,"bounds","","",29,null],[12,"height","","",29,null],[12,"width","","",29,null],[12,"is_expert","","",29,null],[12,"created_on","","",29,null],[12,"style","","",29,null],[12,"spawn_point","","",29,null],[12,"underground_level","","",29,null],[12,"cavern_level","","",29,null],[12,"current_time","","",29,null],[12,"is_daytime","","",29,null],[12,"moon_phase","","",29,null],[12,"is_blood_moon","","",29,null],[12,"is_eclipse","","",29,null],[12,"dungeon_point","","",29,null],[12,"evil_type","","",29,null],[3,"Sign","","",null,null],[12,"text","","",30,null],[12,"position","","",30,null],[3,"Signs","","",null,null],[12,"count","","",31,null],[12,"signs","","",31,null],[3,"BossesSlain","","",null,null],[12,"eye_of_cthulhu","","",32,null],[12,"eater_of_worlds","","",32,null],[12,"skeletron","","",32,null],[12,"queen_bee","","",32,null],[12,"the_twins","","",32,null],[12,"the_destroyer","","",32,null],[12,"skeletron_prime","","",32,null],[12,"mechanical_boss","","",32,null],[12,"plantera","","",32,null],[12,"golem","","",32,null],[12,"king_slime","","",32,null],[3,"BossesSlain2","","",null,null],[12,"duke_fishron","","",33,null],[12,"martian_madness","","",33,null],[12,"lunatic_cultist","","",33,null],[12,"moon_lord","","",33,null],[12,"pumpking","","",33,null],[12,"mourning_wood","","",33,null],[12,"ice_queen","","",33,null],[12,"santa_nk1","","",33,null],[12,"everscream","","",33,null],[12,"solar_pillar","","",33,null],[12,"vortex_pillar","","",33,null],[12,"nebula_pillar","","",33,null],[12,"stardust_pillar","","",33,null],[3,"PillarStatus","","",null,null],[12,"solar","","",34,null],[12,"vortex","","",34,null],[12,"nebula","","",34,null],[12,"stardust","","",34,null],[12,"is_active","","",34,null],[3,"SavedNPCs","","",null,null],[12,"goblin_tinkerer","","",35,null],[12,"wizard","","",35,null],[12,"mechanic","","",35,null],[3,"EventsCompleted","","",null,null],[12,"goblin_army","","",36,null],[12,"clown","","",36,null],[12,"frost_moon","","",36,null],[12,"pirates","","",36,null],[3,"ShadowOrbStatus","","",null,null],[12,"smashed","","",37,null],[12,"meteorite_spawned","","",37,null],[12,"evil_boss_counter","","",37,null],[3,"RainStatus","","",null,null],[12,"is_active","","",38,null],[12,"time_left","","",38,null],[12,"max_rain","","",38,null],[3,"InvasionStatus","","",null,null],[12,"delay","","",39,null],[12,"size","","",39,null],[12,"invasion_type","","",39,null],[12,"position","","",39,null],[12,"slime_rain_time_left","","",39,null],[3,"Backgrounds","","",null,null],[12,"forest","","",40,null],[12,"corruption","","",40,null],[12,"jungle","","",40,null],[12,"snow","","",40,null],[12,"hallow","","",40,null],[12,"crimson","","",40,null],[12,"desert","","",40,null],[12,"ocean","","",40,null],[3,"Clouds","","",null,null],[12,"background","","",41,null],[12,"count","","",41,null],[12,"wind_speed","","",41,null],[3,"AnglerQuestStatus","","A bucket for a few angler-related things.",null,null],[12,"completed_players","","A list of players, by name, who have completed the day\'s…",42,null],[12,"angler_saved","","If `true`, the Angler has been saved.",42,null],[12,"target","","The current quest fish; the objective of today\'s angler…",42,null],[3,"MobKills","","A list of kill counts corresponding to mobs.",null,null],[3,"PartyingNPCs","","A list of partying NPCs.",null,null],[3,"PartyStatus","","Various bits of party-related information.",null,null],[12,"party_center_is_active","","`True` if a party center is currently active.",43,null],[12,"natural_party_is_active","","`True` if a party which was not created with a party…",43,null],[12,"party_cooldown","","Assuming that this is the cooldown before another…",43,null],[12,"partying_npcs","","List of currently-partying NPCs.",43,null],[3,"SandstormStatus","","Bucket for info about sandstorm events.",null,null],[12,"is_active","","Whether or not a sandstorm is currently happening.",44,null],[12,"time_left","","How long the current sandstorm will last.",44,null],[12,"severity","","The \\\"severity\\\" of the sandstorm.",44,null],[12,"intended_severity","","Unknown.",44,null],[3,"OldOnesArmyStatus","","Represents the unlocked tiers of the Old One\'s Army event.",null,null],[12,"tier1","","Whether the first tier has been unlocked.",45,null],[12,"tier2","","Whether the second tier has been unlocked.",45,null],[12,"tier3","","Whether the third tier has been unlocked.",45,null],[3,"Status","","",null,null],[12,"bosses_slain","","",46,null],[12,"saved_npcs","","",46,null],[12,"events_completed","","",46,null],[12,"shadow_orb_status","","",46,null],[12,"smashed_altar_count","","",46,null],[12,"is_hardmode","","",46,null],[12,"invasion_status","","",46,null],[12,"sundial_cooldown","","",46,null],[12,"rain_status","","",46,null],[12,"hardmode_ore_1","","",46,null],[12,"hardmode_ore_2","","",46,null],[12,"hardmode_ore_3","","",46,null],[12,"backgrounds","","",46,null],[12,"clouds","","",46,null],[12,"angler_quest_status","","",46,null],[12,"stylist_saved","","",46,null],[12,"tax_collector_saved","","",46,null],[12,"invasion_size_start","","",46,null],[12,"cultist_delay","","",46,null],[12,"mob_kills","","",46,null],[12,"fast_forward_time","","",46,null],[12,"bosses_slain_2","","",46,null],[12,"pillar_status","","",46,null],[12,"party_status","","",46,null],[12,"sandstorm_status","","",46,null],[12,"bartender_saved","","",46,null],[12,"old_ones_army_status","","",46,null],[3,"LogicSensor","","",null,null],[12,"logic_check","","",47,null],[12,"enabled","","",47,null],[3,"TileEntity","","",null,null],[12,"id","","",48,null],[12,"position_x","","",48,null],[12,"position_y","","",48,null],[12,"tile_entity_type","","",48,null],[3,"TileEntities","","",null,null],[12,"count","","",49,null],[12,"tile_entities","","",49,null],[3,"Liquid","","",null,null],[12,"liquid_type","","",50,null],[12,"volume","","",50,null],[3,"Wiring","","Represents wires on a [`Tile`]. A `Tile` can have all of…",null,null],[12,"red","","If `true`, a red wire is present",51,null],[12,"green","","If `true`, a green wire is present",51,null],[12,"blue","","If `true`, a blue wire is present",51,null],[12,"yellow","","If `true`, a yellow wire is present",51,null],[12,"actuator","","If `true`, an actuator is present",51,null],[3,"RunLength","","",null,null],[12,"length","","",52,null],[12,"rle_type","","",52,null],[3,"TileHeader","","",null,null],[12,"has_block","","",53,null],[12,"has_attributes","","",53,null],[12,"has_wall","","",53,null],[12,"liquid_type","","",53,null],[12,"has_extended_block_id","","",53,null],[12,"rle_type","","",53,null],[3,"TileAttributes","","",null,null],[12,"shape","","",54,null],[12,"has_extended_attributes","","",54,null],[12,"wiring","","",54,null],[3,"ExtendedTileAttributes","","",null,null],[12,"is_block_inactive","","",55,null],[12,"is_block_painted","","",55,null],[12,"is_wall_painted","","",55,null],[12,"wiring","","",55,null],[3,"Tile","","",null,null],[12,"block","","",56,null],[12,"wall","","",56,null],[12,"liquid","","",56,null],[12,"wiring","","",56,null],[12,"run_length","","",56,null],[12,"position","","",56,null],[3,"WorldCtx","","",null,null],[12,"world_width","","",57,null],[12,"world_height","","",57,null],[12,"tile_frame_importances","","",57,null],[12,"id","","",57,null],[12,"name","","",57,null],[3,"TileCtx","","",null,null],[3,"TileVec","","",null,null],[3,"TileMatrix","","",null,null],[3,"Wall","","",null,null],[12,"wall_type","","",58,null],[12,"wall_paint","","",58,null],[3,"World","","Top-level representation of a Terraria world file (`.wld`).",null,null],[12,"header","","",59,null],[12,"properties","","",59,null],[12,"status","","",59,null],[12,"tiles","","",59,null],[12,"chests","","",59,null],[12,"signs","","",59,null],[12,"npcs","","",59,null],[12,"mobs","","",59,null],[12,"tile_entities","","",59,null],[12,"pressure_plates","","",59,null],[12,"houses","","",59,null],[12,"town_manager","","",59,null],[12,"footer","","",59,null],[3,"TownManager","","",null,null],[11,"new","","",15,[[],["position",3]]],[11,"bitvec","","Returns the underlying `BitVec`.",60,[[],["bitvec",3]]],[11,"size","","The \\\"variable\\\" part of the variable length.",60,[[]]],[11,"set","","Sets a bit at [`usize`] index `idx` to [`bool`] `value`.",61,[[]]],[11,"new","","Convenience method to instantiate a new [`Header`].",18,[[["offsets",3]]]],[11,"total_quantity","","Gets the total count of items in this [`ItemStackVec`],…",62,[[]]],[11,"find_chest_at_position","","Try to find a [`Chest`] at a particular `Position`.",22,[[["position",3]],[["option",4],["chest",3]]]],[11,"new","","",26,[[],["quadrantstyle",3]]],[11,"new","","Convenience method to create a [`GeneratorInfo`] instance.",28,[[]]],[11,"as_world_context","","",29,[[],["worldctx",3]]],[11,"find_sign_at_position","","",31,[[["position",3]],[["option",4],["sign",3]]]],[11,"find_tile_entity_at_position","","",49,[[["position",3]],[["tileentity",3],["option",4]]]],[11,"new","","",51,[[],["wiring",3]]],[11,"assign_bits","","Flips bits in a [`TBitVec`] for red, green, and blue wires.",51,[[["tbitvec",3]]]],[11,"assign_extended_bits","","",51,[[["tbitvec",3]]]],[11,"has_wires","","Returns `true` if any wire or actuator is present.",51,[[]]],[11,"extend","","Extend this [`Wiring`] with another. Only enables flags;…",51,[[]]],[11,"new","","",52,[[["rletype",4]],["runlength",3]]],[11,"chest","","",56,[[["chests",3]],[["option",4],["chest",3]]]],[11,"sign","","",56,[[["signs",3]],[["option",4],["sign",3]]]],[11,"tile_entity","","",56,[[["tileentities",3]],[["tileentity",3],["option",4]]]],[11,"new","","",57,[[["variabletbitvec",3],["tstring",3]],["worldctx",3]]],[11,"tile_at_position","","",63,[[["position",3]],["tile",3]]],[11,"read","","Reads a [`World`] from a slice of bytes.",59,[[],[["result",4],["scrollerror",4]]]],[11,"write","","Given a [`World`] instance, serialize into a slice of bytes.",59,[[],[["result",4],["box",3],["box",3]]]],[11,"render","","Given a [`World`] instance, render a PNG to file at `path`.",59,[[],[["box",3],["result",4]]]],[6,"PressurePlate","","Represents a pressure plate.",null,null],[6,"MoonStyle","","Represents the appearance of the moon.",null,null],[6,"UndergroundSnowStyle","","Represents the appearance of the underground snow biome\'s…",null,null],[6,"UndergroundJungleStyle","","Represents the appearance of the underground jungle…",null,null],[6,"HellStyle","","Represents the appearance of the hell biome\'s background.",null,null],[11,"from","wld::constants","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"value_into","","",64,[[],["result",4]]],[11,"approx_from","","",64,[[],["result",4]]],[11,"approx_into","","",64,[[],["result",4]]],[11,"value_from","","",64,[[],["result",4]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"value_into","","",65,[[],["result",4]]],[11,"approx_from","","",65,[[],["result",4]]],[11,"approx_into","","",65,[[],["result",4]]],[11,"value_from","","",65,[[],["result",4]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"value_into","","",66,[[],["result",4]]],[11,"approx_from","","",66,[[],["result",4]]],[11,"approx_into","","",66,[[],["result",4]]],[11,"value_from","","",66,[[],["result",4]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"vzip","","",66,[[]]],[11,"from","wld::enums","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"value_into","","",0,[[],["result",4]]],[11,"approx_from","","",0,[[],["result",4]]],[11,"approx_into","","",0,[[],["result",4]]],[11,"value_from","","",0,[[],["result",4]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"value_into","","",1,[[],["result",4]]],[11,"approx_from","","",1,[[],["result",4]]],[11,"approx_into","","",1,[[],["result",4]]],[11,"value_from","","",1,[[],["result",4]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"value_into","","",2,[[],["result",4]]],[11,"approx_from","","",2,[[],["result",4]]],[11,"approx_into","","",2,[[],["result",4]]],[11,"value_from","","",2,[[],["result",4]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"value_into","","",3,[[],["result",4]]],[11,"approx_from","","",3,[[],["result",4]]],[11,"approx_into","","",3,[[],["result",4]]],[11,"value_from","","",3,[[],["result",4]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"value_into","","",4,[[],["result",4]]],[11,"approx_from","","",4,[[],["result",4]]],[11,"approx_into","","",4,[[],["result",4]]],[11,"value_from","","",4,[[],["result",4]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"value_into","","",5,[[],["result",4]]],[11,"approx_from","","",5,[[],["result",4]]],[11,"approx_into","","",5,[[],["result",4]]],[11,"value_from","","",5,[[],["result",4]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"value_into","","",6,[[],["result",4]]],[11,"approx_from","","",6,[[],["result",4]]],[11,"approx_into","","",6,[[],["result",4]]],[11,"value_from","","",6,[[],["result",4]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"value_into","","",7,[[],["result",4]]],[11,"approx_from","","",7,[[],["result",4]]],[11,"approx_into","","",7,[[],["result",4]]],[11,"value_from","","",7,[[],["result",4]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"value_into","","",8,[[],["result",4]]],[11,"approx_from","","",8,[[],["result",4]]],[11,"approx_into","","",8,[[],["result",4]]],[11,"value_from","","",8,[[],["result",4]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"value_into","","",9,[[],["result",4]]],[11,"approx_from","","",9,[[],["result",4]]],[11,"approx_into","","",9,[[],["result",4]]],[11,"value_from","","",9,[[],["result",4]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"value_into","","",10,[[],["result",4]]],[11,"approx_from","","",10,[[],["result",4]]],[11,"approx_into","","",10,[[],["result",4]]],[11,"value_from","","",10,[[],["result",4]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"value_into","","",11,[[],["result",4]]],[11,"approx_from","","",11,[[],["result",4]]],[11,"approx_into","","",11,[[],["result",4]]],[11,"value_from","","",11,[[],["result",4]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"value_into","","",12,[[],["result",4]]],[11,"approx_from","","",12,[[],["result",4]]],[11,"approx_into","","",12,[[],["result",4]]],[11,"value_from","","",12,[[],["result",4]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"vzip","","",12,[[]]],[11,"from","wld::models","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"value_into","","",67,[[],["result",4]]],[11,"approx_from","","",67,[[],["result",4]]],[11,"approx_into","","",67,[[],["result",4]]],[11,"value_from","","",67,[[],["result",4]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"vzip","","",67,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"value_into","","",13,[[],["result",4]]],[11,"approx_from","","",13,[[],["result",4]]],[11,"approx_into","","",13,[[],["result",4]]],[11,"value_from","","",13,[[],["result",4]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"value_into","","",14,[[],["result",4]]],[11,"approx_from","","",14,[[],["result",4]]],[11,"approx_into","","",14,[[],["result",4]]],[11,"value_from","","",14,[[],["result",4]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"value_into","","",15,[[],["result",4]]],[11,"approx_from","","",15,[[],["result",4]]],[11,"approx_into","","",15,[[],["result",4]]],[11,"value_from","","",15,[[],["result",4]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"vzip","","",15,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"value_into","","",68,[[],["result",4]]],[11,"approx_from","","",68,[[],["result",4]]],[11,"approx_into","","",68,[[],["result",4]]],[11,"value_from","","",68,[[],["result",4]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"vzip","","",68,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"value_into","","",60,[[],["result",4]]],[11,"approx_from","","",60,[[],["result",4]]],[11,"approx_into","","",60,[[],["result",4]]],[11,"value_from","","",60,[[],["result",4]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"value_into","","",61,[[],["result",4]]],[11,"approx_from","","",61,[[],["result",4]]],[11,"approx_into","","",61,[[],["result",4]]],[11,"value_from","","",61,[[],["result",4]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"vzip","","",61,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"value_into","","",69,[[],["result",4]]],[11,"approx_from","","",69,[[],["result",4]]],[11,"approx_into","","",69,[[],["result",4]]],[11,"value_from","","",69,[[],["result",4]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"vzip","","",69,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"value_into","","",16,[[],["result",4]]],[11,"approx_from","","",16,[[],["result",4]]],[11,"approx_into","","",16,[[],["result",4]]],[11,"value_from","","",16,[[],["result",4]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"value_into","","",17,[[],["result",4]]],[11,"approx_from","","",17,[[],["result",4]]],[11,"approx_into","","",17,[[],["result",4]]],[11,"value_from","","",17,[[],["result",4]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"value_into","","",18,[[],["result",4]]],[11,"approx_from","","",18,[[],["result",4]]],[11,"approx_into","","",18,[[],["result",4]]],[11,"value_from","","",18,[[],["result",4]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"value_into","","",19,[[],["result",4]]],[11,"approx_from","","",19,[[],["result",4]]],[11,"approx_into","","",19,[[],["result",4]]],[11,"value_from","","",19,[[],["result",4]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"vzip","","",19,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"into_iter","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"value_into","","",70,[[],["result",4]]],[11,"approx_from","","",70,[[],["result",4]]],[11,"approx_into","","",70,[[],["result",4]]],[11,"value_from","","",70,[[],["result",4]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"vzip","","",70,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"value_into","","",20,[[],["result",4]]],[11,"approx_from","","",20,[[],["result",4]]],[11,"approx_into","","",20,[[],["result",4]]],[11,"value_from","","",20,[[],["result",4]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"value_into","","",21,[[],["result",4]]],[11,"approx_from","","",21,[[],["result",4]]],[11,"approx_into","","",21,[[],["result",4]]],[11,"value_from","","",21,[[],["result",4]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"vzip","","",21,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"into_iter","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"value_into","","",62,[[],["result",4]]],[11,"approx_from","","",62,[[],["result",4]]],[11,"approx_into","","",62,[[],["result",4]]],[11,"value_from","","",62,[[],["result",4]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"vzip","","",62,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"value_into","","",22,[[],["result",4]]],[11,"approx_from","","",22,[[],["result",4]]],[11,"approx_into","","",22,[[],["result",4]]],[11,"value_from","","",22,[[],["result",4]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"value_into","","",23,[[],["result",4]]],[11,"approx_from","","",23,[[],["result",4]]],[11,"approx_into","","",23,[[],["result",4]]],[11,"value_from","","",23,[[],["result",4]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"vzip","","",23,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"value_into","","",71,[[],["result",4]]],[11,"approx_from","","",71,[[],["result",4]]],[11,"approx_into","","",71,[[],["result",4]]],[11,"value_from","","",71,[[],["result",4]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"vzip","","",71,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"value_into","","",24,[[],["result",4]]],[11,"approx_from","","",24,[[],["result",4]]],[11,"approx_into","","",24,[[],["result",4]]],[11,"value_from","","",24,[[],["result",4]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"vzip","","",24,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"value_into","","",72,[[],["result",4]]],[11,"approx_from","","",72,[[],["result",4]]],[11,"approx_into","","",72,[[],["result",4]]],[11,"value_from","","",72,[[],["result",4]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"value_into","","",73,[[],["result",4]]],[11,"approx_from","","",73,[[],["result",4]]],[11,"approx_into","","",73,[[],["result",4]]],[11,"value_from","","",73,[[],["result",4]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"vzip","","",73,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"value_into","","",25,[[],["result",4]]],[11,"approx_from","","",25,[[],["result",4]]],[11,"approx_into","","",25,[[],["result",4]]],[11,"value_from","","",25,[[],["result",4]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"value_into","","",26,[[],["result",4]]],[11,"approx_from","","",26,[[],["result",4]]],[11,"approx_into","","",26,[[],["result",4]]],[11,"value_from","","",26,[[],["result",4]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"value_into","","",27,[[],["result",4]]],[11,"approx_from","","",27,[[],["result",4]]],[11,"approx_into","","",27,[[],["result",4]]],[11,"value_from","","",27,[[],["result",4]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"value_into","","",28,[[],["result",4]]],[11,"approx_from","","",28,[[],["result",4]]],[11,"approx_into","","",28,[[],["result",4]]],[11,"value_from","","",28,[[],["result",4]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"vzip","","",28,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"value_into","","",74,[[],["result",4]]],[11,"approx_from","","",74,[[],["result",4]]],[11,"approx_into","","",74,[[],["result",4]]],[11,"value_from","","",74,[[],["result",4]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"vzip","","",74,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"value_into","","",29,[[],["result",4]]],[11,"approx_from","","",29,[[],["result",4]]],[11,"approx_into","","",29,[[],["result",4]]],[11,"value_from","","",29,[[],["result",4]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"value_into","","",30,[[],["result",4]]],[11,"approx_from","","",30,[[],["result",4]]],[11,"approx_into","","",30,[[],["result",4]]],[11,"value_from","","",30,[[],["result",4]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"value_into","","",31,[[],["result",4]]],[11,"approx_from","","",31,[[],["result",4]]],[11,"approx_into","","",31,[[],["result",4]]],[11,"value_from","","",31,[[],["result",4]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"value_into","","",32,[[],["result",4]]],[11,"approx_from","","",32,[[],["result",4]]],[11,"approx_into","","",32,[[],["result",4]]],[11,"value_from","","",32,[[],["result",4]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"value_into","","",33,[[],["result",4]]],[11,"approx_from","","",33,[[],["result",4]]],[11,"approx_into","","",33,[[],["result",4]]],[11,"value_from","","",33,[[],["result",4]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"value_into","","",34,[[],["result",4]]],[11,"approx_from","","",34,[[],["result",4]]],[11,"approx_into","","",34,[[],["result",4]]],[11,"value_from","","",34,[[],["result",4]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"value_into","","",35,[[],["result",4]]],[11,"approx_from","","",35,[[],["result",4]]],[11,"approx_into","","",35,[[],["result",4]]],[11,"value_from","","",35,[[],["result",4]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"value_into","","",36,[[],["result",4]]],[11,"approx_from","","",36,[[],["result",4]]],[11,"approx_into","","",36,[[],["result",4]]],[11,"value_from","","",36,[[],["result",4]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"value_into","","",37,[[],["result",4]]],[11,"approx_from","","",37,[[],["result",4]]],[11,"approx_into","","",37,[[],["result",4]]],[11,"value_from","","",37,[[],["result",4]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"value_into","","",38,[[],["result",4]]],[11,"approx_from","","",38,[[],["result",4]]],[11,"approx_into","","",38,[[],["result",4]]],[11,"value_from","","",38,[[],["result",4]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"value_into","","",39,[[],["result",4]]],[11,"approx_from","","",39,[[],["result",4]]],[11,"approx_into","","",39,[[],["result",4]]],[11,"value_from","","",39,[[],["result",4]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"value_into","","",40,[[],["result",4]]],[11,"approx_from","","",40,[[],["result",4]]],[11,"approx_into","","",40,[[],["result",4]]],[11,"value_from","","",40,[[],["result",4]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"value_into","","",41,[[],["result",4]]],[11,"approx_from","","",41,[[],["result",4]]],[11,"approx_into","","",41,[[],["result",4]]],[11,"value_from","","",41,[[],["result",4]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"value_into","","",42,[[],["result",4]]],[11,"approx_from","","",42,[[],["result",4]]],[11,"approx_into","","",42,[[],["result",4]]],[11,"value_from","","",42,[[],["result",4]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"vzip","","",42,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"value_into","","",75,[[],["result",4]]],[11,"approx_from","","",75,[[],["result",4]]],[11,"approx_into","","",75,[[],["result",4]]],[11,"value_from","","",75,[[],["result",4]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"value_into","","",76,[[],["result",4]]],[11,"approx_from","","",76,[[],["result",4]]],[11,"approx_into","","",76,[[],["result",4]]],[11,"value_from","","",76,[[],["result",4]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"vzip","","",76,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"value_into","","",43,[[],["result",4]]],[11,"approx_from","","",43,[[],["result",4]]],[11,"approx_into","","",43,[[],["result",4]]],[11,"value_from","","",43,[[],["result",4]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"value_into","","",44,[[],["result",4]]],[11,"approx_from","","",44,[[],["result",4]]],[11,"approx_into","","",44,[[],["result",4]]],[11,"value_from","","",44,[[],["result",4]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"value_into","","",45,[[],["result",4]]],[11,"approx_from","","",45,[[],["result",4]]],[11,"approx_into","","",45,[[],["result",4]]],[11,"value_from","","",45,[[],["result",4]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"value_into","","",46,[[],["result",4]]],[11,"approx_from","","",46,[[],["result",4]]],[11,"approx_into","","",46,[[],["result",4]]],[11,"value_from","","",46,[[],["result",4]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"value_into","","",47,[[],["result",4]]],[11,"approx_from","","",47,[[],["result",4]]],[11,"approx_into","","",47,[[],["result",4]]],[11,"value_from","","",47,[[],["result",4]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"value_into","","",48,[[],["result",4]]],[11,"approx_from","","",48,[[],["result",4]]],[11,"approx_into","","",48,[[],["result",4]]],[11,"value_from","","",48,[[],["result",4]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"value_into","","",49,[[],["result",4]]],[11,"approx_from","","",49,[[],["result",4]]],[11,"approx_into","","",49,[[],["result",4]]],[11,"value_from","","",49,[[],["result",4]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"value_into","","",50,[[],["result",4]]],[11,"approx_from","","",50,[[],["result",4]]],[11,"approx_into","","",50,[[],["result",4]]],[11,"value_from","","",50,[[],["result",4]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"value_into","","",51,[[],["result",4]]],[11,"approx_from","","",51,[[],["result",4]]],[11,"approx_into","","",51,[[],["result",4]]],[11,"value_from","","",51,[[],["result",4]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"value_into","","",52,[[],["result",4]]],[11,"approx_from","","",52,[[],["result",4]]],[11,"approx_into","","",52,[[],["result",4]]],[11,"value_from","","",52,[[],["result",4]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"value_into","","",53,[[],["result",4]]],[11,"approx_from","","",53,[[],["result",4]]],[11,"approx_into","","",53,[[],["result",4]]],[11,"value_from","","",53,[[],["result",4]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"value_into","","",54,[[],["result",4]]],[11,"approx_from","","",54,[[],["result",4]]],[11,"approx_into","","",54,[[],["result",4]]],[11,"value_from","","",54,[[],["result",4]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"value_into","","",55,[[],["result",4]]],[11,"approx_from","","",55,[[],["result",4]]],[11,"approx_into","","",55,[[],["result",4]]],[11,"value_from","","",55,[[],["result",4]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"value_into","","",56,[[],["result",4]]],[11,"approx_from","","",56,[[],["result",4]]],[11,"approx_into","","",56,[[],["result",4]]],[11,"value_from","","",56,[[],["result",4]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"value_into","","",57,[[],["result",4]]],[11,"approx_from","","",57,[[],["result",4]]],[11,"approx_into","","",57,[[],["result",4]]],[11,"value_from","","",57,[[],["result",4]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"vzip","","",57,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"value_into","","",77,[[],["result",4]]],[11,"approx_from","","",77,[[],["result",4]]],[11,"approx_into","","",77,[[],["result",4]]],[11,"value_from","","",77,[[],["result",4]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"value_into","","",78,[[],["result",4]]],[11,"approx_from","","",78,[[],["result",4]]],[11,"approx_into","","",78,[[],["result",4]]],[11,"value_from","","",78,[[],["result",4]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"vzip","","",78,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"value_into","","",63,[[],["result",4]]],[11,"approx_from","","",63,[[],["result",4]]],[11,"approx_into","","",63,[[],["result",4]]],[11,"value_from","","",63,[[],["result",4]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"vzip","","",63,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"value_into","","",58,[[],["result",4]]],[11,"approx_from","","",58,[[],["result",4]]],[11,"approx_into","","",58,[[],["result",4]]],[11,"value_from","","",58,[[],["result",4]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"value_into","","",59,[[],["result",4]]],[11,"approx_from","","",59,[[],["result",4]]],[11,"approx_into","","",59,[[],["result",4]]],[11,"value_from","","",59,[[],["result",4]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"vzip","","",59,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"value_into","","",79,[[],["result",4]]],[11,"approx_from","","",79,[[],["result",4]]],[11,"approx_into","","",79,[[],["result",4]]],[11,"value_from","","",79,[[],["result",4]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"vzip","","",79,[[]]],[11,"fmt","","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",67,[[],["uuid",3]]],[11,"from_str","","",67,[[],[["uuid",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","","",67,[[]]],[11,"clone","","",67,[[],["uuid",3]]],[11,"fmt","","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",67,[[["uuid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",67,[[["uuid",3]]]],[11,"le","","",67,[[["uuid",3]]]],[11,"gt","","",67,[[["uuid",3]]]],[11,"ge","","",67,[[["uuid",3]]]],[11,"fmt","","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",67,[[["uuid",3]],["ordering",4]]],[11,"eq","","",67,[[["uuid",3]]]],[11,"ne","","",67,[[["uuid",3]]]],[11,"as_mut","","",61,[[],["bitvec",3]]],[11,"as_mut","","",63,[[],["vec",3]]],[11,"as_ref","","",61,[[],["bitvec",3]]],[11,"as_ref","","",70,[[],["vec",3]]],[11,"as_ref","","",62,[[],["vec",3]]],[11,"as_ref","","",71,[[],["vec",3]]],[11,"as_ref","","",72,[[],["vec",3]]],[11,"as_ref","","",73,[[],["vec",3]]],[11,"as_ref","","",74,[[],["uuid",3]]],[11,"as_ref","","",75,[[],["vec",3]]],[11,"as_ref","","",76,[[],["vec",3]]],[11,"as_ref","","",78,[[],["vec",3]]],[11,"as_ref","","",63,[[],["vec",3]]],[11,"as_ref","","",79,[[],["vec",3]]],[11,"from","wld::enums","",8,[[["tbitvec",3]]]],[11,"from","wld::models","",68,[[]]],[11,"from","","",68,[[["string",3]]]],[11,"from","","",60,[[],["variabletbitvec",3]]],[11,"from","","",60,[[["vec",3]]]],[11,"from","","",61,[[["lsb0",3],["bitvec",3]],["tbitvec",3]]],[11,"from","","",61,[[["vec",3]]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[["tileheader",3]]]],[11,"from","","",61,[[["tileattributes",3]]]],[11,"from","","",61,[[["extendedtileattributes",3]]]],[11,"from","","",74,[[["uuid",3]]]],[11,"from","","Used when extended attributes are present. Extended…",51,[[]]],[11,"from","","Create a [`Wiring`] instance given the bits from…",51,[[["tbitvec",3]]]],[11,"into_iter","","",70,[[]]],[11,"into_iter","","",62,[[]]],[11,"clone","wld::enums","",0,[[],["anglerquestfish",4]]],[11,"clone","","",1,[[],["blockshape",4]]],[11,"clone","","",2,[[],["blocktype",4]]],[11,"clone","","",3,[[],["entitytype",4]]],[11,"clone","","",4,[[],["eviltype",4]]],[11,"clone","","",5,[[],["hardmodeoretype",4]]],[11,"clone","","",6,[[],["invasiontype",4]]],[11,"clone","","",7,[[],["itemtype",4]]],[11,"clone","","",8,[[],["liquidtype",4]]],[11,"clone","","",9,[[],["rletype",4]]],[11,"clone","","",10,[[],["tbool",4]]],[11,"clone","","",11,[[],["tileentitytype",4]]],[11,"clone","","",12,[[],["walltype",4]]],[11,"clone","wld::models","",13,[[],["block",3]]],[11,"clone","","",14,[[],["blockctx",3]]],[11,"clone","","",15,[[],["position",3]]],[11,"clone","","",68,[[],["tstring",3]]],[11,"clone","","",60,[[],["variabletbitvec",3]]],[11,"clone","","",61,[[],["tbitvec",3]]],[11,"clone","","",69,[[],["footer",3]]],[11,"clone","","",16,[[],["hardmodeore",3]]],[11,"clone","","",17,[[],["offsets",3]]],[11,"clone","","",18,[[],["header",3]]],[11,"clone","","",19,[[],["house",3]]],[11,"clone","","",70,[[],["housevec",3]]],[11,"clone","","",20,[[],["itemstack",3]]],[11,"clone","","",21,[[],["chest",3]]],[11,"clone","","",62,[[],["itemstackvec",3]]],[11,"clone","","",22,[[],["chests",3]]],[11,"clone","","",23,[[],["mob",3]]],[11,"clone","","",71,[[],["mobvec",3]]],[11,"clone","","",24,[[],["npc",3]]],[11,"clone","","",72,[[],["npcvec",3]]],[11,"clone","","",73,[[],["pressureplates",3]]],[11,"clone","","",25,[[],["bounds",3]]],[11,"clone","","",26,[[],["quadrantstyle",3]]],[11,"clone","","",27,[[],["worldstyle",3]]],[11,"clone","","",28,[[],["generatorinfo",3]]],[11,"clone","","",74,[[],["tuuid",3]]],[11,"clone","","",29,[[],["properties",3]]],[11,"clone","","",30,[[],["sign",3]]],[11,"clone","","",31,[[],["signs",3]]],[11,"clone","","",32,[[],["bossesslain",3]]],[11,"clone","","",33,[[],["bossesslain2",3]]],[11,"clone","","",34,[[],["pillarstatus",3]]],[11,"clone","","",35,[[],["savednpcs",3]]],[11,"clone","","",36,[[],["eventscompleted",3]]],[11,"clone","","",37,[[],["shadoworbstatus",3]]],[11,"clone","","",38,[[],["rainstatus",3]]],[11,"clone","","",39,[[],["invasionstatus",3]]],[11,"clone","","",40,[[],["backgrounds",3]]],[11,"clone","","",41,[[],["clouds",3]]],[11,"clone","","",42,[[],["anglerqueststatus",3]]],[11,"clone","","",75,[[],["mobkills",3]]],[11,"clone","","",76,[[],["partyingnpcs",3]]],[11,"clone","","",43,[[],["partystatus",3]]],[11,"clone","","",44,[[],["sandstormstatus",3]]],[11,"clone","","",45,[[],["oldonesarmystatus",3]]],[11,"clone","","",46,[[],["status",3]]],[11,"clone","","",47,[[],["logicsensor",3]]],[11,"clone","","",48,[[],["tileentity",3]]],[11,"clone","","",49,[[],["tileentities",3]]],[11,"clone","","",50,[[],["liquid",3]]],[11,"clone","","",51,[[],["wiring",3]]],[11,"clone","","",52,[[],["runlength",3]]],[11,"clone","","",53,[[],["tileheader",3]]],[11,"clone","","",54,[[],["tileattributes",3]]],[11,"clone","","",55,[[],["extendedtileattributes",3]]],[11,"clone","","",56,[[],["tile",3]]],[11,"clone","","",57,[[],["worldctx",3]]],[11,"clone","","",77,[[],["tilectx",3]]],[11,"clone","","",78,[[],["tilevec",3]]],[11,"clone","","",63,[[],["tilematrix",3]]],[11,"clone","","",58,[[],["wall",3]]],[11,"clone","","",59,[[],["world",3]]],[11,"clone","","",79,[[],["townmanager",3]]],[11,"default","wld::enums","",1,[[]]],[11,"default","wld::models","",15,[[],["position",3]]],[11,"default","","",68,[[],["tstring",3]]],[11,"default","","",60,[[],["variabletbitvec",3]]],[11,"default","","",61,[[],["tbitvec",3]]],[11,"default","","",17,[[],["offsets",3]]],[11,"default","","",18,[[],["header",3]]],[11,"default","","",70,[[],["housevec",3]]],[11,"default","","",62,[[],["itemstackvec",3]]],[11,"default","","",22,[[],["chests",3]]],[11,"default","","",71,[[],["mobvec",3]]],[11,"default","","",72,[[],["npcvec",3]]],[11,"default","","",73,[[],["pressureplates",3]]],[11,"default","","",25,[[],["bounds",3]]],[11,"default","","",26,[[],["quadrantstyle",3]]],[11,"default","","",27,[[],["worldstyle",3]]],[11,"default","","",28,[[],["generatorinfo",3]]],[11,"default","","",74,[[],["tuuid",3]]],[11,"default","","",31,[[],["signs",3]]],[11,"default","","",49,[[],["tileentities",3]]],[11,"default","","Creates a [`Wiring`] instance with all flags disabled.",51,[[]]],[11,"default","","",54,[[],["tileattributes",3]]],[11,"default","","",55,[[],["extendedtileattributes",3]]],[11,"default","","",78,[[],["tilevec",3]]],[11,"default","","",63,[[],["tilematrix",3]]],[11,"default","","",79,[[],["townmanager",3]]],[11,"eq","wld::enums","",0,[[["anglerquestfish",4]]]],[11,"eq","","",1,[[["blockshape",4]]]],[11,"eq","","",2,[[["blocktype",4]]]],[11,"eq","","",3,[[["entitytype",4]]]],[11,"eq","","",4,[[["eviltype",4]]]],[11,"eq","","",5,[[["hardmodeoretype",4]]]],[11,"eq","","",6,[[["invasiontype",4]]]],[11,"eq","","",7,[[["itemtype",4]]]],[11,"eq","","",8,[[["liquidtype",4]]]],[11,"eq","","",9,[[["rletype",4]]]],[11,"eq","","",10,[[["tbool",4]]]],[11,"eq","","",11,[[["tileentitytype",4]]]],[11,"ne","","",11,[[["tileentitytype",4]]]],[11,"eq","","",12,[[["walltype",4]]]],[11,"eq","wld::models","",13,[[["block",3]]]],[11,"ne","","",13,[[["block",3]]]],[11,"eq","","",14,[[["blockctx",3]]]],[11,"ne","","",14,[[["blockctx",3]]]],[11,"eq","","",15,[[["position",3]]]],[11,"ne","","",15,[[["position",3]]]],[11,"eq","","",68,[[["tstring",3]]]],[11,"ne","","",68,[[["tstring",3]]]],[11,"eq","","",60,[[["variabletbitvec",3]]]],[11,"ne","","",60,[[["variabletbitvec",3]]]],[11,"eq","","",61,[[["tbitvec",3]]]],[11,"ne","","",61,[[["tbitvec",3]]]],[11,"eq","","",69,[[["footer",3]]]],[11,"eq","","",16,[[["hardmodeore",3]]]],[11,"ne","","",16,[[["hardmodeore",3]]]],[11,"eq","","",17,[[["offsets",3]]]],[11,"ne","","",17,[[["offsets",3]]]],[11,"eq","","",18,[[["header",3]]]],[11,"ne","","",18,[[["header",3]]]],[11,"eq","","",19,[[["house",3]]]],[11,"ne","","",19,[[["house",3]]]],[11,"eq","","",70,[[["housevec",3]]]],[11,"ne","","",70,[[["housevec",3]]]],[11,"eq","","",20,[[["itemstack",3]]]],[11,"ne","","",20,[[["itemstack",3]]]],[11,"eq","","",21,[[["chest",3]]]],[11,"ne","","",21,[[["chest",3]]]],[11,"eq","","",62,[[["itemstackvec",3]]]],[11,"ne","","",62,[[["itemstackvec",3]]]],[11,"eq","","",22,[[["chests",3]]]],[11,"ne","","",22,[[["chests",3]]]],[11,"eq","","",23,[[["mob",3]]]],[11,"ne","","",23,[[["mob",3]]]],[11,"eq","","",71,[[["mobvec",3]]]],[11,"ne","","",71,[[["mobvec",3]]]],[11,"eq","","",24,[[["npc",3]]]],[11,"ne","","",24,[[["npc",3]]]],[11,"eq","","",72,[[["npcvec",3]]]],[11,"ne","","",72,[[["npcvec",3]]]],[11,"eq","","",73,[[["pressureplates",3]]]],[11,"ne","","",73,[[["pressureplates",3]]]],[11,"eq","","",25,[[["bounds",3]]]],[11,"ne","","",25,[[["bounds",3]]]],[11,"eq","","",26,[[["quadrantstyle",3]]]],[11,"ne","","",26,[[["quadrantstyle",3]]]],[11,"eq","","",27,[[["worldstyle",3]]]],[11,"ne","","",27,[[["worldstyle",3]]]],[11,"eq","","",28,[[["generatorinfo",3]]]],[11,"ne","","",28,[[["generatorinfo",3]]]],[11,"eq","","",74,[[["tuuid",3]]]],[11,"ne","","",74,[[["tuuid",3]]]],[11,"eq","","",29,[[["properties",3]]]],[11,"ne","","",29,[[["properties",3]]]],[11,"eq","","",30,[[["sign",3]]]],[11,"ne","","",30,[[["sign",3]]]],[11,"eq","","",31,[[["signs",3]]]],[11,"ne","","",31,[[["signs",3]]]],[11,"eq","","",32,[[["bossesslain",3]]]],[11,"ne","","",32,[[["bossesslain",3]]]],[11,"eq","","",33,[[["bossesslain2",3]]]],[11,"ne","","",33,[[["bossesslain2",3]]]],[11,"eq","","",34,[[["pillarstatus",3]]]],[11,"ne","","",34,[[["pillarstatus",3]]]],[11,"eq","","",35,[[["savednpcs",3]]]],[11,"ne","","",35,[[["savednpcs",3]]]],[11,"eq","","",36,[[["eventscompleted",3]]]],[11,"ne","","",36,[[["eventscompleted",3]]]],[11,"eq","","",37,[[["shadoworbstatus",3]]]],[11,"ne","","",37,[[["shadoworbstatus",3]]]],[11,"eq","","",38,[[["rainstatus",3]]]],[11,"ne","","",38,[[["rainstatus",3]]]],[11,"eq","","",39,[[["invasionstatus",3]]]],[11,"ne","","",39,[[["invasionstatus",3]]]],[11,"eq","","",40,[[["backgrounds",3]]]],[11,"ne","","",40,[[["backgrounds",3]]]],[11,"eq","","",41,[[["clouds",3]]]],[11,"ne","","",41,[[["clouds",3]]]],[11,"eq","","",42,[[["anglerqueststatus",3]]]],[11,"ne","","",42,[[["anglerqueststatus",3]]]],[11,"eq","","",75,[[["mobkills",3]]]],[11,"ne","","",75,[[["mobkills",3]]]],[11,"eq","","",76,[[["partyingnpcs",3]]]],[11,"ne","","",76,[[["partyingnpcs",3]]]],[11,"eq","","",43,[[["partystatus",3]]]],[11,"ne","","",43,[[["partystatus",3]]]],[11,"eq","","",44,[[["sandstormstatus",3]]]],[11,"ne","","",44,[[["sandstormstatus",3]]]],[11,"eq","","",45,[[["oldonesarmystatus",3]]]],[11,"ne","","",45,[[["oldonesarmystatus",3]]]],[11,"eq","","",46,[[["status",3]]]],[11,"ne","","",46,[[["status",3]]]],[11,"eq","","",47,[[["logicsensor",3]]]],[11,"ne","","",47,[[["logicsensor",3]]]],[11,"eq","","",48,[[["tileentity",3]]]],[11,"ne","","",48,[[["tileentity",3]]]],[11,"eq","","",49,[[["tileentities",3]]]],[11,"ne","","",49,[[["tileentities",3]]]],[11,"eq","","",50,[[["liquid",3]]]],[11,"ne","","",50,[[["liquid",3]]]],[11,"eq","","",51,[[["wiring",3]]]],[11,"ne","","",51,[[["wiring",3]]]],[11,"eq","","",52,[[["runlength",3]]]],[11,"ne","","",52,[[["runlength",3]]]],[11,"eq","","",53,[[["tileheader",3]]]],[11,"ne","","",53,[[["tileheader",3]]]],[11,"eq","","",54,[[["tileattributes",3]]]],[11,"ne","","",54,[[["tileattributes",3]]]],[11,"eq","","",55,[[["extendedtileattributes",3]]]],[11,"ne","","",55,[[["extendedtileattributes",3]]]],[11,"eq","","",56,[[["tile",3]]]],[11,"ne","","",56,[[["tile",3]]]],[11,"eq","","",57,[[["worldctx",3]]]],[11,"ne","","",57,[[["worldctx",3]]]],[11,"eq","","",77,[[["tilectx",3]]]],[11,"ne","","",77,[[["tilectx",3]]]],[11,"eq","","",78,[[["tilevec",3]]]],[11,"ne","","",78,[[["tilevec",3]]]],[11,"eq","","",63,[[["tilematrix",3]]]],[11,"ne","","",63,[[["tilematrix",3]]]],[11,"eq","","",58,[[["wall",3]]]],[11,"ne","","",58,[[["wall",3]]]],[11,"eq","","",59,[[["world",3]]]],[11,"ne","","",59,[[["world",3]]]],[11,"eq","","",79,[[["townmanager",3]]]],[11,"ne","","",79,[[["townmanager",3]]]],[11,"deref","wld::constants","",64,[[],["fnvhashmap",6]]],[11,"deref","","",65,[[],["fnvhashmap",6]]],[11,"deref","","",66,[[],["fnvhashmap",6]]],[11,"fmt","wld::enums","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","wld::models","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"index","","",60,[[]]],[11,"index","","",61,[[]]],[11,"index","","",78,[[]]],[11,"index","","",63,[[]]],[11,"index","","",79,[[]]],[11,"index_mut","","",78,[[]]],[11,"hash","wld::enums","",2,[[]]],[11,"hash","","",12,[[]]],[11,"try_from","","",1,[[["tbitvec",3]],["result",4]]],[11,"try_from","","",9,[[["tbitvec",3]],["result",4]]],[11,"initialize","wld::constants","",64,[[]]],[11,"initialize","","",65,[[]]],[11,"initialize","","",66,[[]]],[11,"from_i64","wld::enums","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_i64","","",1,[[],["option",4]]],[11,"from_u64","","",1,[[],["option",4]]],[11,"from_i64","","",2,[[],["option",4]]],[11,"from_u64","","",2,[[],["option",4]]],[11,"from_i64","","",3,[[],["option",4]]],[11,"from_u64","","",3,[[],["option",4]]],[11,"from_i64","","",5,[[],["option",4]]],[11,"from_u64","","",5,[[],["option",4]]],[11,"from_i64","","",6,[[],["option",4]]],[11,"from_u64","","",6,[[],["option",4]]],[11,"from_i64","","",7,[[],["option",4]]],[11,"from_u64","","",7,[[],["option",4]]],[11,"from_i64","","",8,[[],["option",4]]],[11,"from_u64","","",8,[[],["option",4]]],[11,"from_i64","","",9,[[],["option",4]]],[11,"from_u64","","",9,[[],["option",4]]],[11,"from_i64","","",12,[[],["option",4]]],[11,"from_u64","","",12,[[],["option",4]]],[11,"try_from_ctx","","",0,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",3,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",4,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",6,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",7,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",10,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",11,[[],["result",4]]],[11,"try_from_ctx","wld::models","",13,[[["blockctx",3]],["result",4]]],[11,"try_from_ctx","","",15,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",68,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",60,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",61,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",69,[[["worldctx",3]],["result",4]]],[11,"try_from_ctx","","",16,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",17,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",18,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",19,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",70,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",20,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",21,[[],["result",4]]],[11,"try_from_ctx","","",62,[[],["result",4]]],[11,"try_from_ctx","","",22,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",23,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",71,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",24,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",72,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",73,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",25,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",26,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",27,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",28,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",74,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",29,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",30,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",31,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",32,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",33,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",34,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",35,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",36,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",37,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",38,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",39,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",40,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",41,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",42,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",75,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",76,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",43,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",44,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",45,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",46,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",47,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",48,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",49,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",50,[[["liquidtype",4]],["result",4]]],[11,"try_from_ctx","","",52,[[["rletype",4]],["result",4]]],[11,"try_from_ctx","","",53,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",54,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",55,[[["tbitvec",3]],["result",4]]],[11,"try_from_ctx","","",56,[[["tilectx",3]],["result",4]]],[11,"try_from_ctx","","",63,[[["worldctx",3]],["result",4]]],[11,"try_from_ctx","","",58,[[],["result",4]]],[11,"try_from_ctx","","",79,[[],["result",4]]],[11,"try_into_ctx","","",15,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",17,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",19,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",23,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",25,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",26,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",27,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",29,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",30,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",32,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",33,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",34,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",35,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",36,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",37,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",38,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",39,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",40,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",41,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",43,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",44,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",45,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",46,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",47,[[["endian",4]],["result",4]]],[11,"size_with","wld::enums","",0,[[["endian",4]]]],[11,"size_with","","",2,[[["endian",4]]]],[11,"size_with","","",3,[[["endian",4]]]],[11,"size_with","","",4,[[["endian",4]]]],[11,"size_with","","",6,[[["endian",4]]]],[11,"size_with","","",7,[[["endian",4]]]],[11,"size_with","","",10,[[["endian",4]]]],[11,"size_with","","",11,[[]]],[11,"size_with","","",12,[[["endian",4]]]],[11,"size_with","wld::models","",13,[[]]],[11,"size_with","","",15,[[["endian",4]]]],[11,"size_with","","",68,[[]]],[11,"size_with","","",60,[[]]],[11,"size_with","","",61,[[]]],[11,"size_with","","",69,[[["worldctx",3]]]],[11,"size_with","","",16,[[["endian",4]]]],[11,"size_with","","",17,[[["endian",4]]]],[11,"size_with","","",18,[[["endian",4]]]],[11,"size_with","","",19,[[["endian",4]]]],[11,"size_with","","",70,[[]]],[11,"size_with","","",20,[[]]],[11,"size_with","","",21,[[]]],[11,"size_with","","",62,[[]]],[11,"size_with","","",22,[[]]],[11,"size_with","","",23,[[["endian",4]]]],[11,"size_with","","",71,[[]]],[11,"size_with","","",24,[[]]],[11,"size_with","","",72,[[]]],[11,"size_with","","",73,[[]]],[11,"size_with","","",25,[[["endian",4]]]],[11,"size_with","","",26,[[["endian",4]]]],[11,"size_with","","",27,[[["endian",4]]]],[11,"size_with","","",28,[[]]],[11,"size_with","","",74,[[["endian",4]]]],[11,"size_with","","",29,[[]]],[11,"size_with","","",30,[[]]],[11,"size_with","","",31,[[]]],[11,"size_with","","",32,[[["endian",4]]]],[11,"size_with","","",33,[[["endian",4]]]],[11,"size_with","","",34,[[["endian",4]]]],[11,"size_with","","",35,[[["endian",4]]]],[11,"size_with","","",36,[[["endian",4]]]],[11,"size_with","","",37,[[["endian",4]]]],[11,"size_with","","",38,[[["endian",4]]]],[11,"size_with","","",39,[[["endian",4]]]],[11,"size_with","","",40,[[["endian",4]]]],[11,"size_with","","",41,[[["endian",4]]]],[11,"size_with","","",42,[[]]],[11,"size_with","","",75,[[]]],[11,"size_with","","",76,[[]]],[11,"size_with","","",43,[[]]],[11,"size_with","","",44,[[["endian",4]]]],[11,"size_with","","",45,[[["endian",4]]]],[11,"size_with","","",46,[[]]],[11,"size_with","","",47,[[["endian",4]]]],[11,"size_with","","",48,[[]]],[11,"size_with","","",49,[[]]],[11,"size_with","","",50,[[]]],[11,"size_with","","",52,[[]]],[11,"size_with","","",53,[[["endian",4]]]],[11,"size_with","","",54,[[["endian",4]]]],[11,"size_with","","",55,[[["endian",4]]]],[11,"size_with","","",56,[[]]],[11,"size_with","","",78,[[]]],[11,"size_with","","",63,[[]]],[11,"size_with","","",58,[[]]],[11,"size_with","","",59,[[]]],[11,"size_with","","",79,[[]]],[11,"nil","","The \'nil UUID\'.",67,[[],["uuid",3]]],[11,"from_fields","","Creates a UUID from four field values in big-endian order.",67,[[],[["uuid",3],["result",4],["error",3]]]],[11,"from_fields_le","","Creates a UUID from four field values in little-endian…",67,[[],[["uuid",3],["result",4],["error",3]]]],[11,"from_u128","","Creates a UUID from a 128bit value in big-endian order.",67,[[],["uuid",3]]],[11,"from_u128_le","","Creates a UUID from a 128bit value in little-endian order.",67,[[],["uuid",3]]],[11,"from_slice","","Creates a UUID using the supplied big-endian bytes.",67,[[],[["uuid",3],["result",4],["error",3]]]],[11,"from_bytes","","Creates a UUID using the supplied big-endian bytes.",67,[[],["uuid",3]]],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with…",67,[[],[["uuid",3],["result",4],["error",3]]]],[11,"to_hyphenated","","Get a `Hyphenated` formatter.",67,[[],["hyphenated",3]]],[11,"to_hyphenated_ref","","Get a borrowed `HyphenatedRef` formatter.",67,[[],["hyphenatedref",3]]],[11,"to_simple","","Get a `Simple` formatter.",67,[[],["simple",3]]],[11,"to_simple_ref","","Get a borrowed `SimpleRef` formatter.",67,[[],["simpleref",3]]],[11,"to_urn","","Get a `Urn` formatter.",67,[[],["urn",3]]],[11,"to_urn_ref","","Get a borrowed `UrnRef` formatter.",67,[[],["urnref",3]]],[18,"NAMESPACE_DNS","","UUID namespace for Domain Name System (DNS).",67,null],[18,"NAMESPACE_OID","","UUID namespace for ISO Object Identifiers (OIDs).",67,null],[18,"NAMESPACE_URL","","UUID namespace for Uniform Resource Locators (URLs).",67,null],[18,"NAMESPACE_X500","","UUID namespace for X.500 Distinguished Names (DNs).",67,null],[11,"get_variant","","Returns the variant of the UUID structure.",67,[[],[["option",4],["variant",4]]]],[11,"get_version_num","","Returns the version number of the UUID.",67,[[]]],[11,"get_version","","Returns the version of the UUID.",67,[[],[["option",4],["version",4]]]],[11,"as_fields","","Returns the four field values of the UUID in big-endian…",67,[[]]],[11,"to_fields_le","","Returns the four field values of the UUID in little-endian…",67,[[]]],[11,"as_u128","","Returns a 128bit value containing the UUID data.",67,[[]]],[11,"to_u128_le","","Returns a 128bit little-endian value containing the UUID…",67,[[]]],[11,"as_bytes","","Returns an array of 16 octets containing the UUID data.",67,[[]]],[11,"is_nil","","Tests if the UUID is nil.",67,[[]]],[11,"encode_buffer","","A buffer that can be used for `encode_...` calls, that is…",67,[[]]]],"p":[[4,"AnglerQuestFish"],[4,"BlockShape"],[4,"BlockType"],[4,"EntityType"],[4,"EvilType"],[4,"HardmodeOreType"],[4,"InvasionType"],[4,"ItemType"],[4,"LiquidType"],[4,"RLEType"],[4,"TBool"],[4,"TileEntityType"],[4,"WallType"],[3,"Block"],[3,"BlockCtx"],[3,"Position"],[3,"HardmodeOre"],[3,"Offsets"],[3,"Header"],[3,"House"],[3,"ItemStack"],[3,"Chest"],[3,"Chests"],[3,"Mob"],[3,"NPC"],[3,"Bounds"],[3,"QuadrantStyle"],[3,"WorldStyle"],[3,"GeneratorInfo"],[3,"Properties"],[3,"Sign"],[3,"Signs"],[3,"BossesSlain"],[3,"BossesSlain2"],[3,"PillarStatus"],[3,"SavedNPCs"],[3,"EventsCompleted"],[3,"ShadowOrbStatus"],[3,"RainStatus"],[3,"InvasionStatus"],[3,"Backgrounds"],[3,"Clouds"],[3,"AnglerQuestStatus"],[3,"PartyStatus"],[3,"SandstormStatus"],[3,"OldOnesArmyStatus"],[3,"Status"],[3,"LogicSensor"],[3,"TileEntity"],[3,"TileEntities"],[3,"Liquid"],[3,"Wiring"],[3,"RunLength"],[3,"TileHeader"],[3,"TileAttributes"],[3,"ExtendedTileAttributes"],[3,"Tile"],[3,"WorldCtx"],[3,"Wall"],[3,"World"],[3,"VariableTBitVec"],[3,"TBitVec"],[3,"ItemStackVec"],[3,"TileMatrix"],[3,"BLOCKTYPE_COLOR_MAP"],[3,"WALLTYPE_COLOR_MAP"],[3,"PAINT_COLOR_MAP"],[3,"Uuid"],[3,"TString"],[3,"Footer"],[3,"HouseVec"],[3,"MobVec"],[3,"NPCVec"],[3,"PressurePlates"],[3,"TUuid"],[3,"MobKills"],[3,"PartyingNPCs"],[3,"TileCtx"],[3,"TileVec"],[3,"TownManager"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);